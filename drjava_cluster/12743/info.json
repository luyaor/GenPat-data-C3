{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2364704b0d96f7913c4cd3911b94b965", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27849cb97ec183135df06cc503c1deae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void checkFile(File relativeFile, String funnyName) throws IOException, InvalidPackageException", "signatureAfterChange": "   private void checkFile(File relativeFile, String funnyName) throws IOException, InvalidPackageException", "diff": ["-    DrJava.openCommandLineFiles(_mf, new String[] { path });", "+    DrJavaRoot.openCommandLineFiles(_mf, new String[] { path });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7bb17f310ad57b140f27a2a3ed45ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FontOption.java", "commitBeforeChange": "f64c69c26757bdbe8f4b64cff2c4f8aa2bb32b08", "commitAfterChange": "6a3834a3c5c8eaa789999544deeecfe26c96787a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public String format(Font f)", "signatureAfterChange": "    public String format(Font f)", "diff": ["-      StringBuffer str = new StringBuffer(f.getFamily());", "+      StringBuffer str = new StringBuffer(f.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e36d495c4c6f012336cf8df803f91e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsScriptController.java", "commitBeforeChange": "ff27298276d0b205036fe4b017017ca3896e9890", "commitAfterChange": "4ddb555fbb20c498ee5f44bc087ce9c848b2e79c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsScriptController(InteractionsScriptModel model, Action closeAction,                                       InteractionsPane interactionsPane)", "signatureAfterChange": "   public InteractionsScriptController(InteractionsScriptModel model, Action closeAction,                                       InteractionsPane interactionsPane)", "diff": ["-    _pane.addButton(_executeInteractionAction);", "+    // We've decided not to have a \"Current\" button for now. (It also crowds out the other buttons)", "+    //_pane.addButton(_currentInteractionAction);", "+    _pane.addButton(_executeInteractionAction, _interactionsPane);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3165d6c8e3341374c914cdbf1863d707", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "e67d165690a34c03b8dbd31cddaf42bddcc82e8f", "commitAfterChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-                       new StringOptionComponent(OptionConstants.JUNIT_3_8_2_LINK,", "-                                                 \"JUnit 3.8.2 URL\", this,", "-                                                 \"URL for the JUnit 3.8.2 API, for \\\"Open Java API Javadoc\\\".\"));", "+                       new StringOptionComponent(OptionConstants.JUNIT_LINK,", "+                                                 \"JUnit URL\", this,", "+                                                 \"URL for the JUnit API, for \\\"Open Java API Javadoc\\\".\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b3c8bc4aa4070412ef990862be23bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   private void init()", "signatureAfterChange": "   private void init()", "diff": ["-    MainFrame.setPopupLoc(this);", "+    MainFrame.setPopupLoc(this, _mainFrame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5650bf363e932b43d73b39b0c25a2800", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/FileOptionComponentTest.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    public void testCancelDoesNotChangeConfig()", "signatureAfterChange": "    public void testCancelDoesNotChangeConfig()", "diff": ["-    File testFile = FileOption.NULL_FILE;", "+    File testFile = FileOps.NULL_FILE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "633ccab9b179af66c040ea141c20d5e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e67d165690a34c03b8dbd31cddaf42bddcc82e8f", "commitAfterChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public void generateJavaAPISet()", "signatureAfterChange": "   public void generateJavaAPISet()", "diff": ["-      // add JUnit 3.8.2", "-      Set<JavaAPIListEntry> junit382APIList = _generateJavaAPISet(DrJava.getConfig().getSetting(JUNIT_3_8_2_LINK) + \"/\",", "-                                                                  \"\", // relative links", "-                                                                  \"/allclasses-junit3.8.2.html\");", "-      _javaAPISet.addAll(junit382APIList);", "+      // add JUnit", "+      Set<JavaAPIListEntry> junitAPIList = _generateJavaAPISet(DrJava.getConfig().getSetting(JUNIT_LINK) + \"/\",", "+                                                               \"\", // relative links", "+                                                               \"/allclasses-junit4.4.html\");", "+      _javaAPISet.addAll(junitAPIList);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842e7db9cfcbfd48ad0c322854007daa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "dd4842ca8ba89600798d5ff08666825edfadfb74", "commitAfterChange": "3e6dcdfe0dc2a3a2b00da441b478134258a2740f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["-    MainFrame.setPopupLoc(this);", "+    _mainFrame.setPopupLoc(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96cd04b026986cd8088afeee3514f562", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 77, "signatureBeforeChange": "   public static File getValidDirectory(final File origFile)", "signatureAfterChange": "   public static File getValidDirectory(final File origFile)", "diff": ["-    if ((file==FileOption.NULL_FILE)||(file == null)) {", "+    if ((file == FileOps.NULL_FILE) || (file == null)) {", "-    while (file != null && !file.exists()) {", "+    while (file != null && ! file.exists()) {", "-    if (!file.isDirectory()) {", "+    if (! file.isDirectory()) {", "-    if (file.exists() && file.isDirectory()) {", "-      return file;", "-    }", "+    if (file.exists() && file.isDirectory()) return file;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973e443e938a6a4c10a53afa7e22b0c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "e7660fffdb51451a3d4a61981945f6529addb874", "commitAfterChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["+   /** Test to make sure all elements of the project are read correctly into the IR */", "+  public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException {", "+    String proj2 =", "+      \";; DrJava project file.  Written with build: 2006??\\n\" +", "+      \"(proj-root-and-base (file (name \\\"src\\\")))\\n\" +", "+      \"(source-files ;; comment\\n\" +", "+      \"   (file (name \\\"sexp/Atom.java\\\")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/BoolAtom.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Cons.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/Lexer.java\\\")(select 0 0)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/NumberAtom.java\\\")(select 12 12)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \\\"sexp/SEList.java\\\")(select 0 0)))\\n\" + // doesn't have mod date", "+      \"(auxiliary ;; absolute file names\\n\" +", "+      \"   (file (name \" + convertToLiteral(new File(parent,\"junk/sexp/Tokens.java\").getCanonicalPath()) +", "+          \")(select 32 32)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +", "+      \"   (file (name \" + convertToLiteral(new File(parent,\"jdk1.5.0/JScrollPane.java\").getCanonicalPath()) +", "+          \")(select 9086 8516)(mod-date \\\"16-Jul-2004 03:45:23\\\")))\\n\" +", "+      \"(collapsed ;; relative paths\\n\" +", "+      \"   (path \\\"./[ Source Files ]/sexp/\\\")\\n\" +", "+      \"   (path \\\"./[ External ]/\\\"))\\n\" +", "+      \"(build-dir ;; absolute path\\n\" +", "+      \"   (file (name \"+ convertToLiteral(new File(parent, \"built\").getCanonicalPath()) + \")))\\n\" +", "+      \"(work-dir (file (name \\\"src\\\")))\\n\" +", "+      \"(classpaths\\n\" +", "+      \"   (file (name \"+ convertToLiteral(new File(parent, \"src/edu/rice/cs/lib\").getCanonicalPath()) + \")))\\n\" +", "+      \"(main-class\\n\" +", "+      \"   (file (name \\\"src/sexp/SEList.java\\\")))\";", "+    ", "+    File f = new File(parent, \"test2.pjt\");", "+", "+    IOUtil.writeStringToFile(f, proj2);", "+//    System.err.println(\"Project directory is \" + parent);", "+//    System.err.println(\"Project file is \" + f);", "+//    System.err.println(\"projFile exists? \" + f.exists());", "+    ProjectFileIR pfir = ProjectFileParserFacade.ONLY.parse(f);", "+//    System.err.println(\"buildDir = \" + pfir.getBuildDirectory().getCanonicalPath());", "+    assertEquals(\"number of source files\", 7, pfir.getSourceFiles().length);", "+    assertEquals(\"number of aux files\", 2, pfir.getAuxiliaryFiles().length);", "+    assertEquals(\"number of collapsed\", 2, pfir.getCollapsedPaths().length);", "+    assertEquals(\"number of classpaths\", 1, IterUtil.sizeOf(pfir.getClassPaths()));", "+    File base = f.getParentFile();", "+    File root = new File(base, \"src\");", "+    assertEquals(\"proj-root-and-base\", root.getPath(), pfir.getProjectRoot().getPath());", "+    assertEquals(\"first source filename\", new File(base,\"src/sexp/Atom.java\").getPath(), pfir.getSourceFiles()[0].getPath());", "+    assertEquals(\"mod-date value\", ", "+                 ProjectProfile.MOD_DATE_FORMAT.parse(\"16-Jul-2004 03:45:23\").getTime(),", "+                 pfir.getSourceFiles()[0].getSavedModDate());", "+    assertEquals(\"last source filename\", new File(root, \"sexp/SEList.java\").getPath(), ", "+                 pfir.getSourceFiles()[6].getPath());", "+    assertEquals(\"first aux filename\", new File(base,\"junk/sexp/Tokens.java\").getPath(), ", "+                 pfir.getAuxiliaryFiles()[0].getCanonicalPath());", "+    assertEquals(\"last collapsed path\", \"./[ External ]/\", pfir.getCollapsedPaths()[1]);", "+    assertEquals(\"build-dir name\", new File(base, \"built\").getCanonicalPath(), ", "+                 pfir.getBuildDirectory().getCanonicalPath());", "+    assertEquals(\"work-dir name\", new File(base, \"src\").getCanonicalPath(), ", "+                 pfir.getWorkingDirectory().getCanonicalPath());", "+    assertEquals(\"classpath name\", new File(base, \"src/edu/rice/cs/lib\").getCanonicalPath(), ", "+                 IterUtil.first(pfir.getClassPaths()).getCanonicalPath());", "+    assertEquals(\"main-class name\", new File(root, \"sexp/SEList.java\").getCanonicalPath(), ", "+                 pfir.getMainClass().getCanonicalPath());", "+  }", "-  public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException {", "-    String proj1 =", "-    File f = new File(parent, \"test1.pjt\");", "-    IOUtil.writeStringToFile(f, proj1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a9a1ed963f1ad980d9e3406f5275111", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      public void testBlockWithEmptyStatements() throws ParseException", "signatureAfterChange": "      public void testBlockWithEmptyStatements() throws ParseException", "diff": ["-    stmts.add(new SimpleAssignExpression(new QualifiedName(idnt2),new SimpleAllocation(new ReferenceType(\"Vector\"), null)));", "+    stmts.add(new SimpleAssignExpression(new QualifiedName(idnt2),new SimpleAllocation(new ReferenceTypeName(\"Vector\"), null)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e5d65f9044ba17705e39678553f6f63", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   private JMenu _setUpFileMenu()", "signatureAfterChange": "   private JMenu _setUpFileMenu()", "diff": ["-    _abortInteractionMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_PAUSE, ActionEvent.CTRL_MASK));", "+    _abortInteractionMenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2337330278bdb1e5a7285bdbc855067", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ef93e6cc3a79f29ed28debb1108f1338b9a974ad", "commitAfterChange": "76157e15bbd52f4d2639058382773284b7c9c0bd", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 468, "signatureBeforeChange": "   public void openFolder(DirectoryChooser chooser)", "signatureAfterChange": "   public void openFolder(DirectoryChooser chooser)", "diff": ["-    String type = \"'.\" + DrJavaRoot.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";", "+    String type = \"'\" + OptionConstants.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5582be89d3cc2f181b2e35727d14b6a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 536, "methodNumberAfterChange": 533, "signatureBeforeChange": "    final private boolean jj_3R_181()", "signatureAfterChange": "    final private boolean jj_3R_181()", "diff": ["-", "-  final private boolean jj_3R_181() {", "-    if (jj_scan_token(LBRACE)) return true;", "-    Token xsp;", "-    xsp = jj_scanpos;", "-    if (jj_3R_392()) jj_scanpos = xsp;", "-    xsp = jj_scanpos;", "-    if (jj_scan_token(86)) jj_scanpos = xsp;", "-    if (jj_scan_token(RBRACE)) return true;", "-    return false;", "-  }", "+", "+  final private boolean jj_3R_181() {", "+    if (jj_scan_token(LBRACE)) return true;", "+    Token xsp;", "+    xsp = jj_scanpos;", "+    if (jj_3R_394()) jj_scanpos = xsp;", "+    xsp = jj_scanpos;", "+    if (jj_scan_token(86)) jj_scanpos = xsp;", "+    if (jj_scan_token(RBRACE)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce030efef223a96311ac9c00e0a70c1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "47c398bb655e51c115c8c0eb3d0935db42834771", "commitAfterChange": "62776e907e3e6dddd6b4161559ae3b70f27cc2e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testDups() throws BadLocationException", "signatureAfterChange": "   public void testDups() throws BadLocationException", "diff": ["-    DrJava.openCommandLineFiles(_mf, list);", "+    DrJavaRoot.openCommandLineFiles(_mf, list);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3eba874ea71712543e3ac4a01e09b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ConfigFrame(MainFrame frame)", "signatureAfterChange": "   public ConfigFrame(MainFrame frame)", "diff": ["-    _fileOptionChooser.setFileFilter(ClasspathFilter.ONLY);", "+    _fileOptionChooser.setFileFilter(ClassPathFilter.ONLY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e46ca686aae7e343f20801483215c665", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "commitAfterChange": "736bd820b2cec64b47667921b5d5c82d9c502af8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 25, "signatureBeforeChange": "      public synchronized String toString()", "signatureAfterChange": "          public String toString()", "diff": ["-  public synchronized String toString() {", "-    return \"Document Cache: LRU: \" + lru;", "+    ", "+    public String toString() {", "+      return \"Manager for: \" + _doc;", "+    } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a3b08fb04501b3784ac4367cc57242", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "c6d47a91516f048d660d1fffa90740efe29371c5", "commitAfterChange": "68368361f4380d060555d6ff4452e2a0dbbd3540", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void _createPanels()", "signatureAfterChange": "   private void _createPanels()", "diff": ["-", "+/*", "-    /*", "+    */", "+    ", "-    */", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74ce1de50d5ab3303a6fab532663206", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "signatureAfterChange": "   private void _dumpVariablesIntoInterpreterAndSwitch() throws DebugException, AbsentInformationException", "diff": ["-            List<Type> classes = _vm.classesByName(localVar.typeName());  //JDK 1.5 will eliminate this warning", "+            List<ReferenceType> classes = _vm.classesByName(localVar.typeName());  //JDK 1.5 will eliminate this warning"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbd2270aed8846b7c1716750625545fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "3d71370f387f5ff990190106fcbfa93f8a159b9b", "commitAfterChange": "c7cf97829e412463c33fef76eb49ab99dfa7be2a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testConstructOneDocWithLineNums()", "signatureAfterChange": "   public void testConstructOneDocWithLineNums()", "diff": ["-    assertEquals(\"Should have 4 compiler errors.\", 4, model.getNumErrors());", "+    assertEquals(\"Should have 4 errors.\", 4, model.getNumErrors());", "-    assertEquals(\"Should have  compiler errors\" , 3, model.getNumCompErrors());", "+    assertEquals(\"Should have 3 compiler errors\" , 3, model.getNumCompilerErrors());"]}], "num": 12743}