{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63f9e00d271f0d2c4a57f8b56484cea7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0efe4b34f5450cbf6cded1c5cc379789", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 482, "methodNumberAfterChange": 482, "signatureBeforeChange": "   private void _setUpContextMenus()", "signatureAfterChange": "   private void _setUpContextMenus()", "diff": ["-    // This listener updates the _cachedCaretPosition in the _interactionsController when the cursor is manually set.", "-    _interactionsPane.addMouseListener(new MouseInputAdapter() {", "-      public void mouseClicked(MouseEvent e) { ", "-        _interactionsController.setCachedCaretPos(_interactionsPane.viewToModel(e.getPoint()));", "-      }", "-    });", "+//    // This listener updates the _cachedCaretPosition in the _interactionsController when the cursor is manually set.", "+//    _interactionsPane.addMouseListener(new MouseInputAdapter() {", "+//      public void mouseClicked(MouseEvent e) { ", "+//        _interactionsController.setCachedCaretPos(_interactionsPane.viewToModel(e.getPoint()));", "+//      }", "+//    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ee84bfeb2c8ab9fb528eec703987c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7b6e3a6da13b7dd368ad89b9fff988959ce6f154", "commitAfterChange": "fa3177c8f1a9365cfe319bc8c57ed12beb180d00", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    int state = config.getSetting(WINDOW_STATE).intValue();", "+    //ensure that we don't set window state to minimized", "+    state &= ~Frame.ICONIFIED;", "+    ", "+    if (!Toolkit.getDefaultToolkit().isFrameStateSupported(state)) {", "+      //we have a bad state, so reset to default", "+      state = WINDOW_STATE.getDefault();", "+    }", "+", "+    ", "+    //Work-aroung for Java bug #6365898?", "+    //setExtendedState does not work until the window in shown on Linux.", "+    final int stateCopy = state;", "+    addWindowListener(new WindowAdapter() {", "+      public void windowOpened(WindowEvent e) {", "+        setExtendedState(stateCopy);", "+        //this is a one-off listener", "+        removeWindowListener(this);", "+      }", "+    });"]}], "num": 5690}