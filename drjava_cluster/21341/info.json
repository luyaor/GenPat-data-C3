{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3043870a8e2ee135a2c5b68ac840afed", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22560593322fdb010cdbba4552790573", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/FindReplaceDialog.java", "commitBeforeChange": "0627832e466203fb3c14e01c56a508fafd93842f", "commitAfterChange": "87bfc805ab019d126f95cd8bea04bfba0537a5ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public FindReplaceDialog(Frame frame, DefinitionsPane defPane)", "signatureAfterChange": "   public FindReplaceDialog(Frame frame, DefinitionsPane defPane)", "diff": ["-    _currentPosition = _defPane.getCaretPosition();", "-    final JTextField findField = new JTextField(10);", "-    final JTextField replaceField = new JTextField(10);", "-      msgString1, findField, msgString2, replaceField", "+      msgString1, _findField, msgString2, _replaceField", "-    _findNextButton = new JButton(\"Find Next\");", "-    _replaceButton = new JButton(\"Replace\");", "-    _replaceFindButton = new JButton(\"Replace and Find Next\");", "-    _replaceAllButton = new JButton(\"Replace All\");", "-    _closeButton = new JButton(\"Close\");", "+    _findNextButton = new JButton(_findNextAction);", "+    _replaceButton = new JButton(_replaceAction);", "+    _replaceFindButton = new JButton(_replaceFindAction);", "+    _replaceAllButton = new JButton(_replaceAllAction);", "+    _closeButton = new JButton(_closeAction);", "-    outside.add(findField);", "+    outside.add(_findField);", "-    outside.add(replaceField);", "+    outside.add(_replaceField);", "-    setModal(false);", "+    setModal(true);", "+    ", "+    _findField.addActionListener((AbstractAction)_findNextAction);", "+    ", "-    findField.getDocument().addDocumentListener(new DocumentListener() {", "+    _findField.getDocument().addDocumentListener(new DocumentListener() {", "+        _machine.makeCurrentOffsetStart();", "+        _machine.makeCurrentOffsetStart();", "+        _machine.makeCurrentOffsetStart();", "-    ", "-    // DocumentListener for the actual document", "-    _defPane.getDocument().addDocumentListener(new DocumentListener() {", "-", "-      /**", "-       * If attributes have changed in the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-      public void changedUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-", "-      /**", "-       * If text has been deleted from the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-      public void insertUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-", "-      /**", "-       * If text has been inserted into the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-       public void removeUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-", "-    // Add a listener to see if there's a change in position in the document.", "-    _defPane.addCaretListener(new CaretListener() {", "-", "-      /**", "-       * If the caret has moved in the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-       public void caretUpdate(CaretEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    ", "-    /** ", "-     * We want to enable the \"Replace\" and \"Replace and Find Next\"", "-     * fields iff we've found an instance of the find field in", "-     * the document.", "-     */", "-    _findNextButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Find Next\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        //System.err.println(e.getActionCommand());", "-        boolean found = _defPane.findNextText(_fWord);", "-        if (found) {", "-          _replaceButton.setEnabled(true);", "-          _replaceFindButton.setEnabled(true);", "-        } ", "-        else {", "-          Toolkit.getDefaultToolkit().beep();", "-          _message.setText(\"Search text \\\"\" + _fWord + \"\\\" not found.\");", "-        }", "-      }", "-    });", "-    ", "-    _replaceButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        // replaces the occurance at the current position", "-        _defPane.replaceText(_fWord, _rWord);", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    _replaceFindButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace and Find Next\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        // replaces the occurance at the current position", "-        boolean found = _defPane.replaceText(_fWord, _rWord);", "-        // and finds the next word", "-        if (found)", "-          found = _defPane.findNextText(_fWord);", "-        if (found) {", "-          _replaceButton.setEnabled(true);", "-          _replaceFindButton.setEnabled(true);", "-        } ", "-        else {", "-          _replaceButton.setEnabled(false);", "-          _replaceFindButton.setEnabled(false);", "-          Toolkit.getDefaultToolkit().beep();", "-          _message.setText(\"Search text \\\"\" + _fWord + \"\\\" not found.\");", "-        }", "-      }", "-    });", "-    _replaceAllButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace All\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        int count = _defPane.replaceAllText(_fWord, _rWord);", "-        _message.setText(\"Replaced \" + count + \" occurrence\" + ((count == 1) ? \"\" :", "-            \"s\") + \".\");", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    ", "-    _closeButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * Closes the Find/Replace dialog.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        setVisible(false);", "-      }", "-    });", "-    ", "+        ", "-    setSize(520, 300);", "+    setSize(520, 200);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12ea8da711e6da52e220acbbe70ef26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "0627832e466203fb3c14e01c56a508fafd93842f", "commitAfterChange": "87bfc805ab019d126f95cd8bea04bfba0537a5ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public FindReplaceDialog(Frame frame, DefinitionsPane defPane)", "signatureAfterChange": "   public FindReplaceDialog(Frame frame, DefinitionsPane defPane)", "diff": ["-    _currentPosition = _defPane.getCaretPosition();", "-    final JTextField findField = new JTextField(10);", "-    final JTextField replaceField = new JTextField(10);", "-      msgString1, findField, msgString2, replaceField", "+      msgString1, _findField, msgString2, _replaceField", "-    _findNextButton = new JButton(\"Find Next\");", "-    _replaceButton = new JButton(\"Replace\");", "-    _replaceFindButton = new JButton(\"Replace and Find Next\");", "-    _replaceAllButton = new JButton(\"Replace All\");", "-    _closeButton = new JButton(\"Close\");", "+    _findNextButton = new JButton(_findNextAction);", "+    _replaceButton = new JButton(_replaceAction);", "+    _replaceFindButton = new JButton(_replaceFindAction);", "+    _replaceAllButton = new JButton(_replaceAllAction);", "+    _closeButton = new JButton(_closeAction);", "-    outside.add(findField);", "+    outside.add(_findField);", "-    outside.add(replaceField);", "+    outside.add(_replaceField);", "-    setModal(false);", "+    setModal(true);", "+    ", "+    _findField.addActionListener((AbstractAction)_findNextAction);", "+    ", "-    findField.getDocument().addDocumentListener(new DocumentListener() {", "+    _findField.getDocument().addDocumentListener(new DocumentListener() {", "+        _machine.makeCurrentOffsetStart();", "+        _machine.makeCurrentOffsetStart();", "+        _machine.makeCurrentOffsetStart();", "-    ", "-    // DocumentListener for the actual document", "-    _defPane.getDocument().addDocumentListener(new DocumentListener() {", "-", "-      /**", "-       * If attributes have changed in the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-      public void changedUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-", "-      /**", "-       * If text has been deleted from the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-      public void insertUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-", "-      /**", "-       * If text has been inserted into the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-       public void removeUpdate(DocumentEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-", "-    // Add a listener to see if there's a change in position in the document.", "-    _defPane.addCaretListener(new CaretListener() {", "-", "-      /**", "-       * If the caret has moved in the document, gray out", "-       * \"Replace\" and \"Replace and Find Next\" buttons.", "-       * @param e the event caught by this listener", "-       */", "-       public void caretUpdate(CaretEvent e) {", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    ", "-    /** ", "-     * We want to enable the \"Replace\" and \"Replace and Find Next\"", "-     * fields iff we've found an instance of the find field in", "-     * the document.", "-     */", "-    _findNextButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Find Next\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        //System.err.println(e.getActionCommand());", "-        boolean found = _defPane.findNextText(_fWord);", "-        if (found) {", "-          _replaceButton.setEnabled(true);", "-          _replaceFindButton.setEnabled(true);", "-        } ", "-        else {", "-          Toolkit.getDefaultToolkit().beep();", "-          _message.setText(\"Search text \\\"\" + _fWord + \"\\\" not found.\");", "-        }", "-      }", "-    });", "-    ", "-    _replaceButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        // replaces the occurance at the current position", "-        _defPane.replaceText(_fWord, _rWord);", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    _replaceFindButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace and Find Next\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        // replaces the occurance at the current position", "-        boolean found = _defPane.replaceText(_fWord, _rWord);", "-        // and finds the next word", "-        if (found)", "-          found = _defPane.findNextText(_fWord);", "-        if (found) {", "-          _replaceButton.setEnabled(true);", "-          _replaceFindButton.setEnabled(true);", "-        } ", "-        else {", "-          _replaceButton.setEnabled(false);", "-          _replaceFindButton.setEnabled(false);", "-          Toolkit.getDefaultToolkit().beep();", "-          _message.setText(\"Search text \\\"\" + _fWord + \"\\\" not found.\");", "-        }", "-      }", "-    });", "-    _replaceAllButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * What happens when the user presses the \"Replace All\" button.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        _fWord = findField.getText();", "-        _rWord = replaceField.getText();", "-        _message.setText(\"\");", "-        int count = _defPane.replaceAllText(_fWord, _rWord);", "-        _message.setText(\"Replaced \" + count + \" occurrence\" + ((count == 1) ? \"\" :", "-            \"s\") + \".\");", "-        _replaceButton.setEnabled(false);", "-        _replaceFindButton.setEnabled(false);", "-      }", "-    });", "-    ", "-    _closeButton.addActionListener(new ActionListener() {", "-", "-      /**", "-       * Closes the Find/Replace dialog.", "-       * @param e", "-       */", "-      public void actionPerformed(ActionEvent e) {", "-        setVisible(false);", "-      }", "-    });", "-    ", "+        ", "-    setSize(520, 300);", "+    setSize(520, 200);"]}], "num": 21341}