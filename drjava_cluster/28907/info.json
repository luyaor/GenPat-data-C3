{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "701a4638a9ade54c907c17f0d062e942", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7419e0d7f1e21f9119f3402772d8165e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/SBVectorFactory.java", "commitBeforeChange": "a1978d98aea3cdbfd80a763b6474ba523e607de6", "commitAfterChange": "ac55d90528653f74034b709e69818ba05a360584", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Vector<StateBlock> generate \t(ModelList<ReducedToken>.Iterator it, int offset)", "signatureAfterChange": " \tpublic static Vector<StateBlock> generate \t(ModelList<ReducedToken>.Iterator it, int offset,int adjustment)", "diff": ["+\t */", "+\tpublic static Vector<StateBlock> generate", "+\t(ModelList<ReducedToken>.Iterator it, int offset,int adjustment)", "+\t\t{", "+\t\t\t//can never be at head at start.", "+\t\t\tVector<StateBlock> blocks = new Vector<StateBlock>();", "+\t\t\tint prevState = -1;", "+\t\t\tint currState = -1;", "+\t\t\tint length = 0;", "+\t\t\tint start = adjustment;", "+\t\t\t//if innitially at Start... begin on first char.", "+\t\t\t", "+\t\t\t//must check the previous character's state", "+\t\t\tif (!it.atStart())", "+\t\t\t\tit.prev();", "+\t\t\t\t", "+\t\t\tif (it.atStart())", "+\t\t\t\t\tit.next();", "+\t\t\telse", "+\t\t\t\tstart = start + (-1 * it.current().getSize());", "+", "+\t\t\tif (!it.atEnd())", "+\t\t\t\tprevState = it.current().getHighlight();", "+\t\t\t", "+\t\t\twhile (!it.atEnd()){", "+\t\t\t\tcurrState = it.current().getHighlight();", "+\t\t\t\tif (prevState == currState){", "+\t\t\t\t\tlength = length + it.current().getSize();", "+\t\t\t\t\tit.next();", "+\t\t\t\t}", "+\t\t\t\telse {", "+\t\t\t\t\tif (prevState != ReducedToken.FREE)", "+\t\t\t\t\t\tblocks.addElement(new StateBlock(start,length,prevState));", "+\t\t\t\t\tprevState = currState;", "+\t\t\t\t\tstart = start + length; ", "+\t\t\t\t\tlength = 0;", "+\t\t\t\t}\t", "+\t\t\t}", "+\t\t\tif ((length > 0) && (prevState != ReducedToken.FREE))", "+\t\t\t\tblocks.addElement(new StateBlock(start,length,prevState));", "+\t\t\treturn blocks;", "+\t\t}", "-\t\t\tint start = -1 * offset;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88811bff84279471d025ab1dcbb0af3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d69a695e2a4c50297ca46eac3e2dd8daa8c87cba", "commitAfterChange": "2fa0f9ce97ae10d7a34a292e091ab0ac600c58ce", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "   private JMenu _setUpToolsMenu()", "signatureAfterChange": "   private JMenu _setUpToolsMenu(int mask)", "diff": ["-  private JMenu _setUpToolsMenu() {", "+  private JMenu _setUpToolsMenu(int mask) {", "-    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, 0));", "+    tmpItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_F5, mask));", "-      .setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, ActionEvent.CTRL_MASK));", "+      .setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0));"]}], "num": 28907}