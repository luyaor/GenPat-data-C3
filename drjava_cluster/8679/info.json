{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd2b9847bf3c1bd5b720aebf8a5c54d8", "detectedBy": ["DIFF_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358d77db144e5ecc7625af588be135ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprivate void _breakComment(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": " \tprivate void _breakComment(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["+\t\t\telse if (copyCursor.current().isDoubleEscape())", "+\t\t\t\t{", "+\t\t\t\t\tcopyCursor.current().setType(\"\\\\\");", "+\t\t\t\t\tcopyCursor.current().setState(getStateAtCurrent());", "+\t\t\t\t\tcopyCursor.insert(Brace.MakeBrace(\"\\\\\", getStateAtCurrent()));", "+\t\t\t\t\tcopyCursor.next();", "+\t\t\t\t\t_updateBasedOnCurrentState();", "+\t\t\t\t\t//_offset = 0;", "+\t\t\t\t}", "+\t\t\telse if (copyCursor.current().isEscapedQuote())", "+\t\t\t\t{", "+\t\t\t\t\tcopyCursor.current().setType(\"\\\"\");", "+\t\t\t\t\tcopyCursor.current().setState(getStateAtCurrent());", "+\t\t\t\t\tcopyCursor.insert(Brace.MakeBrace(\"\\\\\", getStateAtCurrent()));", "+\t\t\t\t\tcopyCursor.next();", "+\t\t\t\t\t_updateBasedOnCurrentState();", "+\t\t\t\t\t//_offset = 0;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ae10b326bfb746a3617a9b059ee303d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModel.java", "commitBeforeChange": "7b3e2baaa631329b7e3233840fa805eba66e7b61", "commitAfterChange": "c2f69793a9db2959df5a982198b4877236b2e5a0", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tprivate int _calculateOffset(int delToSizePrev, String delToTypePrev, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t int delToSizeCurr, String delToTypeCurr, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator delTo)", "signatureAfterChange": " \tprivate int _calculateOffset(int delToSizePrev, String delToTypePrev, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t int delToSizeCurr, String delToTypeCurr, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t ModelList<ReducedToken>.Iterator delTo)", "diff": ["-\t\t\t\t\t\t\t", "+\t\t\telse if (delToTypePrev.equals(\"\\\\\")){", "+\t\t\t\tif(delToTypeCurr.equals(\"\\\\\\\\\") && ", "+\t\t\t\t\t _checkPrevEquals(delTo,\"\\\\\")){ //because pointer will be at *", "+\t\t\t\t\tdelTo.prev();", "+\t\t\t\t\treturn 1;", "+\t\t\t\t}", "+\t\t\t\telse if (delToTypeCurr.equals(\"\\\\\\\"\") &&", "+\t\t\t\t\t\t\t\t _checkPrevEquals(delTo,\"\\\"\")){", "+\t\t\t\t\tdelTo.prev();", "+\t\t\t\t\treturn 1;", "+\t\t\t\t}", "+\t\t\t\telse if (delToTypeCurr.equals(\"\\\\\") &&", "+\t\t\t\t\t\t\t\t delTo.current().getType().equals(\"\\\\\\\\\"))", "+\t\t\t\t\treturn 1;", "+\t\t\t\telse if (delToTypeCurr.equals(\"\\\"\") &&", "+\t\t\t\t\t\t\t\t delTo.current().getType().equals(\"\\\\\\\"\"))", "+\t\t\t\t\treturn 1;", "+\t\t\t\t", "+\t\t\t\t", "+\t\t\t}", "+\t\t\t\t"]}], "num": 8679}