{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a30f7f815211f525cce69bde44514c97", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb4f02fa723ea825628b1f544ec0ae4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f520b1b5f1b15642429d7c7844d7ac7a96f3e402", "commitAfterChange": "e7fa83968a0076b95166203c3ff9a5bddde8dfee", "methodNumberBeforeChange": 589, "methodNumberAfterChange": 589, "signatureBeforeChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "signatureAfterChange": "   public void scrollToDocumentAndOffset(final OpenDefinitionsDocument doc, final int offset,                                          final boolean shouldHighlight, final boolean shouldAddToHistory)", "diff": ["+    ", "+    assert duringInit() || EventQueue.isDispatchThread();", "-      _model.setActiveDocument(doc);", "+      _model.setActiveDocument(doc);  // blocks until active document is set internally", "-    ", "-    Runnable command = new Runnable() {  ", "-      public void run() {", "+   ", "+    /* The commented out code caused the debugger to deadlock in some situations.  After frame initialization, this", "+     * method is only called in event thread. */", "+//    Runnable command = new Runnable() {  ", "+//      public void run() {", "-      }", "-    };", "+//      }", "+//    };", "-    /* if (toSameDoc) Utilities.invokeLater(command);  ", "-     else */ EventQueue.invokeLater(command);", "+//    if (toSameDoc) Utilities.invokeLater(command);  ", "+//    else EventQueue.invokeLater(command);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdda1adadf2a0202e3881f790556310d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 354, "methodNumberAfterChange": 354, "signatureBeforeChange": "   private DirectoryChooser makeFolderChooser(final File workDir)", "signatureAfterChange": "   private DirectoryChooser makeFolderChooser(final File workDir)", "diff": ["+    assert duringInit() || EventQueue.isDispatchThread();", "-    Utilities.invokeLater(new Runnable() {", "-      public void run() {", "-        dc.setSelectedFile(workDir);", "-        dc.setApproveButtonText(\"Select\");", "-        dc.setDialogTitle(\"Open Folder\");", "-        dc.setAccessory(_openRecursiveCheckBox);", "-      }", "-    });", "+//    Utilities.invokeLater(new Runnable() {", "+//      public void run() {", "+    dc.setSelectedFile(workDir);", "+    dc.setApproveButtonText(\"Select\");", "+    dc.setDialogTitle(\"Open Folder\");", "+    dc.setAccessory(_openRecursiveCheckBox);", "+//      }", "+//    });"]}], "num": 16118}