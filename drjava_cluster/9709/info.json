{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d1467842b7a439db7613f21145e3b630", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f96b465213c54b9b2e593f76da528e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/DebugUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public static Predicate2<Thread, StackTraceElement> whiteListThreadFilter(final Thread... threads)", "signatureAfterChange": "     public void run(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-   */", "-  public static Predicate2<Thread, StackTraceElement> whiteListThreadFilter(final Thread... threads) {", "-    return new Predicate2<Thread, StackTraceElement>() {", "-      public boolean contains(Thread thread, StackTraceElement location) {", "-        for (Thread t : threads) {", "-          if (thread.equals(t)) { return true; }", "-        return false;", "-    };", "+    }", "+    public void run(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "+      try { _r.run(arg1, arg2, arg3, arg4); }", "+      catch (Throwable t) { _log.log(t); }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc774f9926b33f8b3fb18b24ed17481", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/DebugUtil.java", "commitBeforeChange": "dba5d2158724820f410d4efff37289045b3aca4c", "commitAfterChange": "6db2338d4c58e83974c8e6232ba8e48286d65b5e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public static Predicate2<Thread, StackTraceElement> blackListThreadFilter(final Thread... threads)", "signatureAfterChange": "     public LogExceptionRunnable4(Log log, Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r)", "diff": ["-   */", "-  public static Predicate2<Thread, StackTraceElement> blackListThreadFilter(final Thread... threads) {", "-    return new Predicate2<Thread, StackTraceElement>() {", "-      public boolean contains(Thread thread, StackTraceElement location) {", "-        for (Thread t : threads) {", "-          if (thread.equals(t)) { return false; }", "-        return true;", "-    };", "+    private final Runnable4<? super T1, ? super T2, ? super T3, ? super T4> _r;", "+    public LogExceptionRunnable4(Log log, Runnable4<? super T1, ? super T2, ? super T3, ? super T4> r) {", "+      _log = log; _r = r;", "+    }"]}], "num": 9709}