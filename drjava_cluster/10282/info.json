{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4976f86eb83d098ad2c526eec33b7e83", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e33278c3d23da24e3bc3736d868e4e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "b2d820b253c15b02ecb50e43e9a336a56dadd45e", "commitAfterChange": "a80c6de11e537b6579c447ea812ef2f4f98b5f2f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 63, "signatureBeforeChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className,                               final boolean shouldHighlight)", "signatureAfterChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className,                               final boolean shouldHighlight)", "diff": ["-  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, ", "+  private void openAndScroll(final OpenDefinitionsDocument doc, int line, String className, ", "+      if (LanguageLevelStackTraceMapper.isLLFile(doc.getRawFile())) {", "+        // map J", "+      }", "+      final int llLine = line;", "-      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, llLine, shouldHighlight); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4035530e0e9193b0fb649e3e423aec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 57, "signatureBeforeChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight)", "signatureAfterChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className,                               final boolean shouldHighlight)", "diff": ["-  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight) {", "+  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, ", "+                             final boolean shouldHighlight) {", "+    assert EventQueue.isDispatchThread();", "-      Utilities.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });"]}], "num": 10282}