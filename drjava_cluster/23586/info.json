{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92d3817d3054ca62bf86f523b470f211", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2adac7b262a2bf9817ca60d6daa6c675", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "29ec68db51be49631902c1a08dc8658c156745b6", "commitAfterChange": "ab72d5391a7476aed8a2fc83f5cb9b83bb5fe1d3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 27, "signatureBeforeChange": "       public void mousePressed(MouseEvent e)", "signatureAfterChange": "          public void mousePressed(MouseEvent e)", "diff": ["-    this.addMouseListener( new MouseAdapter() {", "-      public void mousePressed(MouseEvent e) {", "-        setCaretPosition(viewToModel(e.getPoint()));", "-        maybeShowPopup(e);", "-        if (_toggleBreakpointMenuItem != null) {", "-          _toggleBreakpointMenuItem.setEnabled(_mainFrame.inDebugMode());", "-        }", "-      }", "+    ", "+    public void mousePressed(MouseEvent e) {", "+      ", "+      _lastMouseClick = e;", "+      ", "+      // if not in the selected area, ", "+      if ( (viewToModel(e.getPoint()) < getSelectionStart()) || (viewToModel(e.getPoint()) > getSelectionEnd()) ) {", "+        //move caret to clicked position, deselecting previous selection", "+        setCaretPosition(viewToModel(e.getPoint()));", "+      }", "+      ", "+      maybeShowPopup(e);", "+      //Don't show the \"Toggle Breakpoint\" option in the contextual menu, if the JMenuItem is null.", "+      if (_toggleBreakpointMenuItem != null) {", "+        _toggleBreakpointMenuItem.setEnabled(_mainFrame.inDebugMode());", "+      }", "+      ", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7508893daf56cb502bcb672f99585cfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "b4cb953a15f76465c4fdfdd0a3efe47737f78efc", "commitAfterChange": "da8b20243b85298aada190df10fa721e07aae787", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 153, "signatureBeforeChange": "              public void forWildcard(Wildcard t)", "signatureAfterChange": "          public void forWildcard(Wildcard t)", "diff": ["+    ", "+    public void forWildcard(Wildcard t) {", "+      _result.append(\"?\");", "+      if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "+        _result.append(\" extends \");", "+        run(t.symbol().upperBound());", "+      }", "+      if (!isEqual(t.symbol().lowerBound(), NULL)) {", "+        _result.append(\" super \");", "+        run(t.symbol().lowerBound());", "+      }", "+    }", "-      ", "-      public void forWildcard(Wildcard t) {", "-        result.append(\"?\");", "-        if (!isEqual(t.symbol().upperBound(), OBJECT)) {", "-          result.append(\" extends \");", "-          run(t.symbol().upperBound());", "-        }", "-        if (!isEqual(t.symbol().lowerBound(), NULL)) {", "-          result.append(\" super \");", "-          run(t.symbol().lowerBound());", "-        }", "-      }"]}], "num": 23586}