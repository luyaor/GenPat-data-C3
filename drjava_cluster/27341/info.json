{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "482ee50c68ec96d8043d3747d9a4b637", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c5e6ddf89337b592fe57cc80df5f67e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void removeAuxiliaryFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public void removeAuxiliaryFile(OpenDefinitionsDocument doc)", "diff": ["-    File file;", "-    try                           { file = doc.getFile(); } ", "-    catch(FileMovedException fme) { file = fme.getFile(); }", "-    ", "-    String path = \"\";", "-    try { path = file.getCanonicalPath(); }", "-    catch(IOException e) { throw new UnexpectedException(e); }", "+    File file = doc.getRawFile();", "+    if (file == null) return;  // Should never happen unless doc is Untitled.", "+    String path = FileOps.getCanonicalPath(file);", "-        try { ", "-          if (it.next().getCanonicalPath().equals(path)) {", "-            it.remove();", "-            setProjectChanged(true);", "-            break;", "-          }", "-        } ", "-        catch(IOException e) { /* Ignore f */ }", "-      }", "+        if (path.equals(FileOps.getCanonicalPath(it.next()))) {", "+          it.remove();", "+          setProjectChanged(true);", "+          break;", "+        }", "+      } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86011477b2b7651fb1927debd9adbf2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "35ca78e33b0503c2a6070986170dae99ba9dcb1a", "commitAfterChange": "6136e4c5753a47e4bcb40afa831b9c58e353fd69", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "              public boolean isProjectFile(File f)", "signatureAfterChange": "          public boolean inProject(File f)", "diff": ["+    ", "+    public boolean inProject(File f) {", "+      String path;", "+      if (f == null) return false;", "-      public boolean isProjectFile(File f) {", "-        String path;", "-        ", "-        if (f == null) return false;", "-        ", "-        try { ", "-          path = f.getCanonicalPath();", "-          return _projFilePaths.contains(path);", "-        }", "-        catch(IOException ioe) { return false; }", "-        /*", "-         for (File file : projectFiles) {", "-         try {", "-         if (file.getCanonicalPath().equals(path))", "-         return true;", "-         }", "-         catch(IOException ioe) {", "-         //continue", "-         }", "-         }", "-         return false;*/", "-        ", "+      try { ", "+        path = f.getCanonicalPath();", "+        return _projFilePaths.contains(path);", "+      catch(IOException ioe) { return false; }", "+    }"]}], "num": 27341}