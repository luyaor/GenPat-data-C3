{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33fdb97fdf1e914b7c351256a59f5541", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96f5ef43845b32cbfbbe553e7f41b98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": "     public void testGetUnqualifiedClassName()", "signatureAfterChange": "     public void testGetUnqualifiedClassName()", "diff": ["-     */", "+    /** Tests the getUnqualifiedClassName method. */", "-                   _llv.getUnqualifiedClassName(\"i.like.monkey$innermonkey\"));", "+                   testLLVisitor.getUnqualifiedClassName(\"i.like.monkey$innermonkey\"));", "-                   _llv.getUnqualifiedClassName(\"i.like.monkey\"));", "-      assertEquals(\"getUnqualifiedClassName with an unqualified name\", \"monkey\", _llv.getUnqualifiedClassName(\"monkey\"));", "-      assertEquals(\"getUnqualifiedClassName with an empty string\", \"\", _llv.getUnqualifiedClassName(\"\"));", "+                   testLLVisitor.getUnqualifiedClassName(\"i.like.monkey\"));", "+      assertEquals(\"getUnqualifiedClassName with an unqualified name\", \"monkey\", testLLVisitor.getUnqualifiedClassName(\"monkey\"));", "+      assertEquals(\"getUnqualifiedClassName with an empty string\", \"\", testLLVisitor.getUnqualifiedClassName(\"\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3badc7b03b91a25fc0299b374bc568", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 105, "signatureBeforeChange": "          public void testGetQualifiedClassName()", "signatureAfterChange": "          public void testGetQualifiedClassName()", "diff": ["-      _llv._package=\"\";", "-      assertEquals(\"Should not change qualified name.\", \"simpson.Bart\", _llv.getQualifiedClassName(\"simpson.Bart\"));", "-      assertEquals(\"Should not change unqualified name.\", \"Lisa\", _llv.getQualifiedClassName(\"Lisa\"));", "+      testLLVisitor._package=\"\";", "+      assertEquals(\"Should not change qualified name.\", \"simpson.Bart\", testLLVisitor.getQualifiedClassName(\"simpson.Bart\"));", "+      assertEquals(\"Should not change unqualified name.\", \"Lisa\", testLLVisitor.getQualifiedClassName(\"Lisa\"));", "-      _llv._package=\"myPackage\";", "+      testLLVisitor._package=\"myPackage\";", "-                   _llv.getQualifiedClassName(\"myPackage.Snowball\"));", "+                   testLLVisitor.getQualifiedClassName(\"myPackage.Snowball\"));", "-                   _llv.getQualifiedClassName(\"simpson.Snowball\"));", "+                   testLLVisitor.getQualifiedClassName(\"simpson.Snowball\"));", "-                   _llv.getQualifiedClassName(\"Grandpa\"));", "+                   testLLVisitor.getQualifiedClassName(\"Grandpa\"));"]}], "num": 14149}