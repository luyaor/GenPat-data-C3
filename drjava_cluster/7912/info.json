{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61cf7851e5c40383a8475d805fe3867c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5947adf3729d77a6a8eb1960a443e5ec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManagerTest.java", "commitBeforeChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "commitAfterChange": "ba6205cad42ae00df3c37c5cbd4625770848df66", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void tearDown()", "signatureAfterChange": "      public void tearDown()", "diff": ["-    _tempDir.delete();", "+    FileOps.deleteDirectory(_tempDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6faf4ba19147801b8c03a5b708f6482f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "commitAfterChange": "b1c7871d21e78d9b00bec5144dc21cdc37950342", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      private void insertNewRegionNode(R r, DefaultMutableTreeNode docNode, int pos)", "signatureAfterChange": "      private void insertNewRegionNode(R r, DefaultMutableTreeNode docNode, int pos)", "diff": ["-    // Establish link to TreeNode from region r", "-    r.setTreeNode(newRegionNode);", "+    // Create link from region r to newRegionNode", "+    _regionToTreeNode.put(r, newRegionNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd1dc03803a167f073d54e01907b344c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "083b8dfa10643e0b9159355cb96305bd36796a63", "commitAfterChange": "6693d9c4c939c2a7891f553e531587735bbb981b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public static int hashCode(Iterable<?> iter)", "signatureAfterChange": "   public static int hashCode(Iterable<?> iter)", "diff": ["-    for (Object obj : iter) { result ^= obj.hashCode() << (shift & 0xF); shift++; }", "+    for (Object obj : iter) { result ^= RecurUtil.safeHashCode(obj) << (shift & 0xF); shift++; }"]}], "num": 7912}