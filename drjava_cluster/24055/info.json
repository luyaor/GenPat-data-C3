{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba61485bf3ea6fd3d1f62c7823020d49", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c2c2ef64f91e79c794fec7977372234", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "1cb762451f589947c585a2a219ca59cd916faaa1", "commitAfterChange": "33157731339c994882aa1f63ed4a691707c328ca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void indentLine(DefinitionsDocument doc)", "signatureAfterChange": "   public void indentLine(DefinitionsDocument doc)", "diff": ["-    // For testing only", "-    doc.setTab(\"---\", doc.getCurrentLocation());", "+    int here = doc.getCurrentLocation();", "+    int startLine = doc.getLineStartPos(here);", "+    doc.setCurrentLocation(startLine);", "+    IndentInfo ii = doc.getReduced().getIndentInformation();", "+    ", "+    // Check preconditions", "+    if ((ii.braceType.equals(\"\")) ||", "+        (ii.distToBrace < 0)) {", "+      // Can't find brace, so do nothing.", "+      return;", "+    }", "+", "+    // Find length to brace", "+    int bracePos = startLine - ii.distToBrace;", "+    int braceNewLine = 0;", "+    if (ii.distToNewline >=0) {", "+      braceNewLine = startLine - ii.distToNewline;", "+    }", "+    int braceLen = bracePos - braceNewLine;", "+", "+    // Create tab string", "+    StringBuffer tab = new StringBuffer(_suffix.length() + braceLen);", "+    for (int i=0; i < braceLen; i++) {", "+      tab.append(\" \");", "+    }", "+    tab.append(_suffix);", "+    ", "+    if (here >= doc.getLength()) {", "+      here = doc.getLength() - 1;", "+    }", "+    doc.setCurrentLocation(here);", "+    ", "+    doc.setTab(tab.toString(), here);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee54c9dfc3c6dafc17a2a25f080b6c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlus.java", "commitBeforeChange": "de9f1fb322a5a5fa0f403e2f2803a6e71b1430f2", "commitAfterChange": "d866156ff3eb9397e3a97a5afc2e43aedd357f8a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   public boolean indentLine(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["+    int dist = info.distToLineEnclosingBrace();", "-    if (info.lineEnclosingBraceType().equals(\"\") || info.distToLineEnclosingBrace() < 0) {", "+    if (info.lineEnclosingBraceType().equals(\"\") || dist < 0) {  // Should use interned Strings here", "-    int bracePos = startLine - info.distToLineEnclosingBrace();", "+    int bracePos = startLine - dist;", "-    if (info.distToEnclosingBraceStart() >= 0) {", "-      braceNewline = startLine - info.distToEnclosingBraceStart();", "-    }", "+    int distStart = info.distToEnclosingBraceStart();", "+    if (distStart > 0) braceNewline = startLine - distStart;", "-    final StringBuilder tab = new StringBuilder(_suffix.length() + braceLen);", "-    for (int i=0; i < braceLen; i++) {", "-      tab.append(\" \");", "-    }", "-    tab.append(_suffix);", "+    final int tab = _suffixCt + braceLen;", "-    doc.setTab(tab.toString(), here);", "+    doc.setTab(tab, here);"]}], "num": 24055}