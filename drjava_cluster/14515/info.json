{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba5c24d4abf775cee8a3e71dd7833743", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3feb239a66f112276d44b83a0b22395a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "5944dd2b12a74ebad6e3549d813d2dd557403c7e", "commitAfterChange": "53735c967d2add6a16ab5776bac9111426f41996", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver,                          final List<String> classpath,                          final JavadocListener listener)     throws IOException, InvalidPackageException", "signatureAfterChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver,                          List<String> classpath,                          final JavadocListener listener)     throws IOException", "diff": ["-                         final List<String> classpath,", "+                         List<String> classpath,", "-    throws IOException, InvalidPackageException {", "+    throws IOException", "+  {", "-    if (getter.hasModifiedDocuments()) {", "+    if (_getter.hasModifiedDocuments()) {", "-    if (getter.hasModifiedDocuments()) {", "+    if (_getter.hasModifiedDocuments()) {", "-    List<OpenDefinitionsDocument> docs = getter.getDefinitionsDocuments();", "+    List<OpenDefinitionsDocument> docs = _getter.getDefinitionsDocuments();", "+    final String[] classpathArray = classpath.toArray(new String[0]);", "-        _javadocWorker(destDirF, saver, classpath, listener);", "+        _javadocAllWorker(destDirF, saver, classpathArray, listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "471d83a59bcc2286c42c6e47bb053a04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "e1cae1f7b6aae460aab41e86b032251abb119211", "commitAfterChange": "d1929cdbc61164d9dd0af29defc1992f3c759cb6", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    for (RegionManager<MovingDocumentRegion> rm: _findResultsManagers) rm.removeRegions(doc);", "+    // The following copy operation is dictated by the silly \"no comodification\" constraint on Collection iterators", "+    RegionManager<MovingDocumentRegion>[] managers = _findResultsManagers.toArray(new RegionManager[0]);", "+    for (RegionManager<MovingDocumentRegion> rm: managers) rm.removeRegions(doc);"]}], "num": 14515}