{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6c6ac7fdc7ea5ce6760c521b2e81680", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05c797e275e7f0770dbe012298d90e17", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "41aaddf2fac13c7b13b54278e1f7a96f30359db8", "commitAfterChange": "7f6c36ddc1f3b8bddbab22750a5a52f89ba18055", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private boolean _isJSR14v2_4()", "signatureAfterChange": "   private boolean _isJSR14v2_4()", "diff": ["-      return false;", "+      try {", "+        Class.forName(\"com.sun.tools.javac.main.Main+1\");", "+        return true;", "+      }", "+      catch (Exception e2) {", "+        return false;", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c112c8af51137e34bc76b0f67fe62d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilities.java", "commitBeforeChange": "b5c763bf27a5267e7ff6eb7560dbde820d19b063", "commitAfterChange": "0b7f9842c42a34509d077a5e1d655daf0b8192d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void resetVersion()", "signatureAfterChange": "   public static void resetVersion()", "diff": ["-    _tigerEnabled = (VERSION >= 1.5);", "+    try {", "+      //Class.forName(\"java.lang.Enum\");", "+      Class.forName(\"com.sun.javadoc.ParameterizedType\");", "+      _tigerEnabled = true;", "+    }", "+    catch (Throwable t) {", "+      // failed to load java.lang.Enum, so jsr14 v2.0 is not on the boot claspath.", "+      // This logic avoids a restart if _usingJSR14v20 with the correct boot classpath.", "+      //t.printStackTrace();", "+      _tigerEnabled = (VERSION >= 1.5);", "+    }    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44da5764ea20f72407d245671f601183", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "commitAfterChange": "72303a17e4a44248ba3fe5d5f9c3d69081ba78b5", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 41, "signatureBeforeChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "signatureAfterChange": "      public void testSaveAsExistsAndOpen() throws BadLocationException, IOException", "diff": ["-    final OpenDefinitionsDocument doc1 = _model.getDocumentForFile(file1);", "-    changeDocumentText(FOO_TEXT,doc1);", "-    saveFileAs(doc1, new FileSelector(file1));", "-    ", "-    final File file2 = tempFile(2);", "-    final OpenDefinitionsDocument doc2 = _model.getDocumentForFile(file2);", "-    changeDocumentText(BAR_TEXT, doc2);", "-    ", "+        ", "-        try { ", "-          doc2.saveFileAs(new WarningFileSelector(file1));", "-          fail(\"Did not warn of open file as expected\");", "+        try {", "+          OpenDefinitionsDocument doc1 = _model.getDocumentForFile(file1);", "+          changeDocumentText(FOO_TEXT,doc1);", "+          saveFileAs(doc1, new FileSelector(file1));", "+          ", "+          File file2 = tempFile(2);", "+          OpenDefinitionsDocument doc2 = _model.getDocumentForFile(file2);", "+          changeDocumentText(BAR_TEXT, doc2);", "+          ", "+          try { ", "+            doc2.saveFileAs(new WarningFileSelector(file1));", "+            fail(\"Did not warn of open file as expected\");", "+          }", "+          catch (OpenWarningException e) { /* Good behavior for file saving ... */ }", "-        catch (Exception e) { /* Good behavior for file saving ... */ }", "+        catch (Exception e) {", "+          // should never happen", "+          fail(\"Exception thrown in testSaveAsExistsAndOpen.  Traceback: \\n\" + e);", "+        }"]}], "num": 25372}