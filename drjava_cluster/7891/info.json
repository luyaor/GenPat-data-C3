{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1f90735adc33137bdf8dfefc7e5198a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c9e6a9d0992465dbf7f9a0b15dad61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": "      private void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator                                              copyCursor)", "diff": ["-", "-\tprivate void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "-\t\t{", "-\t\t\tif ( !copyCursor.atStart()\t&& !copyCursor.atFirstItem()){", "-\t\t\t\tif (copyCursor.prevItem().getType().equals(\"\\\\\")){", "-\t\t\t\t\tcopyCursor.prevItem().setType(\"\\\\\\\\\");", "-\t\t\t\t\t_updateBasedOnCurrentState();", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\t// if we're after a star, ", "-\t\t\t}", "-\t\t\t//here we know the / unites with nothing behind it.", "-\t\t\t_insertNewBrace(\"\\\\\",copyCursor); //leaving us after the brace.", "-\t\t\tcopyCursor.prev();", "-\t\t\t_updateBasedOnCurrentState();", "-\t\t\tif (copyCursor.current().getSize() == 2)", "-\t\t\t\t_offset = 1;", "-\t\t\telse", "-\t\t\t\tcopyCursor.next();", "-\t\t}", "+  ", "+  private void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator", "+                                             copyCursor)", "+  {", "+    if (!copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "+      if (copyCursor.prevItem().getType().equals(\"\\\\\")) {", "+        copyCursor.prevItem().setType(\"\\\\\\\\\");", "+        _updateBasedOnCurrentState();", "+        return;", "+      }", "+      // if we're after a star, ", "+    }", "+    // Here we know the / unites with nothing behind it.", "+    _insertNewBrace(\"\\\\\",copyCursor); //leaving us after the brace.", "+    copyCursor.prev();", "+    _updateBasedOnCurrentState();", "+    if (copyCursor.current().getSize() == 2) {", "+      _offset = 1;", "+    }", "+    else {", "+      copyCursor.next();", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92a7898515daba26f47700f16b73fe75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": "      private void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator                                              copyCursor)", "diff": ["-", "-\tprivate void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "-\t\t{", "-\t\t\tif ( !copyCursor.atStart()\t&& !copyCursor.atFirstItem()){", "-\t\t\t\tif (copyCursor.prevItem().getType().equals(\"\\\\\")){", "-\t\t\t\t\tcopyCursor.prevItem().setType(\"\\\\\\\\\");", "-\t\t\t\t\t_updateBasedOnCurrentState();", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t\t// if we're after a star, ", "-\t\t\t}", "-\t\t\t//here we know the / unites with nothing behind it.", "-\t\t\t_insertNewBrace(\"\\\\\",copyCursor); //leaving us after the brace.", "-\t\t\tcopyCursor.prev();", "-\t\t\t_updateBasedOnCurrentState();", "-\t\t\tif (copyCursor.current().getSize() == 2)", "-\t\t\t\t_offset = 1;", "-\t\t\telse", "-\t\t\t\tcopyCursor.next();", "-\t\t}", "+  ", "+  private void _checkPreviousInsertBackSlash(ModelList<ReducedToken>.Iterator", "+                                             copyCursor)", "+  {", "+    if (!copyCursor.atStart()  && !copyCursor.atFirstItem()) {", "+      if (copyCursor.prevItem().getType().equals(\"\\\\\")) {", "+        copyCursor.prevItem().setType(\"\\\\\\\\\");", "+        _updateBasedOnCurrentState();", "+        return;", "+      }", "+      // if we're after a star, ", "+    }", "+    // Here we know the / unites with nothing behind it.", "+    _insertNewBrace(\"\\\\\",copyCursor); //leaving us after the brace.", "+    copyCursor.prev();", "+    _updateBasedOnCurrentState();", "+    if (copyCursor.current().getSize() == 2) {", "+      _offset = 1;", "+    }", "+    else {", "+      copyCursor.next();", "+    }", "+  }"]}], "num": 7891}