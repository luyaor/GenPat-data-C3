{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "077b7d4c6ba7b460c358f10ddc8121e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6dcc69ae51d6dd008b96f55021782ee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplacePanel.java", "commitBeforeChange": "0fd554fea7999c7183e4610da4a05a51741bc9b7", "commitAfterChange": "69a8d4531f97f07e11394d35ef721f824833e538", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _findAll()", "signatureAfterChange": "   private void _findAll()", "diff": ["-        // get the original time stamp", "-        long origts = fr.getDocument().getTimestamp();", "+//        // get the original time stamp", "+//        long origts = fr.getDocument().getTimestamp();", "-        if (!_model.getActiveDocument().equals(fr.getDocument())) {", "+        if (! _model.getActiveDocument().equals(fr.getDocument())) {", "-        // get the time stamp after making the document the active one", "-        long newts = doc.getTimestamp();", "-        if (newts != origts) {", "-          // timestamps changed, document has been modified, so all our FindResults", "-          // may not apply anymore. we are going to discard all FindResults for this", "-          // document.", "-          // add thi document to the list of reverted documents", "-          reverted.add(doc);", "-          continue;", "-        }", "+//        // get the time stamp after making the document the active one", "+//        long newts = doc.getTimestamp();", "+//        if (newts != origts) {", "+//          // timestamps changed, document has been modified, so all our FindResults", "+//          // may not apply anymore. we are going to discard all FindResults for this", "+//          // document.", "+//          // add thi document to the list of reverted documents", "+//          reverted.add(doc);", "+//          continue;", "+//        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f558c96cfc0bce5c89698d4fc8c2a4a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 38, "signatureBeforeChange": "     public void selectItem(CompilerError error)", "signatureAfterChange": "     public void selectItem(CompilerError error)", "diff": ["+      CompilerErrorModel cem = getErrorModel();", "+//        Utilities.showDebug(\"startPos = \" + startPos);", "+        // or the end of the error if the last error (i.e. before the warnings title)", "-        if (i + 1 >= (_numErrors)) endPos = getDocument().getLength();", "-        else endPos = _errorListPositions[i + 1].getOffset();", "+        if (i + 1 >= (_numErrors)) endPos = getDocument().getLength();   ", "+        else { ", "+          endPos = _errorListPositions[i + 1].getOffset();", "+//          Utilities.showDebug(\"endPos(before) = \" + endPos);", "+          CompilerError nextError = _errorTable.get(_errorListPositions[i+1]);", "+//          Utilities.showDebug(\"nextError = \" + nextError);", "+          if (!error.isWarning() && nextError.isWarning()) endPos = endPos - _getWarningTitle().length();", "+//          Utilities.showDebug(\"endPos(after) = \" + endPos);", "+        }            ", "-          // Scroll to make sure this item is visible", "-          Rectangle startRect = modelToView(startPos);", "+          // If first error, show number of errors and warnings preferentially to showing the error", "+          // Otherwise, scroll to make sure this item is visible", "+          Rectangle startRect;", "+          if (i == 0)  startRect = modelToView(0);", "+          ", "+          else startRect = modelToView(startPos);", "+          "]}], "num": 29104}