{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e14eb78c3321b4fc19e61337bf6e5bcc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e94869dbf930b0cd58d9ff17bd05b22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t public void testInsertGapBeforeGap()", "signatureAfterChange": " \tpublic void testInsertGapBeforeGap()", "diff": ["-\t", "-public void testInsertGapBeforeGap()", "+\t */", "+\tpublic void testInsertGapBeforeGap()", "-\t\t\tassertTrue(\"#0.0.0\", model1.getCursor().atEnd());", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertTrue(\"#0.0.0\", model1.atEnd());", "+\t\t\tmodel1.move(-3);", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#0.1\", 3, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#0.2\", 6, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#0.3\", model1.getCursor().atFirstItem());", "-\t\t\tassertTrue(\"#0.4\", model1.getCursor().atLastItem());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(0); // now pointing to head.  move(int) will take", "-                     \t\t\t// care of this in the future", "+\t\t\t//insert two consecutive gaps and make sure they combine.", "+\t\t\tassertTrue(\"#0.0\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#0.1\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#0.2\", 6, model1.currentToken().getSize());", "+\t\t\tmodel1.move(-3);", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.1\", 2, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#1.2\", 8, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#1.3\", model1.getCursor().atFirstItem());", "-\t\t\tassertTrue(\"#1.4\", model1.getCursor().atLastItem());\t\t\t", "+\t\t\tassertTrue(\"#1.0\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.1\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.2\", 8, model1.currentToken().getSize());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc06fc9ed7a68a5b23b57160a685920", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t public void testInsertGapBeforeGap()", "signatureAfterChange": " \tpublic void testInsertGapBeforeGap()", "diff": ["-\t", "-public void testInsertGapBeforeGap()", "+\t */", "+\tpublic void testInsertGapBeforeGap()", "-\t\t\tassertTrue(\"#0.0.0\", model1.getCursor().atEnd());", "-\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertTrue(\"#0.0.0\", model1.atEnd());", "+\t\t\tmodel1.move(-3);", "-\t\t\tassertTrue(\"#0.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#0.1\", 3, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#0.2\", 6, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#0.3\", model1.getCursor().atFirstItem());", "-\t\t\tassertTrue(\"#0.4\", model1.getCursor().atLastItem());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(0); // now pointing to head.  move(int) will take", "-                     \t\t\t// care of this in the future", "+\t\t\t//insert two consecutive gaps and make sure they combine.", "+\t\t\tassertTrue(\"#0.0\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#0.1\", 3, model1.absOffset());", "+\t\t\tassertEquals(\"#0.2\", 6, model1.currentToken().getSize());", "+\t\t\tmodel1.move(-3);", "-\t\t\tassertTrue(\"#1.0\", model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#1.1\", 2, model1.getBlockOffset());", "-\t\t\tassertEquals(\"#1.2\", 8, model1.getCursor().current().getSize());", "-\t\t\tassertTrue(\"#1.3\", model1.getCursor().atFirstItem());", "-\t\t\tassertTrue(\"#1.4\", model1.getCursor().atLastItem());\t\t\t", "+\t\t\tassertTrue(\"#1.0\", model1.currentToken().isGap());", "+\t\t\tassertEquals(\"#1.1\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.2\", 8, model1.currentToken().getSize());"]}], "num": 13665}