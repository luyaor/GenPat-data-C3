{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "19f97ebeba4e91ec1023087ccc12d262", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03aba1b3a257c53ffd4c283927f125b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/Brace.java", "commitBeforeChange": "c783dcfc2a672846c5731c22479ac241a8d88896", "commitAfterChange": "e97d669e5368c283be3ec2a94ca1c792daab5138", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public boolean isMatch(ReducedToken other)", "signatureAfterChange": "   public boolean isMatch(ReducedToken other)", "diff": ["-   */", "+    */", "-    if (this.getType().equals(\"\")) {", "-      return false;", "-    }", "-    int off = (this.isOpen()) ? 1 : -1;", "-    return (braces[_type + off].equals(other.getType()));", "+    if (! (other instanceof Brace)) return false;", "+    int otherType = ((Brace) other)._type;", "+    int off = isOpen() ? 1 : -1;", "+    return _type + off == otherType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a35ae6b101af30056168912f54de185", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "f743eab51273b837fbfd0fee9aa664f2f031c583", "commitAfterChange": "0ad47f4e9ecbbfc43121de14376bb3d222538453", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "         public void testActiveAndInactive()", "signatureAfterChange": "         public void testActiveAndInactive()", "diff": ["-    assertEquals(\"the active pane should have a defintions document\", DefinitionsDocument.class, ddoc.getClass());", "+    assertTrue(\"the active pane should have an open defintions document\", ddoc instanceof OpenDefinitionsDocument);", "-    assertNotSame(\"the old pane should not have a defintions document\", DefinitionsDocument.class, olddoc.getClass());", "-    assertEquals(\"the active pane should have a defintions document\", DefinitionsDocument.class, ddoc.getClass());", "+    assertFalse(\"the old pane should not have an open defintions document\", olddoc instanceof OpenDefinitionsDocument);", "+    assertTrue(\"the active pane should have an open defintions document\", ddoc instanceof OpenDefinitionsDocument);"]}], "num": 3606}