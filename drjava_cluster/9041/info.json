{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f7333537ec1420c392ba2dd7e67f7f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015d7e42b3eba88dbc4b6b3b91beb376", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInPrevStmt.java", "commitBeforeChange": "6c31f49b491d4a01bd2ddbae62b5ee4f76d52129", "commitAfterChange": "b17c3d3d0edf27a5d35f38839287840198b5808d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-   */", "+  /** Searches through the previous statement to determine if it contains char _lookFor (unshadowed). */", "-    try {", "-      endPreviousStatement = ", "-        doc.findPrevDelimiter(doc.getCurrentLocation(), new char[] {';','}','{'});", "-    } catch (BadLocationException ble) {", "+    try { endPreviousStatement = doc.findPrevDelimiter(doc.getCurrentLocation(), new char[] {';','}','{'}); } ", "+    catch (BadLocationException ble) {", "-    if (endPreviousStatement == -1) {", "-      return false;", "-    }", "+    if (endPreviousStatement == -1) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10811e61a651b66b96b8d42230b1c49e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInPrevStmt.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    try { endPreviousStatement = doc._findPrevDelimiter(doc.getCurrentLocation(), new char[] {';','}','{'}); } ", "+    try { endPreviousStatement = doc.findPrevDelimiter(doc.getCurrentLocation(), new char[] {';','}','{'}); } ", "-    return doc._findCharInStmtBeforePos(_lookFor, endPreviousStatement);", "+    return doc.findCharInStmtBeforePos(_lookFor, endPreviousStatement);"]}], "num": 9041}