{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d23f25d7569afce4d4ba854df019f224", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf3883bb3a033380a99e28e7af477ce0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/RecursionStack2.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public RecursionStack2()", "signatureAfterChange": "   public RecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public RecursionStack2() {", "-    _previous = new HashMultiset<IdentityPair<T1, T2>>();", "-    _stack = new LinkedList<IdentityPair<T1, T2>>();", "+   */", "+  public RecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory) {", "+    _pairFactory = pairFactory;", "+    _previous = new HashMultiset<Pair<T1, T2>>();", "+    _stack = new LinkedList<Pair<T1, T2>>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fafe2979d56cc38b0cc4dfd9b5a3e4d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/PrecomputedRecursionStack2.java", "commitBeforeChange": "b9dd52b4ecb6c9b7750e6e1de631c1d8032aa916", "commitAfterChange": "2bd872ed3d0b6e87a4c41b76a623c493f8166665", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PrecomputedRecursionStack2()", "signatureAfterChange": "   public PrecomputedRecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory)", "diff": ["-  /** Create an empty recursion stack */", "-  public PrecomputedRecursionStack2() {", "-    _previous = new HashMap<IdentityPair<T1, T2>, Lambda2<? super T1, ? super T2, ? extends R>>();", "-    _stack = new LinkedList<IdentityPair<T1, T2>>();", "+   */", "+  public PrecomputedRecursionStack2(Lambda2<? super T1, ? super T2, ? extends Pair<T1, T2>> pairFactory) {", "+    _pairFactory = pairFactory;", "+    _previous = new HashMap<Pair<T1, T2>, Lambda2<? super T1, ? super T2, ? extends R>>();", "+    _stack = new LinkedList<Pair<T1, T2>>();"]}], "num": 13648}