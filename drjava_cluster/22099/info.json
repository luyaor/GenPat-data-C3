{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c44e4a728d3639ae364cc53aaddd6f5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967737affbced2b882ae1b0d06aadea5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "a452bc1c75053221683fa7723a55972e27a5b54c", "commitAfterChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "signatureAfterChange": "     public DefinitionsDocument getDocument() throws IOException, FileMovedException", "diff": ["-//      The following double-check idiom is safe in Java 1.4 and later JVMs provided that _doc is volatile.     ", "-      if (_doc != null) return _doc;  ", "+//      The following double-check idiom is safe in Java 1.4 and later JVMs provided that _doc is volatile.", "+      final DefinitionsDocument doc = _doc;  // create a snapshot of _doc", "+      if (doc != null) return doc;  ", "-        try { // _doc is not in memory", "-          _doc = _rec.make();", "-          assert _doc != null;", "-        }", "-        catch(BadLocationException e) { throw new UnexpectedException(e); }", "-//        Utilities.showDebug(\"Document \" + _doc + \" reconstructed; _stat = \" + _stat);", "-        if (_stat == NOT_IN_QUEUE) add();       // add this to queue ", "-        return _doc;", "+        return makeDocument();", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab1b07532f49386bc993b5d77b9c9e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 115, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-  public boolean closeFileWithoutPrompt(OpenDefinitionsDocument doc) {", "-    final OpenDefinitionsDocument closedDoc = doc;", "+  public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc) {", "-    // Only fire event if doc exists and was removed from list", "-    INavigatorItem idoc;", "-    synchronized (_documentsRepos) { idoc = _documentsRepos.removeKey(closedDoc); }", "-    String name = idoc.toString();", "-    //    closedDoc.close();", "+    boolean found;", "+    synchronized (_documentsRepos) { found = _documentsRepos.remove(doc); }", "-    if (idoc != null) {", "-      _documentNavigator.removeDocument(idoc);", "-      _notifier.fileClosed(closedDoc);", "-      closedDoc.close();", "-      return true;", "-    }", "-    return false;", "+    if (! found) return false;", "+    ", "+    _documentNavigator.removeDocument(doc);", "+    _notifier.fileClosed(doc);", "+    doc.close();", "+    return true;"]}], "num": 22099}