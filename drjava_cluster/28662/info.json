{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1589033e1c7bd246ae8b994e80ec9c10", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e9c50b27493f82181e9257983efc757", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartingNewStmtTest.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "signatureAfterChange": "   public void testStartOfStmtIgnoreWhiteSpaceAndCommentsInBetween() throws BadLocationException", "diff": ["+", "+    _setDocText(\"method foo() {\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"     \");", "+    _doc.setCurrentLocation(17);", "+    assertTrue(\"Blank line with no non-WS after\",", "+\t       rule.applyRule(_doc));", "+", "+    _setDocText(\"method foo() {\\n\" +", "+\t\t\"}\\n\" +", "+\t\t\"     \\n\" +", "+\t\t\"// comment\");", "+    _doc.setCurrentLocation(17);", "+    assertTrue(\"Blank line with comments after, but no non-WS\",", "+\t       rule.applyRule(_doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2476a358297470575b2d4434771bcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionBraceIsCurlyTest.java", "commitBeforeChange": "134fcdcdfec686658948aad305ed1a57e53f3289", "commitAfterChange": "853042d937b2209dea401ce3246c5df9c368fc48", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testOnlyCurly() throws BadLocationException", "signatureAfterChange": "      public void testOnlyCurly() throws BadLocationException", "diff": ["-\tassertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, _text.length() - 1));\t    ", "+\tassertTrue(\"START's brace is an open curly brace.\", _rule.applyRule(_doc, _text.length() - 1));", "+", "+\t/* (3) */", "+", "+\t_text =", "+\t    \"class Foo {\\n\" +", "+\t    \"}\";", "+\t_setDocText(_text);", "+", "+\tassertTrue(\"Close brace immediately after open brace.\", _rule.applyRule(_doc, 12));", "+", "+\t/* (4) */", "+\t", "+\t_text =", "+\t    \"class Foo {\\n\" +", "+\t    \"  method m()\\n\" +", "+\t    \"  {\\n\" +", "+\t    \"  }\\n\" +", "+\t    \"}\";", "+\t_setDocText(_text);", "+", "+\tassertTrue(\"Close brace immediately after open brace.\", _rule.applyRule(_doc, 29));"]}], "num": 28662}