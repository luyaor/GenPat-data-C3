{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c570bc8c00095494455dec613eaaada", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7a1241429d0ff9d7ce5fb0586c587e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "4402afa3c67a362593909f349f9fbb816e477bed", "commitAfterChange": "b88c168dd97b3e73bf1e2484f86af286c295bdde", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 35, "signatureBeforeChange": "    private void _updateWatches()", "signatureAfterChange": "    private void _updateWatches()", "diff": ["-          currWatch.setValue(null);", "+          currWatch.setValue(WatchUndefinedValue.Singleton);", "-          int indexOfDollar = className.indexOf('$');    ", "+          int indexOfDollar = className.lastIndexOf('$');    ", "-            currWatch.setValue(null);", "-            currWatch.setType(null);", "+            ", "+            //currWatch.setValue(WatchUndefinedValue.Singleton);", "+            //currWatch.setType(null);", "-            currWatch.setValue(null);", "-            currWatch.setType(null);", "+            //currWatch.setValue(WatchUndefinedValue.Singleton);", "+            //currWatch.setType(null);", "-              currWatch.setValue(null);", "+              currWatch.setValue(WatchUndefinedValue.Singleton);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e9e40609b5376ef8daa95d89b431c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "     public Object getValueAt(int row, int col)", "signatureAfterChange": "          public Object getValueAt(int row, int col)", "diff": ["-    public int getColumnCount() { return _columnNames.length; }", "-    public Object getValueAt(int row, int col) { ", "-      StackFrame frame = _frames.elementAt(row);", "-      switch(col) {", "-        case 0: return new Integer(row);", "-        case 1: return frame.location().declaringType().name() + \".\" + frame.location().method().name();", "-        case 2: return new Integer (frame.location().lineNumber());", "-      return null;", "+    ", "+    public Object getValueAt(int row, int col) { ", "+      StackFrame frame = _stackFrames.elementAt(row);", "+      String method = \"(unknown)\";", "+      String line = \"(unknown)\";", "+      if (_debugger.isReady()) {", "+        method = frame.location().declaringType().name() + \".\" +", "+          frame.location().method().name();", "+        line = \"\" + frame.location().lineNumber();", "+      }", "+      switch(col) {", "+        //case 0: return new Integer(row);", "+        case 0: return method;", "+        case 1: return line;", "+      }", "+      return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3e790b91a996829ada3b2344a187d8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object getValueAt(int row, int col)", "signatureAfterChange": "     public Object getValueAt(int row, int col)", "diff": ["-    public Object getValueAt(int row, int col) { ", "-      DebugManager.WatchpointData watchpoint = _watchpoints.elementAt(row);", "-      switch(col) {", "-        case 0: return watchpoint.getName();", "-        case 1: return watchpoint.getValue();", "-        case 2: return watchpoint.getType();", "+    public Object getValueAt(int row, int col) {", "+      if (row < _watches.size()) {", "+        DebugManager.WatchData watch = _watches.elementAt(row);", "+        switch(col) {", "+          case 0: return watch.getName();", "+          case 1: return watch.getValue();", "+          case 2: return watch.getType();", "+        }", "+        return null;", "-      return null;", "+      else {", "+        // Last row blank", "+        return \"\";", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3de30443f881906bdec0a7fdfed6103", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "ae4333c8dd1b54b8a781008188f09b6786d95ae2", "commitAfterChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "   private synchronized void _updateWatches() throws DebugException", "signatureAfterChange": "   private synchronized void _updateWatches() throws DebugException", "diff": ["-        ", "+", "+          frames = thread.frames();", "+        catch (InvalidStackFrameException isfe) {", "+          currWatch.setNoValue();", "+          currWatch.setNoType();", "+          _log(\"Failed to get local var from stack frame\", isfe);", "+          continue;", "+        }", "-          currWatch.setValue(_getValue(currFrame.getValue(localVar)));", "+          // currWatch.setValue(_getValue(currFrame.getValue(localVar)));", "-            currWatch.setType(String.valueOf(localVar.type()));", "+            Value v = _getValueOfLocalVariable(localVar, thread);", "+            currWatch.setValue(v);", "+            // currWatch.setType(String.valueOf(localVar.type()));", "+            currWatch.setType(v.type().name());", "-          catch (ClassNotLoadedException cnle) {", "+          catch (Exception ex) {", "+            _log(\"Exception when getting the value of a local variable\", ex);", "+            currWatch.setNoValue();", "-        "]}], "num": 21309}