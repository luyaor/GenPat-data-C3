{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "622b01cac5a0e352b38e1afebab93715", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c4e05c09ad02f2c8a5b6cd83008a6ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "dfacb8ec563fb56fd384bc23954024d3da69f9f5", "commitAfterChange": "3219755a46ca8592e404ccf1c194784de66c102a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "signatureAfterChange": "   public void refreshDocument(INavigatorItem doc, String path) throws IllegalArgumentException", "diff": ["-    DefaultMutableTreeNode node = getNodeForDoc(doc);", "-    addDocument(doc, path);", "-    _model.removeNodeFromParent(node);", "+    /**", "+     * since we are modifying the model of this tree, and in the middle of this modification,", "+     * we have an unstable model, we need to synchronize around it.", "+     * Note: this solved the bug where compile all with modified documents would throw an array", "+     * index out of bounds exception when painting.", "+     */", "+    synchronized(this){", "+      DefaultMutableTreeNode node = getNodeForDoc(doc);", "+      addDocument(doc, path);", "+      _model.removeNodeFromParent(node);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a8300605161473617ea891f0102b50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "commitAfterChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "          public synchronized boolean contains(long id)", "signatureAfterChange": "          public boolean contains(long id)", "diff": ["-    public synchronized boolean contains(long id) {", "-      for (int i = 0; i < size(); i++) {", "-        if (get(i).uniqueID() == id) return true;", "+    public boolean contains(long id) {", "+      synchronized(this) {", "+        for (int i = 0; i < size(); i++) {", "+          if (get(i).uniqueID() == id) return true;", "+        }", "+        return false;", "-      return false;"]}], "num": 26861}