{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "131644329a479a7633679c22acbb9040", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c9e76e411fce3180a40ed72bfcc208", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigOptionListeners.java", "commitBeforeChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "commitAfterChange": "df716c1c0097e3026300a60a646a72121f921c3d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "      @SuppressWarnings(\"fallthrough\")   public static void sanitizeMasterJVMXMX(JFrame parent, String value)", "signatureAfterChange": "      public static void sanitizeMasterJVMXMX(JFrame parent, String value)", "diff": ["-  @SuppressWarnings(\"fallthrough\")", "-    if (!value.equals(\"\")) {", "+    if ((!value.equals(\"\")) &&", "+        (!value.equals(OptionConstants.heapSizeChoices.get(0)))) {", "-      switch(size.toLowerCase().charAt(size.length()-1)) {", "-        case 'g': {", "-          factor *= 1024; // fall-through intended", "-        }", "-        case 'm': {", "-          factor *= 1024; // fall-through intended", "-        }", "-        case 'k': {", "-          factor *= 1024; // fall-through intended", "-          break;", "-        }", "-        default: {", "-          if (!Character.isDigit(size.toLowerCase().charAt(size.length()-1))) {", "-            factor = 0;", "-          }", "-        }", "-      }", "-        if (factor==1) {", "-          heapSize = new Long(size);", "-        }", "-        else if (factor>1) {", "-          heapSize = new Long(size.substring(0,size.length()-1)) * factor;", "-        }", "-        else {", "-          heapSize = -1;", "-        }", "+        heapSize = new Long(size);", "-          DrJava.getConfig().setSetting(MASTER_JVM_XMX, \"\");", "+          DrJava.getConfig().setSetting(MASTER_JVM_XMX, OptionConstants.heapSizeChoices.get(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a30da670d377fa599d90907693ca1a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/ConfigOptionListeners.java", "commitBeforeChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "commitAfterChange": "df716c1c0097e3026300a60a646a72121f921c3d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      @SuppressWarnings(\"fallthrough\")   public static void sanitizeSlaveJVMXMX(JFrame parent, String value)", "signatureAfterChange": "      public static void sanitizeSlaveJVMXMX(JFrame parent, String value)", "diff": ["-  @SuppressWarnings(\"fallthrough\")", "-    if (!value.equals(\"\")) {", "+    if ((!value.equals(\"\")) &&", "+        (!value.equals(OptionConstants.heapSizeChoices.get(0)))) {", "+      long heapSize;", "+      try {", "+        heapSize = new Long(size);", "+      }", "+      catch(NumberFormatException nfe) {", "+        heapSize = -1; // invalid", "+      }", "+      if (heapSize<0) {", "+        String[] options = new String[] { \"Clean \\\"Maximum Heap\\\" Setting\",", "+          \"Ignore\" };", "+        int result = JOptionPane.", "+          showOptionDialog(parent,", "+                           \"The \\\"Maximum Heap Memory for Interactions JVM\\\" setting is invalid: \\\"\"+size+\"\\\"\\n\"+", "+                           \"Would you like to clean up the \\\"Maximum Heap\\\" setting or ignore this potential problem?\",", "+                           \"Invalid Maximum Heap Size\",", "+                           0,", "+                           JOptionPane.QUESTION_MESSAGE,", "+                           null,", "+                           options,", "+                           options[0]);", "+        if (result==0) {", "+          // clean up", "+          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, OptionConstants.heapSizeChoices.get(0));", "+        }", "+      }", "+    }", "+  }", "-      if (heapSize<0) {", "-        String[] options = new String[] { \"Clean \\\"Maximum Heap\\\" Setting\",", "-          \"Ignore\" };", "-        int result = JOptionPane.", "-          showOptionDialog(parent,", "-                           \"The \\\"Maximum Heap Memory for Interactions JVM\\\" setting is invalid: \\\"\"+size+\"\\\"\\n\"+", "-                           \"Would you like to clean up the \\\"Maximum Heap\\\" setting or ignore this potential problem?\",", "-                           \"Invalid Maximum Heap Size\",", "-                           0,", "-                           JOptionPane.QUESTION_MESSAGE,", "-                           null,", "-                           options,", "-                           options[0]);", "-        if (result==0) {", "-          // clean up", "-          DrJava.getConfig().setSetting(SLAVE_JVM_XMX, \"\");", "-        }", "-      }", "-    }", "-  }"]}], "num": 27555}