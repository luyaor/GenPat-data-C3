{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e2b2c29e0d20f7566c41dfa38b78412", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5eb56108d04c80ad04ad111a23a712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void saveFileAs(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public void saveFileAs(FileSaveSelector com) throws IOException", "diff": ["-   */", "-  public void saveFileAs(FileSaveSelector com) throws IOException {", "-      FileWriter writer = new FileWriter(file);", "-      _editorKit.write(writer, _definitionsDoc, 0, _definitionsDoc.getLength());", "-      writer.close();", "-      _definitionsDoc.resetModification();", "-      _definitionsDoc.setFile(file);", "-          l.fileSaved(file);", "-    }", "-    catch (OperationCanceledException oce) {", "-      // OK, do nothing as the user wishes.", "+     */", "+    public void saveFileAs(FileSaveSelector com) throws IOException {", "+      try {", "+        final File file = com.getFile();", "+        FileWriter writer = new FileWriter(file);", "+        _editorKit.write(writer, _doc, 0, _doc.getLength());", "+        writer.close();", "+        _doc.resetModification();", "+        _doc.setFile(file);", "+        _notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+            l.fileSaved(file);", "+          }", "+        });", "+      }", "+      catch (OperationCanceledException oce) {", "+        // OK, do nothing as the user wishes.", "+      }", "+      catch (BadLocationException docFailed) {", "+        throw new UnexpectedException(docFailed);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7039628e741aa0ea83a891d70192d7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void saveFile(FileSaveSelector com) throws IOException", "signatureAfterChange": "     public void saveFile(FileSaveSelector com) throws IOException", "diff": ["-  public void saveFile(FileSaveSelector com) throws IOException {", "-    FileSaveSelector realCommand;", "-    final File file = _definitionsDoc.getFile();", "-    if (file == null) {", "-      realCommand = com;", "-    }", "-    else {", "-      realCommand = new FileSaveSelector() {", "-        public File getFile() throws OperationCanceledException {", "-          return file;", "-        }", "-      };", "-    }", "-    saveFileAs(realCommand);", "-  }", "+     */", "+    public void saveFile(FileSaveSelector com) throws IOException {", "+      FileSaveSelector realCommand;", "+      final File file;", "+", "+      try {", "+        if (_doc.isUntitled()) {", "+          realCommand = com;", "+        }", "+        else {", "+          file = _doc.getFile();", "+          realCommand = new FileSaveSelector() {", "+            public File getFile() throws OperationCanceledException {", "+              return file;", "+            }", "+          };", "+        }", "+", "+        saveFileAs(realCommand);", "+      }", "+      catch (IllegalStateException ise) {", "+        // No file; this should be caught by isUntitled()", "+        throw new UnexpectedException(ise);", "+      }", "+    }"]}], "num": 2560}