{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3a95b5710d51edc21a58010432b919fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088481e92f537d36632aa9ebbb049a57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "aac5f34523ac0f0412292e9d65f671aa46b752f4", "commitAfterChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupJavadocPanel(ConfigPanel panel)", "diff": ["-    panel.addComponent", "-      (new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_ACCESS_LEVEL,", "-                                       \"Access Level\", this,", "-                                       \"<html>Fields and methods with access modifiers at this level<br>\" +", "-                                       \"or higher will be included in the generated Javadoc.</html>\"));", "-    panel.addComponent", "-      (new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_LINK_VERSION,", "-                                       \"Java Version for Javadoc Links\", this,", "-                                       \"The version of Java for generating links to online Javadoc documentation.\"));", "-    panel.addComponent", "-      (new StringOptionComponent(OptionConstants.JAVADOC_1_3_LINK,", "-                                 \"Javadoc 1.3 URL\", this,", "-                                 \"The URL to the Java 1.3 API, for generating links to library classes.\"));", "-    panel.addComponent", "-      (new StringOptionComponent(OptionConstants.JAVADOC_1_4_LINK,", "-                                 \"Javadoc 1.4 URL\", this,", "-                                 \"The URL to the Java 1.4 API, for generating links to library classes.\"));", "-    panel.addComponent", "-      (new StringOptionComponent(OptionConstants.JAVADOC_1_5_LINK,", "-                                 \"Javadoc 1.5 URL\", this,", "-                                 \"The URL to the Java 1.5 API, for generating links to library classes.\"));", "-", "-    panel.addComponent", "-      (new DirectoryOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "-                                    \"Default Destination Directory\", this,", "-                                    \"Optional default directory for saving Javadoc documentation.\",", "-                                    _dirChooser));", "-", "-    panel.addComponent", "-      (new StringOptionComponent(OptionConstants.JAVADOC_CUSTOM_PARAMS,", "-                                 \"Custom Javadoc Parameters\", this,", "-                                 \"Any extra flags or parameters to pass to Javadoc.\"));", "-", "-    panel.addComponent", "-      (new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "-                                  \"Generate Javadoc From Source Roots\", this,", "-                                  \"<html>Whether 'Javadoc All' should generate Javadoc for all packages<br>\" +", "-                                  \"in an open document's source tree, rather than just the document's<br>\" +", "-                                  \"own package and sub-packages.</html>\"));", "-", "+    addOptionComponent(panel, ", "+                       new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_ACCESS_LEVEL,", "+                                                       \"Access Level\", this,", "+                                                       \"<html>Fields and methods with access modifiers at this level<br>\" +", "+                                                       \"or higher will be included in the generated Javadoc.</html>\"));", "+    addOptionComponent(panel, ", "+                       new ForcedChoiceOptionComponent(OptionConstants.JAVADOC_LINK_VERSION,", "+                                                       \"Java Version for Javadoc Links\", this,", "+                                                       \"The version of Java for generating links to online Javadoc documentation.\"));", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.JAVADOC_1_3_LINK,", "+                                                 \"Javadoc 1.3 URL\", this,", "+                                                 \"The URL to the Java 1.3 API, for generating links to library classes.\"));", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.JAVADOC_1_4_LINK,", "+                                                 \"Javadoc 1.4 URL\", this,", "+                                                 \"The URL to the Java 1.4 API, for generating links to library classes.\"));", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.JAVADOC_1_5_LINK,", "+                                                 \"Javadoc 1.5 URL\", this,", "+                                                 \"The URL to the Java 1.5 API, for generating links to library classes.\"));", "+    ", "+    addOptionComponent(panel, ", "+                       new DirectoryOptionComponent(OptionConstants.JAVADOC_DESTINATION,", "+                                                    \"Default Destination Directory\", this,", "+                                                    \"Optional default directory for saving Javadoc documentation.\",", "+                                                    _dirChooser));", "+    ", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.JAVADOC_CUSTOM_PARAMS,", "+                                                 \"Custom Javadoc Parameters\", this,", "+                                                 \"Any extra flags or parameters to pass to Javadoc.\"));", "+    ", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.JAVADOC_FROM_ROOTS,", "+                                                  \"Generate Javadoc From Source Roots\", this,", "+                                                  \"<html>Whether 'Javadoc All' should generate Javadoc for all packages<br>\" +", "+                                                  \"in an open document's source tree, rather than just the document's<br>\" +", "+                                                  \"own package and sub-packages.</html>\"));", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556ffa77617c93c21fa9ee100da866a0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorModel.java", "commitBeforeChange": "7cfb2b5dee6eef3d4b4c3e88918deee5af68078a", "commitAfterChange": "50f8ddd53ad051b199f7d13e98934938f25bd2ae", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JUnitErrorModel(Document doc, String theclass, TestResult result)", "signatureAfterChange": "   public JUnitErrorModel(Document doc, String theclass, TestResult result)", "diff": ["-      String theLine = sw.toString().substring(sw.toString().indexOf(classname));", "-      theLine = theLine.substring(0, theLine.indexOf(\"\\n\"));", "+      String theLine = _substring(sw.toString(), 0, sw.toString().indexOf(classname));", "+      theLine = _substring(theLine, 0, theLine.indexOf(\"\\n\"));", "-      theLine = theLine.substring(theLine.indexOf(\"(\") + 1);", "-      theLine = theLine.substring(0, theLine.indexOf(\")\"));", "+      theLine = _substring(theLine, 0, theLine.indexOf(\"(\") + 1);", "+      theLine = _substring(theLine, 0, theLine.indexOf(\")\"));", "-      String file = theLine.substring(0, theLine.indexOf(\":\"));", "+      String file = _substring(theLine, 0, theLine.indexOf(\":\"));", "-        lineNo = new Integer(theLine.substring(theLine.indexOf(\":\") + 1)).intValue() - 1;", "-      } catch (NumberFormatException e) {", "+        lineNo = new Integer(_substring(theLine, ", "+                                        theLine.indexOf(\":\") + 1,", "+                                        theLine.length()))", "+          .intValue() - 1;", "+      } ", "+      catch (NumberFormatException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06553f662c2752dfc7dcb5bf20da646", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "aac5f34523ac0f0412292e9d65f671aa46b752f4", "commitAfterChange": "10c44767bf3d5eefd230820d6106fe1ea2534e6f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDisplayPanel(ConfigPanel panel)", "diff": ["-    panel.addComponent(new ForcedChoiceOptionComponent(OptionConstants.LOOK_AND_FEEL,", "+    addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.LOOK_AND_FEEL,", "-    panel.addComponent(new ToolbarOptionComponent(\"Toolbar Buttons\", this,", "+    addOptionComponent(panel, new ToolbarOptionComponent(\"Toolbar Buttons\", this,", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.LINEENUM_ENABLED,", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.LINEENUM_ENABLED,", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION,", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.WINDOW_STORE_POSITION,", "-    panel.addComponent(new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION,", "+    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.DIALOG_GOTOFILE_STORE_POSITION,", "-    panel.addComponent(new ButtonComponent(new ActionListener() {", "+    addOptionComponent(panel, new ButtonComponent(new ActionListener() {"]}], "num": 22689}