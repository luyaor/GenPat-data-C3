{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21e5a6b1422eeea373723bf4332b107e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af63b425292e2fb78c94c66fac2c212", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "commitAfterChange": "739371db1261b11c3be5fd70233012a49b45b7ca", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "      private Expression box(Expression exp, ClassType boxedType)", "signatureAfterChange": "      private Expression box(Expression exp, ClassType boxedType)", "diff": ["+        if (NodeProperties.hasValue(exp)) { NodeProperties.setValue(m, NodeProperties.getValue(exp)); }", "+        if (NodeProperties.hasValue(exp)) { NodeProperties.setValue(k, NodeProperties.getValue(exp)); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21cfdd31bfd7d792d4bb473dbdca401c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "299f7a06b8a48edb5fbfad39f77146da0b8bf04b", "commitAfterChange": "37671eca87df017e5050f261f36dc6955d8b96f5", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "      public void setEnabled(boolean enable)", "signatureAfterChange": "      public void setEnabled(boolean enable)", "diff": ["+    _expandItem.setEnabled(enable);", "+    _collapseItem.setEnabled(enable);", "+    _newFolderItem.setEnabled(enable);", "+    _deleteItem.setEnabled(enable);", "+    _renameItem.setEnabled(enable);", "+    _accessory.setEnabled(enable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f83ba8b544fd22fa40ea7afafb5a8ae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-    ", "+", "+    // write breakpoints", "+    if (!_breakpoints.isEmpty()) {", "+      fw.write(\"\\n(breakpoints\");", "+      for(DebugBreakpointData bp: _breakpoints) { fw.write(\"\\n\" + encodeBreakpoint(bp, \"  \")); }", "+      fw.write(\")\"); // close the breakpoints expression", "+    }", "+    else fw.write(\"\\n;; no breakpoints\");", "+", "+    // write watches", "+    if (!_watches.isEmpty()) {", "+      fw.write(\"\\n(watches\");", "+      for(DebugWatchData w: _watches) { fw.write(\"\\n\" + encodeWatch(w, \"  \")); }", "+      fw.write(\")\"); // close the watches expression", "+    }", "+    else fw.write(\"\\n;; no watches\");", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbc869339888168a0927c19fdd45b0b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "39a73399844d4efd2d2ebe97954e53d44db0a9b6", "commitAfterChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public boolean updateConfig()", "signatureAfterChange": "   public boolean updateConfig()", "diff": ["-    Vector<T> current = getValue();", "-    DrJava.getConfig().setSetting(_option, current);", "-    resetToCurrent();", "+    Vector<T> oldValue = DrJava.getConfig().getSetting(_option);", "+    Vector<T> newValue = getValue();", "+", "+    if ((oldValue.size() != newValue.size()) || // allow cheap short-circuiting", "+        (!oldValue.equals(newValue))) { ", "+      DrJava.getConfig().setSetting(_option, newValue);", "+      resetToCurrent();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3890b1c5b0a4c62cf3142dc4af3d94", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "832e5dfbee9301c0432d02f86eab2d13af7f51bc", "commitAfterChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    //this(new MainJVM());", "-    _interpreterControl = new MainJVM();", "+", "-    _interpreterControl.setJUnitModel(this);  // to be replaced by JUnitModel", "+    _interpreterControl.setJUnitModel(_junitModel);", "+    // Chain notifiers so that all events also go to GlobalModelListers.", "+    _interactionsModel.addListener(_notifier);", "+    _compilerModel.addListener(_notifier);", "+    _junitModel.addListener(_notifier);", "+    _javadocModel.addListener(_notifier);", "+", "+    // Listen to compiler to clear interactions appropriately.", "+    // XXX: The tests need this to be registered after _notifier, sadly.", "+    //      This is obnoxiously order-dependent, but it works for now.", "+    _compilerModel.addListener(_clearInteractionsListener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d8fd9c5d35c20dfd6252b347e6633c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "commitAfterChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "signatureAfterChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "diff": ["-    final String ESCAPED_COLON_SEPARATOR = ESCAPE+\":\";", "-    if (!ESCAPED_COLON_SEPARATOR.equals(ESCAPED_PATH_SEPARATOR)) {", "-      tok.addKeyword(ESCAPED_COLON_SEPARATOR); // escaped colon", "+    final String ESCAPED_COLON = ESCAPE+\":\";", "+    if (!ESCAPED_COLON.equals(ESCAPED_PATH_SEPARATOR)) {", "+      tok.addKeyword(ESCAPED_COLON); // escaped colon", "+    // also add escaped escape ('\\u001b') as keyword, but treat it differently", "+    final String ESCAPED_ESCAPE = ESCAPE+ESCAPE;", "+    tok.addKeyword(ESCAPED_ESCAPE); // escaped escape", "-                   n.equals(ESCAPED_COLON_SEPARATOR)) {", "-            // escaped characters", "-            sb.append(n);", "+                   n.equals(ESCAPED_COLON) ||", "+                   n.equals(ESCAPED_ESCAPE)) {", "+            // escaped characters, append the string after the ESCAPE character", "+            sb.append(n.substring(ESCAPE.length()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56ec342eecd3546bce0d7e6202f321b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "16e33a14d9ce477435e70d3dc8dd69757f5a9720", "commitAfterChange": "82b3ca10673b4b0cfccf8adf1834262d94bfb58d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+    else {", "+      fw.write(\"\\n;; no source files\");", "+    }", "+    }", "+    else {", "+      fw.write(\"\\n;; no aux files\");", "+    else {", "+      fw.write(\"\\n;; no collapsed branches\");", "+    }", "+    else {", "+      fw.write(\"\\n;; no classpaths files\");", "+    }", "+    else {", "+      fw.write(\"\\n;; no build directory\");", "+    }", "+    else {", "+      fw.write(\"\\n;; no main class\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79a71e311995672625ce0eb25e430704", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ExpressionChecker.java", "commitBeforeChange": "17b59cf1640c29fbcc5ed0fdfe96f8053eaa1da0", "commitAfterChange": "eef32107e75e031eb7210130ce310e1714e51b91", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "     @Override public Type visit(SimpleAssignExpression node)", "signatureAfterChange": "     @Override public Type visit(SimpleAssignExpression node)", "diff": ["-      if (hasVariable(left) && getVariable(left).isFinal() ||", "-          hasField(left) && getField(left).isFinal()) {", "-        throw new ExecutionError(\"cannot.modify\", node);", "+      if (!context.inConstructorBody()) {", "+        if (hasVariable(left) && getVariable(left).isFinal()) {", "+          setErrorStrings(node, getVariable(left).declaredName());", "+          throw new ExecutionError(\"cannot.modify\", node);", "+        }", "+        else if (hasField(left) && getField(left).isFinal()) {", "+          setErrorStrings(node, getField(left).declaredName());", "+          throw new ExecutionError(\"cannot.modify\", node);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b1e0e1806a07a209d870a92ea30c925", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SimpleInteractionsWindow.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["+    if (args.length > 0 && args[0].equals(\"-debug\")) {", "+      w.defineVariable(\"FRAME\", w);", "+      w.defineVariable(\"CONTROLLER\", w.getController());", "+      w.setInterpreterPrivateAccessible(true);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87db75e7ceeb10527a6f284293bb9ff3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+    // write the create jar file", "+    if (_createJarFile != null) {", "+      fw.write(\"\\n(create-jar-file\");", "+      fw.write(\"\\n\" + encodeFile(_createJarFile, \"  \", true));", "+      fw.write(\")\");", "+    }", "+    else fw.write(\"\\n;; no create jar file\");", "+    ", "+    // write the create jar flags", "+    if (_createJarFlags != 0) {", "+      fw.write(\"\\n(create-jar-flags \" + _createJarFlags + \")\");", "+    }", "+    else fw.write(\"\\n;; no create jar flags\");", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b0e6b85119aeb250da98b9d3693d8e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-   */", "+  /** This method writes what information has been passed to this builder so far to disk in s-expression format. */", "-      for(DocFile df: _sourceFiles) {", "-        fw.write(\"\\n\" + encodeDocFile(df, \"  \"));", "-      }", "+      for(DocFile df: _sourceFiles) { fw.write(\"\\n\" + encodeDocFile(df, \"  \")); }", "-    else {", "-      fw.write(\"\\n;; no source files\");", "-    }", "+    else fw.write(\"\\n;; no source files\");", "-      for(DocFile df: _auxFiles) {", "-        fw.write(\"\\n\" + encodeDocFile(df, \"  \", false));", "-      }", "+      for(DocFile df: _auxFiles) { fw.write(\"\\n\" + encodeDocFile(df, \"  \", false)); }", "-    else {", "-      fw.write(\"\\n;; no aux files\");", "-    }", "+    else fw.write(\"\\n;; no aux files\");", "-    else {", "-      fw.write(\"\\n;; no collapsed branches\");", "-    }", "+    else fw.write(\"\\n;; no collapsed branches\");", "-    if (!_classpathFiles.isEmpty()) {", "+    if (!_classPathFiles.isEmpty()) {", "-      for(File f: _classpathFiles) {", "+      for(File f: _classPathFiles) {", "-    else {", "-      fw.write(\"\\n;; no classpaths files\");", "-    }", "+    else fw.write(\"\\n;; no classpaths files\");", "-    else {", "-      fw.write(\"\\n;; no build directory\");", "+    else fw.write(\"\\n;; no build directory\");", "+    ", "+     // write the working directory", "+    if (_workDir != null) {", "+      fw.write(\"\\n(work-dir\");", "+      fw.write(\"\\n\" + encodeFile(_workDir, \"  \", true));", "+      fw.write(\")\");", "+    else fw.write(\"\\n;; no working directory\");", "-    else {", "-      fw.write(\"\\n;; no main class\");", "-    }", "+    else fw.write(\"\\n;; no main class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f99dc0782e321529195da0dfa5f5be0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 146, "signatureBeforeChange": "   public void generateJavaAPISet()", "signatureAfterChange": "   public void generateJavaAPISet()", "diff": ["+    // should NOT be called in the event thread", "+    // otherwise the processing frame will not work correctly and the event thread will block", "+    // assert (!EventQueue.isDispatchThread());", "+      final edu.rice.cs.util.swing.ProcessingDialog pd =", "+        new edu.rice.cs.util.swing.ProcessingDialog(this, \"Java API Classes\", \"Loading, please wait.\");", "+      if (!EventQueue.isDispatchThread()) { pd.setVisible(true); }", "-                                                                             \"/allclasses-frame.html\"));", "+                                                                         \"/allclasses-frame.html\"));", "+      ", "+      // finished", "+      if (!EventQueue.isDispatchThread()) {", "+        pd.setVisible(false);", "+        pd.dispose();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a334a0bb7f796a7179e7dde93fc6967c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/StringOps.java", "commitBeforeChange": "08dc50acc6315b4a29619a0eb44a9574f8e58999", "commitAfterChange": "fdb0eba529d65804f971cdb52c673713ef0d4616", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "signatureAfterChange": "   public static List<List<List<String>>> commandLineToLists(String cmdline)", "diff": ["+    // also add escaped space as keyword, but treat it differently", "+    final String ESCAPED_SPACE = new Character((char)0x1B).toString()+\" \";", "+    tok.addKeyword(ESCAPED_SPACE); // escaped space", "+          else if (n.equals(ESCAPED_SPACE)) {", "+            // escaped whitespace", "+            sb.append(ESCAPED_SPACE);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6560d3881f67d514057b1532e488296", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileBuilder.java", "commitBeforeChange": "27cb6e93149c6a1991393a8ca4c655137f9f0cb6", "commitAfterChange": "dd2df9abefe60137729d1e2ed7d31fad6497b670", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+    fw.write(\";; relative files are made relative to: \" + _projectFile.getParentFile().getCanonicalFile());", "+    // write the project root", "+    if (_projRoot != null) {", "+      fw.write(\"\\n(proj-root\");", "+      fw.write(\"\\n\" + encodeFile(_projRoot, \"  \", true));", "+      fw.write(\")\");", "+    }", "+        ", "-        fw.write(\"\\n\" + encodeFile(f, \"  \"));", "+        fw.write(\"\\n\" + encodeFile(f, \"  \", false));", "-      fw.write(\"\\n\" + encodeFile(_buildDir, \"  \"));", "+      fw.write(\"\\n\" + encodeFile(_buildDir, \"  \", true));", "-      fw.write(\"\\n\" + encodeFile(_mainClass, \"  \"));", "+      fw.write(\"\\n\" + encodeFile(_mainClass, \"  \", true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9322ec4e6106bc68c8230b608b97429", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "839683081b0d966fa9fc02dc0e1948fc900d3a55", "commitAfterChange": "72ee238f22e4ae6534ad887ff5bcbab9970c036e", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["-                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\"));", "+                                                  \"<html>Warn about unchecked conversions involving parameterized types.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\"));", "+                                                  \"<html>Warn about each use or override of a deprecated method, field, or class.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\"));", "+                                                  \"<html>Warn about nonexistent members of the classpath and sourcepath.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\"));", "+                                                  \"<html>Warn about missing <code>serialVersionUID</code> definitions on serializable classes.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\"));", "+                                                  \"<html>Warn about <code>finally</code> clauses that cannot complete normally.</html>\", false)", "+                         .setEntireColumn(true));", "-                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\"));", "-    addOptionComponent(panel, new LabelComponent(\"<html><br><br>Note: Compiler warnings not shown if<br>compiling any Java language level files.</html>\", this, true));", "+                                                  \"<html>Warn about <code>switch</code> block cases that fall through to the next case.</html>\", false)", "+                         .setEntireColumn(true));", "+    addOptionComponent(panel, new LabelComponent(\"<html><br><br>Note: Compiler warnings not shown if compiling any Java language level files.</html>\", this, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6571db13357b665523d2a0254bfc05e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "1cd6e8ce021ac2fbb1da5693399466b47af228fa", "commitAfterChange": "d57a4715eeda5394b496008be220f6252b47b950", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "      public void write(OutputStream os) throws IOException", "signatureAfterChange": "      public void write(OutputStream os) throws IOException", "diff": ["+    DocFile active = null;", "-      DocFile active = null;", "+      // move active document to the front of the list", "+      if (active!=null) { _sourceFiles.remove(active); _sourceFiles.add(0,active); }", "-      DocFile active = null;", "+        // move active document to the front of the list", "+        if (active!=null) { _auxFiles.remove(active); _auxFiles.add(0,active); }", "-      DocFile active = null;", "+        // move active document to the front of the list", "+        if (active!=null) { _excludedFiles.remove(active); _excludedFiles.add(0,active); }      "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb68ca22aed3886487d3d9ecb0b29fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["-      for(DocFile df: _sourceFiles) { fw.write(\"\\n\" + encodeDocFileRelative(df, \"  \")); }", "+      DocFile active = null;", "+      for(DocFile df: _sourceFiles) {", "+        if(df.isActive()) {", "+          active = df;", "+          fw.write(\"\\n\" + encodeDocFileRelative(df, \"  \"));", "+          break; //Assert that there is only one active document in the project", "+        }", "+      }", "+      for(DocFile df: _sourceFiles) { ", "+        if(df != active)", "+          fw.write(\"\\n\" + encodeDocFileRelative(df, \"  \"));", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd010707bc86d9f247fc7299ee107b36", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StickyClassLoader.java", "commitBeforeChange": "975a973f9e2217829d49fe44c03c20f513a1e461", "commitAfterChange": "88eadd0fde32671120c3117e431d5e06c9b4c874", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected Class loadClass(String name, boolean resolve)      throws ClassNotFoundException", "signatureAfterChange": "   protected Class loadClass(String name, boolean resolve)      throws ClassNotFoundException", "diff": ["-        name.startsWith(\"sun.\"))", "+        name.startsWith(\"sun.\") ||", "+        name.startsWith(\"com.sun.\") ||", "+        name.startsWith(\"org.omg.\") ||", "+        name.startsWith(\"sunw.\") ||", "+        name.startsWith(\"org.w3c.dom.\") ||", "+        name.startsWith(\"org.xml.sax.\") ||", "+        name.startsWith(\"net.jini.\")) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecb93ee4911060b3a0f1d3c8def60094", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/VectorOptionComponent.java", "commitBeforeChange": "c302d1db72cb508e0cec30d24e39d48cce8fd663", "commitAfterChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   protected void updateButtons()", "signatureAfterChange": "   protected void updateButtons()", "diff": ["+    boolean editable = DrJava.getConfig().isEditable(_option);", "-      boolean enable = (rows.length > 0) && (_data.size()>1);", "+      boolean enable = (rows.length > 0) && (_data.size()>1) && editable;", "+    _addButton.setEnabled(editable);", "+    _removeButton.setEnabled(editable);", "+    _table.setEnabled(editable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f908f6c7ef1fa37fb0c2a94c4b828402", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+    // write bookmarks", "+    if (!_bookmarks.isEmpty()) {", "+      fw.write(\"\\n(bookmarks\");", "+      for(DocumentRegion bm: _bookmarks) { fw.write(\"\\n\" + encodeBookmarkRelative(bm, \"  \")); }", "+      fw.write(\")\"); // close the bookmarks expression", "+    }", "+    else fw.write(\"\\n;; no bookmarks\");", "+"]}], "num": 21814}