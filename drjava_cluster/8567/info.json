{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d0c9762c175f4f8af800b3b89cc1a8b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ff4152731c689fd468feba80fbdbf4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 86, "signatureBeforeChange": "     @Override public Type forUnionTypeOnly(UnionType t, Iterable<? extends Type> normTypes)", "signatureAfterChange": "     @Override public Type forUnionTypeOnly(UnionType t, Iterable<? extends Type> normTypes)", "diff": ["-      Type result = JOIN_NORM.value(normTypes);", "+      Type result = new NormJoiner(_subtyper).value(normTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ab388a0b59c10a19fc9e3e6efde6c44", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 85, "signatureBeforeChange": "     @Override public Type forIntersectionTypeOnly(IntersectionType t, Iterable<? extends Type> normTypes)", "signatureAfterChange": "          @Override public Type forIntersectionTypeOnly(IntersectionType t, Iterable<? extends Type> normTypes)", "diff": ["-  private final TypeUpdateVisitor NORMALIZE = new TypeUpdateVisitor() {", "+    ", "-      debug.logStart(new String[]{\"t\",\"normTypes\"}, wrap(t), wrap(normTypes));", "-      Type result = MEET_NORM.value(normTypes);", "-      debug.logEnd(\"result\", wrap(result));", "+      //debug.logStart(new String[]{\"t\",\"normTypes\"}, wrap(t), wrap(normTypes)); try {", "+      Type result = new NormMeeter(_subtyper).value(normTypes);", "+      //} finally { debug.logEnd(); }"]}], "num": 8567}