{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb9d8c0cd67cdc9defaf41775087fee7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010cbdc81beefa32f2f1a153c021bbc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "1d5ed2851be5131d7464b6dee0ae0d5fe13eb77d", "commitAfterChange": "f04b27133e1dfdd1ba7aef9e8d008a92f888d6d9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010908-2252\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1733\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015529d4115bec79e47830016250eb06", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011128-1839\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011213-0407\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e8b4e5e515506327304016fb6e5db7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCompileWithPackageAsPartOfFieldName()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileWithPackageAsPartOfFieldName()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0212c56e182cdbe65e2a58613711ea9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "224d0c84f840f8ce41af8c46df98c9446d0323a9", "commitAfterChange": "23d1c475c29f1525fd3971f7ee4a6f8e9616fd8a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011213-0407\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011221-1020\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ba8b67dd7605e71e68643dc664aac5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testLongMaxValue() throws ParseException", "signatureAfterChange": "   public void testLongMaxValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035e5c57665ccdbff570b5cf5f0914b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "8a099b753fcfb83be248d39f70edd5788e8b1222", "commitAfterChange": "4701dc92d8eb3da9b7f829b98cf858de261361f6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020108-0958\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020116-1017\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0556a3ce2df38f44b9e8b599bd10527e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "e776a11cf725fef8ab56c9363f575bc1bfa6b931", "commitAfterChange": "f4ccd5f98cb80a188bd296016b0fb3efaff7b4e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-1158\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011128-1839\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "071a36801eda81ce6a43bc3e9b2f781d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                                                 \"To exclude a package, specify packagename.* in the list.</html>\"));", "+                                                 \"To exclude a package, specify <code>packagename.*</code> in the list.</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09595cf4f2e8586430a6d8e44c5a7bef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "6c72ee3271e405b3e1eb75ff7cd6ca6f659b9121", "commitAfterChange": "c767fd7ac698a252b2acccd30077ab91751fe069", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010830-1503\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010830-1545\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a79381cebf7bff8e0afcf0cda6c186a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/Javac150FromClassPath.java", "commitBeforeChange": "0ceee5d462dea01e571a97507c2d04495b971db0", "commitAfterChange": "ab9e3c17a5a3c5f93e2194242f915fa2f6bda14a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private Javac150FromClassPath()", "signatureAfterChange": "   private Javac150FromClassPath()", "diff": ["-    super(\"edu.rice.cs.drjava.model.compiler.JSR14v20Compiler\",", "-          Javac150FromClassPath.class.getClassLoader());", "+    super(\"edu.rice.cs.drjava.model.compiler.Javac150Compiler\", Javac150FromClassPath.class.getClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b53003941be3166a5f3284f541d9524", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "6f4876cdb9441d04299c257c0c7b9b6cc5cb955d", "commitAfterChange": "7be13fcc2c0b7d44e976f39092577be8a7dfb680", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1119\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1154\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd9e250fe013cb9ca029dc2ede24ad9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsPaneTest.java", "commitBeforeChange": "7d7d651695cc4a26c75cdfb50217f79acc4c45a4", "commitAfterChange": "641e8d72a9e70ecaee90e1431ba7ab971af51ca9", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      public void testSystemIn()", "signatureAfterChange": "      public void testSystemIn()", "diff": ["-      assertEquals(\"Should have returned the correct text.\", \"test-text\\n\", buf.toString());", "+      // we don't expect the newline anymore, this is now added by the input box", "+      assertEquals(\"Should have returned the correct text.\", \"test-text\", buf.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfc499039489cd863b3ae91663140c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "commitAfterChange": "c609c16897e3dba54f431a1295bf349c06176070", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1050\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1338\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d3eadb5f011f9edac4677b206f6a11d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "a80adb22a6549a11ebdbb59ef5adb3006176addd", "commitAfterChange": "45e7d2e3b59938f5513d4bf9a8c629e42599c7d2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1212\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1540\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e475864b8d853018ed5716d9d41270f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "commitAfterChange": "6f064a351cf6f32ca81eb7bd4e1d9f192f6a46c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-0951\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1042\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f0db046b8e158ead6a208d62657dc18", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "0f1ebded0cf3f3c1433e87b9a6d077f0d67078af", "commitAfterChange": "1763a6ab49dd15d269dd2d0282cbf8194b7ebef3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "signatureAfterChange": "    public Javac160Compiler(JavaVersion.FullVersion version, String location, List<? extends File> defaultBootClassPath)", "diff": ["-    _filterExe = version.compareTo(JavaVersion.parseFullVersion(\"1.6.4_04\")) >= 0;", "+    _filterExe = version.compareTo(JavaVersion.parseFullVersion(\"1.6.0_04\")) >= 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f9149e896e92bfba6d5a86a830a8756", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepValid()     throws BadLocationException, IOException, InvalidPackageException", "diff": ["-    // Save the footext to Foo.java in the subdirectory", "-    File fooFile = new File(subdir, \"Foo.java\");", "+    // Save the footext to DrJavaTestFoo.java in the subdirectory", "+    File fooFile = new File(subdir, \"DrJavaTestFoo.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff2402c3ef2d1668edda1b7be8e2086", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-nextgen/edu/rice/cs/drjava/model/compiler/NextGenCompiler.java", "commitBeforeChange": "101c103fed282ea73966b5bc0dce7152a188fba5", "commitAfterChange": "2bbdbef8ef11cd93c30f52236eee8443bfc75e9d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      protected static String _transformNextgenCommand(String s)", "signatureAfterChange": "      protected static String _transformNextgenCommand(String s)", "diff": ["-    final String command = \"edu.rice.cs.nextgen2.classloader.Runner.main(\\\"{0}\\\"{1});\";", "+    final String command = \"edu.rice.cs.nextgen2.classloader.Runner.main(new String[]'{'\\\"{0}\\\"{1}'}');\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1072c820ae2ffe66e9197483ff66e796", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void checkFile(File relativeFile, String funnyName)       throws IOException, InvalidPackageException", "signatureAfterChange": "   private void checkFile(File relativeFile, String funnyName)       throws IOException, InvalidPackageException", "diff": ["-                              \"package \" + funnyName + \"; class X {}\");", "+                              \"package \" + funnyName + \"; class X { }\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109eb75ff76a5619a5feaa509f1b8c7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 65, "signatureBeforeChange": "    public ClassPathVector getClassPath()", "signatureAfterChange": "      public ClassPathVector getClassPath()", "diff": ["-  public ClassPathVector getClassPath() {", "-     throw new UnsupportedOperationException(\"Tried to call getClasspath on a Dummy\");", "+  ", "+  public ClassPathVector getClassPath() {", "+    throw new UnsupportedOperationException(\"Tried to call getClassPath on a Dummy\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "111c9adffb4996280004905f46e8e6aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r   \r   public void getNodePath1() throws Exception", "signatureAfterChange": "      public void getNodePath1() throws Exception", "diff": ["-  \r", "-  public void getNodePath1() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><concutest>\\n\"\r", "-                                                    +\"  <threadcheck:def>\\n\"\r", "-                                                    +\"    <invariant>\\n\"\r", "-                                                    +\"      <name type=\\\"only\\\" value=\\\"childclass1\\\"/>\\n\"\r", "-                                                    +\"    </invariant>\\n\"\r", "-                                                    +\"    <class name=\\\"sample.threadCheck.ThreadCheckSample4\\\"/>\\n\"\r", "-                                                    +\"  </threadcheck:def>\\n\"\r", "-                                                    +\"  <threadcheck:def>\\n\"\r", "-                                                    +\"    <invariant>\\n\"\r", "-                                                    +\"      <name type=\\\"only\\\" value=\\\"childclass-method1\\\"/>\\n\"\r", "-                                                    +\"    </invariant>\\n\"\r", "-                                                    +\"    <method name=\\\"sample.threadCheck.ThreadCheckSample4\\\" sig=\\\"run()V\\\"/>\\n\"\r", "-                                                    +\"    <method name=\\\"sample.threadCheck.ThreadCheckSample4\\\" sig=\\\"run2()V\\\"/>\\n\"\r", "-                                                    +\"  </threadcheck:def>\\n\"\r", "-                                                    +\"</concutest>\"));\r", "-    assertEquals(\"Path of null is wrong\", \"\", XMLConfig.getNodePath(null));\r", "-    \r", "-    List<Node> roots = xc.getNodes(\"concutest\");\r", "-    Assert.assertEquals(1, roots.size());\r", "-    assertEquals(\"Path of \"+roots.get(0).getNodeName()+\" is wrong\", \"concutest\", XMLConfig.getNodePath(roots.get(0)));\r", "-    \r", "-    List<Node> defs = xc.getNodes(\"concutest/threadcheck:def\");\r", "-    Assert.assertEquals(2, defs.size());\r", "-    \r", "-    for(Node def: defs) {\r", "-      assertEquals(\"Path of \"+def.getNodeName()+\" is wrong\", \"concutest/threadcheck:def\", XMLConfig.getNodePath(def));\r", "-      List<Node> invs = xc.getNodes(\"invariant\", def);\r", "-      Assert.assertEquals(1, invs.size());\r", "-      Node inv = invs.get(0);\r", "-      assertEquals(\"Path of \"+inv.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/invariant\", XMLConfig.getNodePath(inv));\r", "-      List<Node> annots = xc.getNodes(\"*\", inv);\r", "-      Assert.assertEquals(1, annots.size());\r", "-      assertEquals(\"Path of \"+annots.get(0).getNodeName()+\" is wrong\", \"concutest/threadcheck:def/invariant/name\", XMLConfig.getNodePath(annots.get(0)));\r", "-      List<Node> classes = xc.getNodes(\"class\", def);\r", "-      List<Node> methods = xc.getNodes(\"method\", def);\r", "-      Assert.assertTrue(\"There must be at least one class or method per definition\", (classes.size()+methods.size()>0));\r", "-      List<Node> all = xc.getNodes(\"*\", def);\r", "-      Assert.assertEquals(0, all.size()-invs.size()-classes.size()-methods.size());\r", "-      for(Node target: classes) {\r", "-        assertEquals(\"Path of \"+target.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/class\", XMLConfig.getNodePath(target));\r", "-      }\r", "-      for(Node target: methods) {\r", "-        assertEquals(\"Path of \"+target.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/method\", XMLConfig.getNodePath(target));\r", "-      }\r", "-    }\r", "-  }\r", "+  ", "+  public void getNodePath1() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><concutest>\\n\"", "+                                                    +\"  <threadcheck:def>\\n\"", "+                                                    +\"    <invariant>\\n\"", "+                                                    +\"      <name type=\\\"only\\\" value=\\\"childclass1\\\"/>\\n\"", "+                                                    +\"    </invariant>\\n\"", "+                                                    +\"    <class name=\\\"sample.threadCheck.ThreadCheckSample4\\\"/>\\n\"", "+                                                    +\"  </threadcheck:def>\\n\"", "+                                                    +\"  <threadcheck:def>\\n\"", "+                                                    +\"    <invariant>\\n\"", "+                                                    +\"      <name type=\\\"only\\\" value=\\\"childclass-method1\\\"/>\\n\"", "+                                                    +\"    </invariant>\\n\"", "+                                                    +\"    <method name=\\\"sample.threadCheck.ThreadCheckSample4\\\" sig=\\\"run()V\\\"/>\\n\"", "+                                                    +\"    <method name=\\\"sample.threadCheck.ThreadCheckSample4\\\" sig=\\\"run2()V\\\"/>\\n\"", "+                                                    +\"  </threadcheck:def>\\n\"", "+                                                    +\"</concutest>\"));", "+    assertEquals(\"Path of null is wrong\", \"\", XMLConfig.getNodePath(null));", "+    ", "+    List<Node> roots = xc.getNodes(\"concutest\");", "+    Assert.assertEquals(1, roots.size());", "+    assertEquals(\"Path of \"+roots.get(0).getNodeName()+\" is wrong\", \"concutest\", XMLConfig.getNodePath(roots.get(0)));", "+    ", "+    List<Node> defs = xc.getNodes(\"concutest/threadcheck:def\");", "+    Assert.assertEquals(2, defs.size());", "+    ", "+    for(Node def: defs) {", "+      assertEquals(\"Path of \"+def.getNodeName()+\" is wrong\", \"concutest/threadcheck:def\", XMLConfig.getNodePath(def));", "+      List<Node> invs = xc.getNodes(\"invariant\", def);", "+      Assert.assertEquals(1, invs.size());", "+      Node inv = invs.get(0);", "+      assertEquals(\"Path of \"+inv.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/invariant\", XMLConfig.getNodePath(inv));", "+      List<Node> annots = xc.getNodes(\"*\", inv);", "+      Assert.assertEquals(1, annots.size());", "+      assertEquals(\"Path of \"+annots.get(0).getNodeName()+\" is wrong\", \"concutest/threadcheck:def/invariant/name\", XMLConfig.getNodePath(annots.get(0)));", "+      List<Node> classes = xc.getNodes(\"class\", def);", "+      List<Node> methods = xc.getNodes(\"method\", def);", "+      Assert.assertTrue(\"There must be at least one class or method per definition\", (classes.size()+methods.size()>0));", "+      List<Node> all = xc.getNodes(\"*\", def);", "+      Assert.assertEquals(0, all.size()-invs.size()-classes.size()-methods.size());", "+      for(Node target: classes) {", "+        assertEquals(\"Path of \"+target.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/class\", XMLConfig.getNodePath(target));", "+      }", "+      for(Node target: methods) {", "+        assertEquals(\"Path of \"+target.getNodeName()+\" is wrong\", \"concutest/threadcheck:def/method\", XMLConfig.getNodePath(target));", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112f5331bb01ca6caad008c11dc940e2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "commitAfterChange": "b159e637985cd2912c2d9a631b6e55036a5a2af6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020107-1249\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020108-0958\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1190019976f323115ea5bd2dc8cee4f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "9de352299088533a44cc17c1ffd7938654146b70", "commitAfterChange": "fb275f71eca23e6f93c695458f20ebc27e058287", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1332\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1858\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ff5b9524c90edc6adfdbc096cd86c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testUShiftRight() throws InterpreterException", "signatureAfterChange": "   public void testUShiftRight() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.UnsignedShiftRightExpression: (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: -1 -1 int)]) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.UnsignedShiftRightExpression: (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: -1 -1 int)]) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "-    //String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.MinusExpression: (koala.dynamicjava.tree.IntegerLiteral: 1 1 int))]))\";", "-    //String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Long) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    //String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.MinusExpression: (koala.dynamicjava.tree.IntegerLiteral: 1 1 int))]))\";", "+    //String expectedRight = \"(koala.dynamicjava.tree.ObjectMethodCall: longValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Long) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e78e24b5e1f1bc755b738975031614", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 49, "signatureBeforeChange": "      public void testSimpleAssignBox() throws ExceptionReturnedException", "signatureAfterChange": "      public void testSimpleAssignBox() throws ExceptionReturnedException", "diff": ["-    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: true true boolean)])\";", "+    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: java.lang.Boolean) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.BooleanLiteral: true true boolean) (koala.dynamicjava.tree.BooleanType: boolean))])\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141226c654e05538a12b09b2e1f82814", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testIsIn1DArray() throws BadLocationException", "signatureAfterChange": "    public void testIsIn1DArray() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0.\", ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1441c4ed181239e4a047c955d5bd2b38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void testPrintString () throws BadLocationException", "signatureAfterChange": "   public void testPrintString () throws BadLocationException", "diff": ["-    _assertContents(\"Sys.out(\\\"hello\\\"\\n        \", doc);", "+    _assertContents(\"Sys.out(\\\"hello\\\"\\n          \", doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14dab63ee39968ee530582be0380dab8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "acb61ff7586f62b61a15637f6576fc3aff67ead1", "commitAfterChange": "7f6caafd37c000cec49c11321ed7ed1199924a0b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _doFind()", "signatureAfterChange": "   private void _doFind()", "diff": ["-      _message.setText(\"Reached the end of the document, continuing from the beginning.\");", "+      _message.setText(\"Search wrapped to beginning.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a8bf97963265dd681dd51621d801df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "commitAfterChange": "f68cf86a7b77c6be6c5664ebc77bddbfe7e5ec96", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1439\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1625\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c96e72ea352eeb5593be2bdb5d093c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/DocumentDebugAction.java", "commitBeforeChange": "9297bd3255995599281a9a548fcd6e849eecaf7b", "commitAfterChange": "b8d26b54d9d0d791e5e97a6dd352ae0f9f5f3b20", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   protected void _initializeRequests(Vector<ReferenceType> refTypes) throws DebugException", "signatureAfterChange": "   protected void _initializeRequests(Vector<ReferenceType> refTypes) throws DebugException", "diff": ["-          throw new LineNotExecutableException(\"Cannot set breakpoint, line \"+getLineNumber()+\" is not an executable line.\");", "+          throw new LineNotExecutableException(\"Cannot set breakpoint, line \"+getLineNumber()+\" is not an executable line.\\nYou may have to recompile.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1619348e2ab4baeb74c1d77101062712", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testEndOfBlockComment () throws BadLocationException", "signatureAfterChange": "   public void testEndOfBlockComment () throws BadLocationException", "diff": ["-    _assertContents(\"\\n{\\n  hello;\\n /*\\n hello\\n  */\", doc);", "+    _assertContents(\"\\n{\\n  hello;\\n /*\\n hello\\n */\", doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163adf54cb92d2808679a32ea8907b21", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d95e05b94bb85b9fefc27bcb5d21a4779fe83bf0", "commitAfterChange": "1b9869851f567b7b6474eabaac96584b4771f5f3", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 205, "signatureBeforeChange": "     public void preparePrintJob() throws BadLocationException,       FileMovedException", "signatureAfterChange": "     public void preparePrintJob() throws BadLocationException, FileMovedException", "diff": ["-     */", "-    public void preparePrintJob() throws BadLocationException,", "-      FileMovedException {", "-", "-      String filename = \"(untitled)\";", "-      try {", "-        filename = getFile().getAbsolutePath();", "-      }", "-      catch (IllegalStateException e) {", "-      }", "+    /** This method tells the document to prepare all the DrJavaBook and PagePrinter objects. */", "+    public void preparePrintJob() throws BadLocationException, FileMovedException {", "+      String filename = \"(Untitled)\";", "+      try { filename = getFile().getAbsolutePath(); }", "+      catch (IllegalStateException e) { /* do nothing */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164bc554725da2ab85586f4fe0224294", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageOneDeepValid()     throws BadLocationException, IOException", "diff": ["-    // Save the footext to Foo.java in the subdirectory", "-    File fooFile = new File(subdir, \"Foo.java\");", "+    // Save the footext to DrJavaTestFoo.java in the subdirectory", "+    File fooFile = new File(subdir, \"DrJavaTestFoo.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "170ee831f942a2147a40c19190e53648", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "commitAfterChange": "d4643b25aa1ba85b3566f2ec6d18c09804859dff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1125\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1527\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17dbbfa75239d469af528d141ecf5f2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StrictURLClassLoaderTest.java", "commitBeforeChange": "fda5fc5ac0b2dd21681fc84b13c9f0031b321af7", "commitAfterChange": "303ddb2c47275a1e2c25f273f6ed234a39d50962", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testWontLoadResourceFromBootClassPath() throws Throwable", "signatureAfterChange": "   public void testWontLoadResourceFromBootClassPath() throws Throwable", "diff": ["-    String compiler = \"com/sun/tools/javac/v8/JavaCompiler.class\";", "+    String compiler = \"com/sun/tools/javac/main/JavaCompiler.class\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e2100b869c26484b38939f21f21abe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public void write() throws IOException", "signatureAfterChange": "   public void write() throws IOException", "diff": ["+    /* In the new project file form, this property has been renamed \"proj-root-and-base\" (instead of \"proj-root\") to", "+     * indicate that the project root now serves as the base for source file path names. */", "+    /* This property has been renamed \"source-files\" (instead of \"source\") so that old versions of DrJava will not ", "+     * recognize it.  In the new project file format, source files are relative to the project root, not the parent", "+     * of the project file. */", "-      fw.write(\"\\n(source\");", "+      fw.write(\"\\n(source-files\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1879767afc4fa54dd046e384556519cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 520, "methodNumberAfterChange": 520, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_printDefDocAction, \"Print\", \"Print the current main document\");", "+    _setUpAction(_printDefDocAction, \"Print\", \"Print the current document\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "199dfb5ddb486105137fcacc84906f5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "commitAfterChange": "36da33844ba54377479a55c5dc3b578eed405d70", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _setupMiscPanel( ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel( ConfigPanel panel)", "diff": ["-    panel.addComponent( new IntegerOptionComponent ( OptionConstants.RECENT_FILES_MAX_SIZE, \"Maximum Size of Recent Files List\", this));", "+    panel.addComponent( new IntegerOptionComponent ( OptionConstants.RECENT_FILES_MAX_SIZE, \"Recent Files List Size\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a12ddda7fc160ade0cd841dd3e4a15d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "3b199317bab9cde1aec90843dc1552ed445d9116", "commitAfterChange": "e1d76a8e41d7589020cd663b965ed013355a7798", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1338\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1354\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6a35f6c32b40fb9e6d94b44f2c2727", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r   public void testNodeStarAttrsStar() throws Exception", "signatureAfterChange": "   public void testNodeStarAttrsStar() throws Exception", "diff": ["-  }\r", "-  public void testNodeStarAttrsStar() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar flubb=\\\"mno\\\">abc</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"*.*\");\r", "-    assertEquals(1, r.size());\r", "-    assertEquals(\"foo.a\", r.get(0));\r", "-    \r", "-    r = xc.getMultiple(\"foo/*.*\");\r", "-    assertEquals(4, r.size());\r", "-    assertEquals(\"mno\", r.get(0));\r", "-    assertEquals(\"xyz\", r.get(1));\r", "-    assertEquals(\"aaa\", r.get(2));\r", "-    assertEquals(\"zzz\", r.get(3));\r", "-  }\r", "+  }", "+  public void testNodeStarAttrsStar() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar flubb=\\\"mno\\\">abc</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"*.*\");", "+    assertEquals(1, r.size());", "+    assertEquals(\"foo.a\", r.get(0));", "+    ", "+    r = xc.getMultiple(\"foo/*.*\");", "+    assertEquals(4, r.size());", "+    assertEquals(\"mno\", r.get(0));", "+    assertEquals(\"xyz\", r.get(1));", "+    assertEquals(\"aaa\", r.get(2));", "+    assertEquals(\"zzz\", r.get(3));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1abda83f3b018837da511a734f68fb6f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c7f99f593d2785b44133e47474503089ee932664", "commitAfterChange": "93d083982a38dd34642ce803c40077dce7c08e66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011031-1416\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011031-1548\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac8f3db51485520e1afb07d60bad4d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "commitAfterChange": "826853cc9405a53970a4e3ba9d7145b4ff5544e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-2205\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1050\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba108bb1fd529bb2a29c6519d268045", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c806186de1ee7459e18ea735c68146d90041369a", "commitAfterChange": "48bd01bfa11f5e14cb30ac1d3cf033310b2e45bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010904-1436\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010908-2252\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb056efd84052479233a3d5f0297b11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "commitAfterChange": "d1b53b456f7dd4cc72458a21036639096a69a74e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1014\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1125\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d43bdf02c813a5069045f42a2d469ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/plugins/eclipse/src/edu/rice/cs/drjava/plugins/eclipse/repl/EclipseInteractionsModel.java", "commitBeforeChange": "9e872e89ecbb011ef008c884ca8c25835ce56230", "commitAfterChange": "643b18bac8370f79aefcf668722f7c98ff72b6b4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public String getConsoleInput()", "signatureAfterChange": "   public String getConsoleInput()", "diff": ["-    _document.insertBeforeLastPrompt(\"System.in is not yet supported.\" + _newLine,", "+    _document.insertBeforeLastPrompt(\"System.in is not yet supported!\" + _newLine,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9ed137d3837fc2e41477d3dcb6de5e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "commitAfterChange": "b4994c0f88d432c30b9a33dae371fbe69a371425", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1311\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1439\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e949531abca8ef460a8d21a0d93cc3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void prompt()", "signatureAfterChange": "    public void prompt()", "diff": ["-      super.insertString(getLength(), \"\\n> \", null);", "+      super.insertString(getLength(), \"> \", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "205e0f4b60893e647afef3f00a22c86a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testMinimalForEach() throws ParseException", "signatureAfterChange": "   public void testMinimalForEach() throws ParseException", "diff": ["-      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "208a186d3bd73f5575ca6bc1e357fa71", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7d82d9a9e73d6d4daf3c6fb1f950005e1d7ff33e", "commitAfterChange": "6a6368ca8d833ea78d352b3e04edd79feda76cc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010817-1437\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1152\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "226872daf7f4b5f35d9146c8c2498521", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "dc0befa68595a5c499b8803df615b4dd1cb06eb6", "commitAfterChange": "1a1442977dda2bbe384cc0f246999c7f651f6997", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws IOException", "signatureAfterChange": "   public void setUp() throws IOException", "diff": ["-      \"   (file (name \\\"\"+ _file2RelName +\"\\\")(select 0 0)))\\n\";", "+      \"   (file (name \\\"\"+ _file2RelName +\"\\\")(select 0 0)(active)))\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24457406461f7dd247d7297ae88ed81c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "commitAfterChange": "2df7289d55456372fbaf4e3ab78549d8571648f8", "methodNumberBeforeChange": 216, "methodNumberAfterChange": 253, "signatureBeforeChange": "   public ClassPathVector getClassPath()", "signatureAfterChange": "   public ClassPathVector getClassPath()", "diff": ["-  public ClassPathVector getClassPath() {", "-    throw new UnsupportedOperationException(\"AbstractGlobalModel does not support classPaths\");", "+  /** throws an UnsupportedOperationException */", "+  public ClassPathVector getClassPath() {", "+    throw new UnsupportedOperationException(\"AbstractGlobalModel does not support class paths\");", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "247d0da9daa1d43997041f804a47cf25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public void testSimpleAssignUnbox() throws InterpreterException", "signatureAfterChange": "   public void testSimpleAssignUnbox() throws InterpreterException", "diff": ["-    String rightExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String rightExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25866ab42c562a883fdcdc1b923540bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r   \r   public void testMultipleNodes() throws Exception", "signatureAfterChange": "      public void testMultipleNodes() throws Exception", "diff": ["-  \r", "-  public void testMultipleNodes() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar>abc</bar>\\n\"\r", "-                                                    + \"  <bar>ghi</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo/bar\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"abc\", r.get(0));\r", "-    assertEquals(\"ghi\", r.get(1));\r", "-  }\r", "+  ", "+  public void testMultipleNodes() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar>abc</bar>\\n\"", "+                                                    + \"  <bar>ghi</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo/bar\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"abc\", r.get(0));", "+    assertEquals(\"ghi\", r.get(1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262ffd976dc3b93e7970bebaf1c6071f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "11a167d5b0a97e55aef4d62ed18d4da71e30b762", "commitAfterChange": "a32847752bc1c4d9a9c65da4d91d56e3d8a61fa6", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 251, "signatureBeforeChange": "          public void saveBeforeJUnit()", "signatureAfterChange": "          public void saveBeforeJUnit()", "diff": ["-         \"files. Would you like to save and then compile?\");", "+         \"files. Would you like to save and compile now?\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264d0303dd726460873e1cd3142f9945", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipCommentsTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "        public void testCloseBracePrefix() throws BadLocationException", "signatureAfterChange": "        public void testCloseBracePrefix() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART - line doesn't start with a close brace.\",      !_rule.applyRule(_doc,   0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0 - line doesn't start with a close brace.\",      !_rule.applyRule(_doc,   0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266f3b14a049d7b54061d9cb0210a68d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/MultiThreadedTestCase.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public void uncaughtException(java.lang.Thread t, Throwable e)", "signatureAfterChange": "     public void uncaughtException(java.lang.Thread t, Throwable e)", "diff": ["-        System.out.println(\"Uncaught Exception in spawned thread within a MultiThreadedTestCase:\");", "+        System.out.println(\"***Uncaught Exception in spawned thread within a MultiThreadedTestCase:\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a79938f456f16bd8ca84e39e4358ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "8d3cdbacfda748aaaf1451c3632bfbbb860b1d39", "commitAfterChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    //DJError[] errors = _model.getCompileErrors();", "-", "-    //StringBuffer buf = new StringBuffer();", "-    //for (int i = 0; i < errors.length; i++) {", "-    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    //}", "-", "-    assertEquals(name + \"compile errors > 0? numErrors =\" + numErrors, b, numErrors > 0);", "+    ", "+    assertEquals(name + \" compile errors > 0 ? numErrors = \" + numErrors, b, numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "272adbd7be0959c43f5c5344614e4c00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "f4d62c7f81e2673278601dd88ad24c59dc9e7094", "commitAfterChange": "f8d50a718270a1c53c20d67c84305546551fe17b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void checkVarArgs(MethodDeclaration node)", "signatureAfterChange": "   protected void checkVarArgs(MethodDeclaration node)", "diff": ["-      throw new WrongVersionException(\"Methods with variable arguments are only allowed in Java 1.5 or better\");", "+      throw new WrongVersionException(\"Methods with variable arguments are only allowed in Java 1.5 or higher\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "275d2c8ee8c0d6f89c256478360b4b68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "09cd2270295d68af1fb40de152705c1266ce1d0e", "commitAfterChange": "bf7de534c5ae8fec052b662fbed00403ec0bf236", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1900\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010822-0906\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c5b503ec13c5d959438c4f33482d13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void testPoorlyNestedLoaders() throws Exception", "signatureAfterChange": "      public void testPoorlyNestedLoaders() throws Exception", "diff": ["-    assertCanGet(lC, \"C\", 3);", "+    assertCanGet(lC, \"pkg.C\", 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292cbbda66c48241557f51284e0c3c03", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "50030393150c6bde83442c5db1ab303f405c431a", "commitAfterChange": "8e0c2409a30bb84f018f59fbb25bf962ae70ea75", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010925-1806\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010926-1234\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2966f1c10333d1d637dc372bf1122854", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testFinalParameter() throws ParseException", "signatureAfterChange": "   public void testFinalParameter() throws ParseException", "diff": ["-      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceType: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a861fcb0380d71bd016c738bffc17c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "364d0b19a9e3896eddcd174b6cb5aa4a53e74f1f", "commitAfterChange": "65d59a6eb5c83a25b9e6bfdf698fd61ca6d2f695", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new FileOptionComponent( OptionConstants.JSR14_COLLECTIONSPATH, \"JSR14 CollectionsPath\", this));", "+    panel.addComponent( new FileOptionComponent( OptionConstants.JSR14_COLLECTIONSPATH, \"JSR14 Collections Path\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aff97136ec170505c5098d21dac1443", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2c410784e4fa53ebc121330c159aaf4b4c4c6253", "commitAfterChange": "43eeb832e6e01b26859ac14937b1999b0722a962", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_javadocAction, \"Doc\", \"Test\", \"Create javadoc\");", "+    _setUpAction(_javadocAction, \"JavaDoc\", \"Test\", \"Create javadoc\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b919705b2084517285f2004428011d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "5c952c5847e3008cec3ed5ff89d03d335c050f54", "commitAfterChange": "e3e56a8c058b51612dfa6f1f21259a37eadcdcbb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   private void setupDoc()", "signatureAfterChange": "   private void setupDoc()", "diff": ["-    files = new File[] { new File(\"//nowhere\") };", "+    files = new File[] { new File(\"/tmp/nowhere\") };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9b83f99b7117864e2f2ba8d2ebc66b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    protected void initThread(ProcessCreator pc)", "signatureAfterChange": "\r \r   protected void initThread(ProcessCreator pc)", "diff": ["-", "-  protected void initThread(ProcessCreator pc) {", "-    _abortMonitor.reset();", "-    // MainFrame.LOG.log(\"\\tProcessPanel ctor\");", "-    try {", "-      _pc = pc;", "-      _pc.getPropertyMaps().clearVariables();", "-      _readThread = new Thread(new Runnable() {", "-        public void run() {", "-          while((_is!=null) || (_erris!=null)) {", "-            readText(false);", "-          }", "-        }", "-      },\"External Process Read Thread\");", "-      _updateThread = new Thread(new Runnable() {", "-        public void run() {", "-          while((_is!=null) || (_erris!=null)) {", "-            try {", "-              Thread.sleep(edu.rice.cs.drjava.DrJava.getConfig().", "-                             getSetting(edu.rice.cs.drjava.config.OptionConstants.FOLLOW_FILE_DELAY));", "-            }", "-            catch(InterruptedException ie) { /* ignore */ }", "-            updateText();", "-          }", "-        }", "-      },\"External Process Update Thread\");", "-      _p = _pc.start();", "-      _sb.append(\"Evaluated command line:\");", "-      _sb.append(_pc.evaluatedCommandLine());", "-      _sb.append('\\n');", "-      _is = new InputStreamReader(_p.getInputStream());", "-      _erris = new InputStreamReader(_p.getErrorStream());", "-      _readThread.start();", "-      _updateThread.start();", "-      _updateNowButton.setEnabled(true);", "-      _deathThread = new Thread(new Runnable() {", "-        public void run() {", "-          try {", "-            _retVal = _p.waitFor();", "-            Utilities.invokeLater(new Runnable() {", "-              public void run() {", "-                _sb.append(\"\\n\\nProcess returned \");", "-                _sb.append(_retVal);", "-                _sb.append(\"\\n\");", "-                _textArea.setText(_sb.toString());", "-              }", "-            });", "-          }", "-          catch(InterruptedException e) {", "-            Utilities.invokeLater(new Runnable() {", "-              public void run() {", "-                _p.destroy();", "-                _sb.append(\"\\n\\nProcess returned \");", "-                _sb.append(_retVal);", "-                _sb.append(\"\\n\");", "-                _textArea.setText(_sb.toString());", "-              }", "-            });", "-          }", "-          finally {", "-            abortActionPerformed(null);", "-          }", "-        }", "-      },\"External Process Death Thread\");", "-      _deathThread.start();", "-      // MainFrame.LOG.log(\"\\tUpdate thread started\");", "-    }", "-    catch(Exception e) {", "-      _sb.append(\"\\n\\nException from process:\\n\"+e.toString());", "-      _textArea.setText(_sb.toString());", "-      edu.rice.cs.util.GeneralProcessCreator.LOG.log(_sb.toString());", "-      abortActionPerformed(null);", "-    }", "-  }", "+\r", "+  protected void initThread(ProcessCreator pc) {\r", "+    _abortMonitor.reset();\r", "+    // MainFrame.LOG.log(\"\\tProcessPanel ctor\");\r", "+    try {\r", "+      _pc = pc;\r", "+      _pc.getPropertyMaps().clearVariables();\r", "+      _readThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          while((_is!=null) || (_erris!=null)) {\r", "+            readText(false);\r", "+          }\r", "+        }\r", "+      },\"External Process Read Thread\");\r", "+      _updateThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          while((_is!=null) || (_erris!=null)) {\r", "+            try {\r", "+              Thread.sleep(edu.rice.cs.drjava.DrJava.getConfig().\r", "+                             getSetting(edu.rice.cs.drjava.config.OptionConstants.FOLLOW_FILE_DELAY));\r", "+            }\r", "+            catch(InterruptedException ie) { /* ignore */ }\r", "+            updateText();\r", "+          }\r", "+        }\r", "+      },\"External Process Update Thread\");\r", "+      _p = _pc.start();\r", "+      _sb.append(\"Evaluated command line: \");\r", "+      _sb.append(_pc.evaluatedCommandLine());\r", "+      _sb.append('\\n');\r", "+      _is = new InputStreamReader(_p.getInputStream());\r", "+      _erris = new InputStreamReader(_p.getErrorStream());\r", "+      _readThread.start();\r", "+      _updateThread.start();\r", "+      _updateNowButton.setEnabled(true);\r", "+      _deathThread = new Thread(new Runnable() {\r", "+        public void run() {\r", "+          try {\r", "+            _retVal = _p.waitFor();\r", "+            Utilities.invokeLater(new Runnable() {\r", "+              public void run() {\r", "+                _sb.append(\"\\n\\nProcess returned \");\r", "+                _sb.append(_retVal);\r", "+                _sb.append(\"\\n\");\r", "+                _textArea.setText(_sb.toString());\r", "+              }\r", "+            });\r", "+          }\r", "+          catch(InterruptedException e) {\r", "+            Utilities.invokeLater(new Runnable() {\r", "+              public void run() {\r", "+                _p.destroy();\r", "+                _sb.append(\"\\n\\nProcess returned \");\r", "+                _sb.append(_retVal);\r", "+                _sb.append(\"\\n\");\r", "+                _textArea.setText(_sb.toString());\r", "+              }\r", "+            });\r", "+          }\r", "+          finally {\r", "+            abortActionPerformed(null);\r", "+          }\r", "+        }\r", "+      },\"External Process Death Thread\");\r", "+      _deathThread.start();\r", "+      // MainFrame.LOG.log(\"\\tUpdate thread started\");\r", "+    }\r", "+    catch(Exception e) {\r", "+      _sb.append(\"\\n\\nException from process:\\n\"+e.toString());\r", "+      _textArea.setText(_sb.toString());\r", "+      edu.rice.cs.util.GeneralProcessCreator.LOG.log(_sb.toString());\r", "+      abortActionPerformed(null);\r", "+    }\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1e1abc0f3d4b65189d33fcf15aaeec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StrictURLClassLoaderTest.java", "commitBeforeChange": "d2a8f2a02bb6a70cd8bc46bb9bc695a489a535a5", "commitAfterChange": "0fde627fe9cdd73724a26fc0f0f6353cc8fdbbad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testWontLoadResourceFromBootClassPath() throws Throwable", "signatureAfterChange": "   public void testWontLoadResourceFromBootClassPath() throws Throwable", "diff": ["-    String compiler = \"com/sun/tools/javac/main/JavaCompiler.class\";", "+    String compiler = \"com/sun/tools/javac/util/Log.class\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd0c26c84621edd0bb5a41870afff37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "afb4d888e2c907babf9fe3737eb7d3791cf965d8", "commitAfterChange": "1b141431638c22964f6fac7b85e578de27c8fc84", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010806-1623\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010806-1629\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f18506a06e80d7f5036ba178ca38272", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "533552b81f1020221bb3fe1df1f370a4168db503", "commitAfterChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010813-1416\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1050\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fe141d6fa14a0f1369a99650ffd4266", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "b7443f9e3a9a6240974f5a0aedb13c7dcfdc0193", "commitAfterChange": "7d82d9a9e73d6d4daf3c6fb1f950005e1d7ff33e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010817-1006\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010817-1437\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302c6fb95f5723063b1cf5600606f14f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "a41f5b87d13c309c50d9f040cc3993ffd4cc4b01", "commitAfterChange": "6145c18b123c1fdcde9b0295352c9bd18238dd27", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1738\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1842\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30dfe0d98cd263f268613778a3cf4e2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "4d4748997ee78fbddb6aae07e8eba58cf630528c", "commitAfterChange": "5d703906feb40e67075dbe3ea0fe3662921f3d60", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public static boolean checkForJSR14v20()", "signatureAfterChange": "   public static boolean checkForJSR14v20()", "diff": ["-    String msg = \"The JSR-14 v2.x compiler is not compatible with JDK 1.3.\\n\" +", "+    String msg = \"The JSR-14 v2.x compiler is not compatible with JDK 1.3 or 1.4.0.\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f5fcc72f314c49af13adcdeccbabb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "b1771db3e25f16df4acd21624b8bb5b835b04c2b", "commitAfterChange": "2ae0263391f5d4683c3203bdcfc8dee35aec15c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1834\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1021\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "314e25656f1d8900f0e608cf11f8c45d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "commitAfterChange": "1ea7874872b93b44444c8711a298524cf05a221e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public KeyStroke parse(String s)", "signatureAfterChange": "   public KeyStroke parse(String s)", "diff": ["-      if (s.equals(\"null\"))", "+      if (s.equals(\"<none>\"))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32448b4e86e65b475dbeabb4afde7064", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "f4d62c7f81e2673278601dd88ad24c59dc9e7094", "commitAfterChange": "f8d50a718270a1c53c20d67c84305546551fe17b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Class<?> visit(ForEachStatement node)", "signatureAfterChange": "   public Class<?> visit(ForEachStatement node)", "diff": ["-    throw new WrongVersionException(\"ForEach Statements are only supported in Java 1.5 or better\");", "+    throw new WrongVersionException(\"ForEach Statements are only supported in Java 1.5 or higher\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c570e80346471f37df676d442deeb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27f76b3570f92cb654b7ee802931f28fe5414773", "commitAfterChange": "c0487ade35919fa6d08b7c39361898d3c5751c04", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 411, "signatureBeforeChange": "     private void updateLocation(int line, int col)", "signatureAfterChange": "     private void updateLocation(int line, int col)", "diff": ["-      _currLocationField.setText(line + \":\" + col +\"\\t\");", "+      _currLocationField.setText(line + \":\" + col +\" \\t\");  // Space before \"\\t\" required on Mac to avoid obscuring"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c76ec13190f3b14f8883ece465afae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerRegistryTest.java", "commitBeforeChange": "3ae33096a45a4dc4990b95b1565bd0aeaf9084da", "commitAfterChange": "e69a4c60c625d52f9ba6a18669f0f6846846e463", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testAvailableCompilerSeenByDrJava()", "signatureAfterChange": "   public void testAvailableCompilerSeenByDrJava()", "diff": ["-    assertEquals(\"DrJava.java should agree with CompilerRegistry\",", "+    assertEquals(\"DrJava.java should have an available copmiler\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3582663c7533cf35f38f446fe85d7624", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "f1dd9469467dfd9c2cda87018a340a7f33eb218a", "commitAfterChange": "ff27298276d0b205036fe4b017017ca3896e9890", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                                                 \"Should be a comma-separated list of fully-qualified class names.<br>\" +", "+                                                 \"Should be a COMMA-separated list of fully-qualified class names.<br>\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35e11c61203d37aba1a08ebd4687685b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTest.java", "commitBeforeChange": "84e7921bd32edcfceaf3be1ebd8104fc4d274516", "commitAfterChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 51, "signatureBeforeChange": "     public void currThreadDied()", "signatureAfterChange": "     public void currThreadDied()", "diff": ["+    }", "-        if (printEvents) System.out.println(\"threadDied \" + currThreadDiedCount);", "+        if (printEvents) System.out.println(\"currThreadDied \" + currThreadDiedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360d49403d29a3b6372ee6db07ad9dd8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "766cb210913604064ad31aa3d7f4068a2fd0ac5f", "commitAfterChange": "8a3aaf6e3fe6fafb27249a8ad4b2c013ef4ae05a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void setCompilationInProgress()", "signatureAfterChange": "     public void setCompilationInProgress()", "diff": ["-                         \"Compilation in progress, please wait ...\",", "+                         \"Compilation in progress, please wait...\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3618f15cf00012a6b86b0226dd4c7241", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "0627832e466203fb3c14e01c56a508fafd93842f", "commitAfterChange": "87bfc805ab019d126f95cd8bea04bfba0537a5ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1527\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010828-1228\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36afca7434a9e50e620748dc1feb9267", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testMinimalForEach() throws ParseException", "signatureAfterChange": "   public void testMinimalForEach() throws ParseException", "diff": ["-      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: false (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.AmbiguousName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3712892f04dc8c1e21728f46a8c1d358", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "fb8a34355f8b261362a479b30a61f7a961c8b301", "commitAfterChange": "f676d79fa78b72b2738d432695ccafd9d6781f86", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "diff": ["-      new FileOptionComponent( OptionConstants.JAVAC_LOCATION, \"Javac Location\", this);", "+      new FileOptionComponent( OptionConstants.JAVAC_LOCATION, \"Tools.jar Location\", this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3756b3326d1eda132592a603fa6b1fbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "9fd63f96b89e05378048e5810ec35e627812e1a1", "commitAfterChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010926-1234\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011016-2002\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c84f0d13cc6bdc3ef68607c8c6b751", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "335e15356f81cc767efd4886353e6890e8c905fa", "commitAfterChange": "8ccb5b5787c23c1ec149415240d859632e14b0eb", "methodNumberBeforeChange": 211, "methodNumberAfterChange": 210, "signatureBeforeChange": "    void _showProjectFileParseError(MalformedProjectFileException mpfe)", "signatureAfterChange": "    void _showProjectFileParseError(MalformedProjectFileException mpfe)", "diff": ["-               \"The specified file is not a valid project file.\");", "+               \"DrJava could not read the given project file.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381ebe393a87b53baa9ba99fcb379dbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "8cfaf2efb8ae59b79b9538e0bd5eaf251c6db08b", "commitAfterChange": "b732820bc2f8849bda78001b782e555a753cad1e", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 150, "signatureBeforeChange": "     public void junitSuiteStarted(int numTests)", "signatureAfterChange": "     public void junitSuiteStarted(int numTests)", "diff": ["-      if (printMessages) System.out.println(\"listener.junitSuiteStarted, numTests=\"+numTests);", "+      if (printMessages) System.out.println(\"listener.junitSuiteStarted, numTests = \"+numTests);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "386c4d4c6eaa71fd41d66e77b604713a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "91eaa89d34afca6f9535645fe8bc2e7298ec779c", "commitAfterChange": "d3c7a52fdd2fd09704cc06f4bd94cfba3d108041", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupResourceLocPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new VectorOptionComponent (OptionConstants.EXTRA_CLASSPATH, \"Interactions Classpath\", this));", "+    panel.addComponent( new VectorOptionComponent (OptionConstants.EXTRA_CLASSPATH, \"Extra Classpath\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "396d753ac665ead7dc0a2827aa0f81b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/Utilities.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     private TextAreaMessageDialog(Frame frame, Component comp, String title, String message)", "signatureAfterChange": "     private TextAreaMessageDialog(Frame frame, Component comp, String title, String message)", "diff": ["-      JButton okButton = new JButton(\"Ok\");", "+      JButton okButton = new JButton(\"OK\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab1ffa54bb351ee781ad4895c2d96c6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3abeab364ddd41067dee56fe0b222ade", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "commitAfterChange": "ab8f72f86c6d8f3288d1ca14d0e3a244649e4202", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      private static FullVersion guessVersion(File f)", "signatureAfterChange": "      private static FullVersion guessVersion(File f)", "diff": ["-      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) { result = JavaVersion.parseFullVersion(name); }", "+      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \")) { result = JavaVersion.parseFullVersion(name); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7d15a283a5484828cf39484938c554", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/XMLProjectFileParserTest.java", "commitBeforeChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "commitAfterChange": "f938008597ce54d16e4a865d30f8ef062ea55d2f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "\r   public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-public class XMLProjectFileParserTest extends DrJavaTestCase {", "-  public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException {", "-    String xml = ", "-      \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\"+", "-      \"<drjava version=\\\"\"+edu.rice.cs.drjava.Version.getBuildTimeString()+\"-\"+edu.rice.cs.drjava.Version.getRevisionNumber()+\"\\\">\\n\"+", "-      \"  <project root=\\\"src\\\" build=\\\"classes\\\" work=\\\"\\\" main=\\\"src/edu/rice/cs/drjava/DrJava.java\\\">\\n\"+", "-      \"    <createjar file=\\\"drjava-15.jar\\\" flags=\\\"3\\\"/>\\n\"+", "-      \"    <source>\\n\"+", "-      ", "-      \"      <file name=\\\"edu/rice/cs/drjava/DrJava.java\\\" package=\\\"edu.rice.cs.drjava\\\" timestamp=\\\"27-Mar-2008 15:05:07\\\" active=\\\"true\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"      <file name=\\\"edu/rice/cs/drjava/config/EagerFileProperty.java\\\" package=\\\"edu.rice.cs.drjava.config\\\" timestamp=\\\"14-Mar-2008 14:18:43\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"      <file name=\\\"edu/rice/cs/drjava/ui/config/BooleanOptionComponent.java\\\" package=\\\"edu.rice.cs.drjava.ui.config\\\" timestamp=\\\"30-Mar-2008 09:27:01\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"      <file name=\\\"edu/rice/cs/drjava/model/FindReplaceMachine.java\\\" package=\\\"edu.rics.cs.drjava.model\\\" timestamp=\\\"02-Apr-2008 10:58:15\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"      <file name=\\\"edu/rice/cs/drjava/project/XMLProjectFileParser.java\\\" package=\\\"edu.rics.cs.drjava.project\\\" timestamp=\\\"01-Apr-2008 14:30:25\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"      <file name=\\\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\\\" package=\\\"edu.rics.cs.drjava.ui\\\" timestamp=\\\"10-Mar-2008 11:03:08\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-", "-      \"    </source>\\n\"+", "-      \"    <included>\\n\"+", "-", "-      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/testFiles/sample-project-file.xml\\\" package=\\\"\\\" timestamp=\\\"13-Sep-2004 06:03:06\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-      ", "-      \"    </included>\\n\"+", "-      ", "-      \"    <excluded>\\n\"+", "-      \"      <file name=\\\"edu/rice/cs/drjava/ui/config/ColorOptionComponent.java\\\" package=\\\"edu.rice.cs.drjava.ui.config\\\" timestamp=\\\"30-Mar-2008 09:27:01\\\">\\n\"+", "-      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+", "-      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+", "-      \"      </file>\\n\"+", "-      \"    </excluded>\\n\"+", "-      ", "-      \"    <collapsed>\\n\"+", "-", "-      \"      <path name=\\\"./[ Source Files ]/parser/\\\"/>\\n\"+", "-      \"      <path name=\\\"./[ Source Files ]/grammar/util/\\\"/>\\n\"+", "-", "-      \"    </collapsed>\\n\"+", "-      \"    <classpath>\\n\"+", "-      ", "-      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/lib\\\"/>\\n\"+", "-      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/lib/buildlib\\\"/>\\n\"+", "-      ", "-      \"    </classpath>\\n\"+", "-      \"    <breakpoints>\\n\"+", "-", "-      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"50\\\" enabled=\\\"true\\\"/>\\n\"+", "-      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"55\\\" enabled=\\\"true\\\"/>\\n\"+", "-      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"53\\\" enabled=\\\"true\\\"/>\\n\"+", "-", "-      \"    </breakpoints>\\n\"+", "-      \"    <watches>\\n\"+", "-      ", "-      \"      <watch name=\\\"args[0]\\\"/>\\n\"+", "-      \"      <watch name=\\\"e\\\"/>\\n\"+", "-      ", "-      \"    </watches>\\n\"+", "-      \"    <bookmarks>\\n\"+", "-      ", "-      \"      <bookmark file=\\\"edu/rice/cs/drjava/DrJava.java\\\" from=\\\"851\\\" to=\\\"900\\\"/>\\n\"+", "-      \"      <bookmark file=\\\"edu/rice/cs/drjava/DrJava.java\\\" from=\\\"959\\\" to=\\\"1071\\\"/>\\n\"+", "-      ", "-      \"    </bookmarks>\\n\"+", "-      \"  </project>\\n\"+", "-      \"</drjava>\\n\";", "-    ", "-    //File f = new File(\"testFiles/sample-project-file.xml\");", "-    File f = File.createTempFile(\"project\", \".xml\", new File(System.getProperty(\"user.dir\")));", "-    f.deleteOnExit();", "-    IOUtil.writeStringToFile(f,xml);", "-    ", "-    ProjectFileIR pfir = ProjectFileParserFacade.ONLY.parse(f);", "-    ", "-    assertEquals(\"number of source files\", 6, pfir.getSourceFiles().length);", "-    assertEquals(\"number of aux files\", 1, pfir.getAuxiliaryFiles().length);", "-    assertEquals(\"number of excluded files\", 1, pfir.getExcludedFiles().length);", "-    assertEquals(\"number of collapsed\", 2, pfir.getCollapsedPaths().length);", "-    assertEquals(\"number of classpaths\", 2, IterUtil.sizeOf(pfir.getClassPaths()));", "-    File base = new File(f.getParent());", "-    File root = new File(base, \"src\");", "-    assertEquals(\"first source filename\", new File(root,\"edu/rice/cs/drjava/DrJava.java\").getCanonicalPath(),", "-                 pfir.getSourceFiles()[0].getCanonicalPath());", "-    assertEquals(\"timestamp value\", ", "-                 ProjectProfile.MOD_DATE_FORMAT.parse(\"27-Mar-2008 15:05:07\").getTime(),", "-                 pfir.getSourceFiles()[0].getSavedModDate());", "-    assertEquals(\"last source filename\", new File(root,\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\").getCanonicalPath(), ", "-                 pfir.getSourceFiles()[5].getCanonicalPath());", "-    assertEquals(\"first aux filename\", new File(System.getProperty(\"user.dir\"),\"/testFiles/sample-project-file.xml\").getCanonicalPath(), ", "-                 pfir.getAuxiliaryFiles()[0].getCanonicalPath());", "-    assertEquals(\"last collapsed path\", \"./[ Source Files ]/grammar/util/\", pfir.getCollapsedPaths()[1]);", "-    assertEquals(\"build-dir name\", new File(base, \"classes\").getCanonicalPath(), ", "-                 pfir.getBuildDirectory().getCanonicalPath());", "-    assertEquals(\"work-dir name\", new File(base, \".\").getCanonicalPath(), ", "-                 pfir.getWorkingDirectory().getCanonicalPath());", "-    assertEquals(\"classpath name\", new File(System.getProperty(\"user.dir\"),\"lib\").getCanonicalPath(), ", "-                 IterUtil.first(pfir.getClassPaths()).getCanonicalPath());", "-    assertEquals(\"main-class name\", new File(base, \"src/edu/rice/cs/drjava/DrJava.java\").getCanonicalPath(), ", "-                 pfir.getMainClass().getCanonicalPath());", "-  }", "+public class XMLProjectFileParserTest extends DrJavaTestCase {\r", "+  public void testXMLParse() throws IOException, MalformedProjectFileException, java.text.ParseException {\r", "+    String xml = \r", "+      \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?>\\n\"+\r", "+      \"<drjava version=\\\"\"+edu.rice.cs.drjava.Version.getBuildTimeString()+\"-\"+edu.rice.cs.drjava.Version.getRevisionNumber()+\"\\\">\\n\"+\r", "+      \"  <project root=\\\"src\\\" build=\\\"classes\\\" work=\\\"\\\" main=\\\"src/edu/rice/cs/drjava/DrJava.java\\\">\\n\"+\r", "+      \"    <createjar file=\\\"drjava-15.jar\\\" flags=\\\"3\\\"/>\\n\"+\r", "+      \"    <source>\\n\"+\r", "+      \r", "+      \"      <file name=\\\"edu/rice/cs/drjava/DrJava.java\\\" package=\\\"edu.rice.cs.drjava\\\" timestamp=\\\"27-Mar-2008 15:05:07\\\" active=\\\"true\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/config/FileProperty.java\\\" package=\\\"edu.rice.cs.drjava.config\\\" timestamp=\\\"14-Mar-2008 14:18:43\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/ui/config/BooleanOptionComponent.java\\\" package=\\\"edu.rice.cs.drjava.ui.config\\\" timestamp=\\\"30-Mar-2008 09:27:01\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/model/FindReplaceMachine.java\\\" package=\\\"edu.rics.cs.drjava.model\\\" timestamp=\\\"02-Apr-2008 10:58:15\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/project/XMLProjectFileParser.java\\\" package=\\\"edu.rics.cs.drjava.project\\\" timestamp=\\\"01-Apr-2008 14:30:25\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\\\" package=\\\"edu.rics.cs.drjava.ui\\\" timestamp=\\\"10-Mar-2008 11:03:08\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+\r", "+      \"    </source>\\n\"+\r", "+      \"    <included>\\n\"+\r", "+\r", "+      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/testFiles/sample-project-file.xml\\\" package=\\\"\\\" timestamp=\\\"13-Sep-2004 06:03:06\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+      \r", "+      \"    </included>\\n\"+\r", "+      \r", "+      \"    <excluded>\\n\"+\r", "+      \"      <file name=\\\"edu/rice/cs/drjava/ui/config/ColorOptionComponent.java\\\" package=\\\"edu.rice.cs.drjava.ui.config\\\" timestamp=\\\"30-Mar-2008 09:27:01\\\">\\n\"+\r", "+      \"        <select from=\\\"0\\\" to=\\\"0\\\"/>\\n\"+\r", "+      \"        <scroll column=\\\"0\\\" row=\\\"0\\\"/>\\n\"+\r", "+      \"      </file>\\n\"+\r", "+      \"    </excluded>\\n\"+\r", "+      \r", "+      \"    <collapsed>\\n\"+\r", "+\r", "+      \"      <path name=\\\"./[ Source Files ]/parser/\\\"/>\\n\"+\r", "+      \"      <path name=\\\"./[ Source Files ]/grammar/util/\\\"/>\\n\"+\r", "+\r", "+      \"    </collapsed>\\n\"+\r", "+      \"    <classpath>\\n\"+\r", "+      \r", "+      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/lib\\\"/>\\n\"+\r", "+      \"      <file name=\\\"\"+System.getProperty(\"user.dir\")+\"/lib/buildlib\\\"/>\\n\"+\r", "+      \r", "+      \"    </classpath>\\n\"+\r", "+      \"    <breakpoints>\\n\"+\r", "+\r", "+      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"50\\\" enabled=\\\"true\\\"/>\\n\"+\r", "+      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"55\\\" enabled=\\\"true\\\"/>\\n\"+\r", "+      \"      <breakpoint file=\\\"edu/rice/cs/drjava/DrJava.java\\\" line=\\\"53\\\" enabled=\\\"true\\\"/>\\n\"+\r", "+\r", "+      \"    </breakpoints>\\n\"+\r", "+      \"    <watches>\\n\"+\r", "+      \r", "+      \"      <watch name=\\\"args[0]\\\"/>\\n\"+\r", "+      \"      <watch name=\\\"e\\\"/>\\n\"+\r", "+      \r", "+      \"    </watches>\\n\"+\r", "+      \"    <bookmarks>\\n\"+\r", "+      \r", "+      \"      <bookmark file=\\\"edu/rice/cs/drjava/DrJava.java\\\" from=\\\"851\\\" to=\\\"900\\\"/>\\n\"+\r", "+      \"      <bookmark file=\\\"edu/rice/cs/drjava/DrJava.java\\\" from=\\\"959\\\" to=\\\"1071\\\"/>\\n\"+\r", "+      \r", "+      \"    </bookmarks>\\n\"+\r", "+      \"  </project>\\n\"+\r", "+      \"</drjava>\\n\";\r", "+    \r", "+    //File f = new File(\"testFiles/sample-project-file.xml\");\r", "+    File f = File.createTempFile(\"project\", \".xml\", new File(System.getProperty(\"user.dir\")));\r", "+    f.deleteOnExit();\r", "+    IOUtil.writeStringToFile(f,xml);\r", "+    \r", "+    ProjectFileIR pfir = ProjectFileParserFacade.ONLY.parse(f);\r", "+    \r", "+    assertEquals(\"number of source files\", 6, pfir.getSourceFiles().length);\r", "+    assertEquals(\"number of aux files\", 1, pfir.getAuxiliaryFiles().length);\r", "+    assertEquals(\"number of excluded files\", 1, pfir.getExcludedFiles().length);\r", "+    assertEquals(\"number of collapsed\", 2, pfir.getCollapsedPaths().length);\r", "+    assertEquals(\"number of classpaths\", 2, IterUtil.sizeOf(pfir.getClassPaths()));\r", "+    File base = new File(f.getParent());\r", "+    File root = new File(base, \"src\");\r", "+    assertEquals(\"first source filename\", new File(root,\"edu/rice/cs/drjava/DrJava.java\").getCanonicalPath(),\r", "+                 pfir.getSourceFiles()[0].getCanonicalPath());\r", "+    assertEquals(\"timestamp value\", \r", "+                 ProjectProfile.MOD_DATE_FORMAT.parse(\"27-Mar-2008 15:05:07\").getTime(),\r", "+                 pfir.getSourceFiles()[0].getSavedModDate());\r", "+    assertEquals(\"last source filename\", new File(root,\"edu/rice/cs/drjava/ui/BackgroundColorListener.java\").getCanonicalPath(), \r", "+                 pfir.getSourceFiles()[5].getCanonicalPath());\r", "+    assertEquals(\"first aux filename\", new File(System.getProperty(\"user.dir\"),\"/testFiles/sample-project-file.xml\").getCanonicalPath(), \r", "+                 pfir.getAuxiliaryFiles()[0].getCanonicalPath());\r", "+    assertEquals(\"last collapsed path\", \"./[ Source Files ]/grammar/util/\", pfir.getCollapsedPaths()[1]);\r", "+    assertEquals(\"build-dir name\", new File(base, \"classes\").getCanonicalPath(), \r", "+                 pfir.getBuildDirectory().getCanonicalPath());\r", "+    assertEquals(\"work-dir name\", new File(base, \".\").getCanonicalPath(), \r", "+                 pfir.getWorkingDirectory().getCanonicalPath());\r", "+    assertEquals(\"classpath name\", new File(System.getProperty(\"user.dir\"),\"lib\").getCanonicalPath(), \r", "+                 IterUtil.first(pfir.getClassPaths()).getCanonicalPath());\r", "+    assertEquals(\"main-class name\", new File(base, \"src/edu/rice/cs/drjava/DrJava.java\").getCanonicalPath(), \r", "+                 pfir.getMainClass().getCanonicalPath());\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cad80f971bf11c7896858fdb9cff64f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "68d14b52468e7fad6eb9d5f26ee2e88ac93b395f", "commitAfterChange": "eecd5bf659bbe102ef241e14507e30064ca6f329", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["-      System.out.println(\"Please pass file names (*.dj0, *.dj1, *.dj2) as arguments.\");", "+      System.out.println(\"Please pass file names (*.dj, *.dj0, *.dj1, *.dj2) as arguments.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3aa442d46e49b7ffc6b980cd323ff5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/AbstractLog.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   protected String formatThread(Thread thread)", "signatureAfterChange": "   protected String formatThread(Thread thread)", "diff": ["-    return thread.getName() + \"@\" + System.identityHashCode(thread);", "+    return thread.getName() + \" \" + System.identityHashCode(thread);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb9f7136b79b3438f933d870cce1d00", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "315ce15a47c9238ec0ff41b59ed5b10517a92a39", "commitAfterChange": "b3ff19c2ebaad797d38ff3eee3b13718254c2e8c", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "   public static FilePredicate extensionFilePredicate(String extension)", "signatureAfterChange": "   public static FilePredicate extensionFilePredicate(String extension)", "diff": ["-    return new RegexCanonicalCaseFilePredicate(\"\\\\.\" + canonicalCase(new File(extension)).getName());", "+    return new RegexCanonicalCaseFilePredicate(\".*\\\\.\" + canonicalCase(new File(extension)).getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ed27132ea4661c93a03a6dea215ef13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public RegionManager<DocumentRegion> getBookmarkManager()", "signatureAfterChange": "      public RegionManager<DocumentRegion> getBookmarkManager()", "diff": ["-    throw new UnsupportedOperationException(\"Tried to call getDebugger on a Dummy\");", "+    throw new UnsupportedOperationException(\"Tried to call getBookmarkManager on a Dummy\");", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4001bb9c585734780bd4676ff6638110", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "fb275f71eca23e6f93c695458f20ebc27e058287", "commitAfterChange": "a9e88c9896a0247806cc1a6d54ae50329689432b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1858\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011031-1416\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4032cde30619594b9a4656489d5543d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentFiles.java", "commitBeforeChange": "57a37f35b71c66341cae7312e856c3bb4a0b6fcf", "commitAfterChange": "9121dd809e4ace9d1935c6f0ddc722863499d1a0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   private static void _displayUsage()", "signatureAfterChange": "   private static void _displayUsage()", "diff": ["-      \"  java edu.rice.cs.drjava.IndentFile [-indent N] [filenames]\\n\" +", "+      \"  java edu.rice.cs.drjava.IndentFile [-indent N] [-silent] [filenames]\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b4a23beb9caf7d55f996fdd6bb0048", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "3b1cfbd701f34d9efbe9977693ecbc6f89dc2525", "commitAfterChange": "d0b0b94482dfe124ac9760eddaec81165a1f06ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver, final String classPath)      throws IOException", "signatureAfterChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver, final String classPath)      throws IOException", "diff": ["-            (\"The directory you chose does not exist:\\\\n'\" + destDir + \"'\\nWould you like to create it?\",", "+            (\"The directory you chose does not exist:\\n'\" + destDir + \"'\\nWould you like to create it?\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c84457d06464835f24df0410318db9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r   public void testMultipleNodesAttr() throws Exception", "signatureAfterChange": "   public void testMultipleNodesAttr() throws Exception", "diff": ["-  }\r", "-  public void testMultipleNodesAttr() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar fuz=\\\"aaa\\\">abc</bar>\\n\"\r", "-                                                    + \"  <bar fuz=\\\"bbb\\\">ghi</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo/bar.fuz\");\r", "-    assertEquals(2, r.size());\r", "-    assertEquals(\"aaa\", r.get(0));\r", "-    assertEquals(\"bbb\", r.get(1));\r", "-  }\r", "+  }", "+  public void testMultipleNodesAttr() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar fuz=\\\"aaa\\\">abc</bar>\\n\"", "+                                                    + \"  <bar fuz=\\\"bbb\\\">ghi</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo/bar.fuz\");", "+    assertEquals(2, r.size());", "+    assertEquals(\"aaa\", r.get(0));", "+    assertEquals(\"bbb\", r.get(1));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42cb41d3953987130ab7662028904745", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "2ae0263391f5d4683c3203bdcfc8dee35aec15c4", "commitAfterChange": "b39759dad01b50e9aa61922cf5323997723edd83", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1021\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1106\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4411e27f31b32369b5cd15a2e6478f53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "1ea3dd9f63752abe86fd2373767db30462f2b9f6", "commitAfterChange": "f363167d40173f307f3b6d87b64a8df73677629e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   protected File getSourceRoot(String packageName, File sourceFile) throws InvalidPackageException", "signatureAfterChange": "   protected File getSourceRoot(String packageName, File sourceFile) throws InvalidPackageException", "diff": ["-//        Utilities.show(\"parent dir of first component is null!\");", "-        throw new RuntimeException(\"parent dir of first component is null!\");", "+        throw new RuntimeException(\"parent dir of first component of package name is null!\");", "-      ", "-//      Utilities.show(\"Source root of \" + sourceFile + \" is: \" + parentDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4476c638ab34c50d991a456cc006336d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "75615d6339345db6e253403db9b318fe78732c66", "commitAfterChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-1038\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-1749\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44c52c8f0597a959b009f50742436111", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "27cb6e93149c6a1991393a8ca4c655137f9f0cb6", "commitAfterChange": "dd2df9abefe60137729d1e2ed7d31fad6497b670", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _openRecursiveCheckBox = new JCheckBox(\"Recursive open\");", "+    _openRecursiveCheckBox = new JCheckBox(\"Open folders recursively\");", "-    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450f8c4675960116692f290317445917", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/Log.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static String traceToString(StackTraceElement[] trace)", "signatureAfterChange": "   public static String traceToString(StackTraceElement[] trace)", "diff": ["-    for (StackTraceElement e: trace) traceImage.append(\"\\n\" + e.toString());", "+    for (StackTraceElement e: trace) traceImage.append(\"\\n\\tat \" + e.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45d8844bf1b8a2db54d29dbbb3559ac6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "87bfc805ab019d126f95cd8bea04bfba0537a5ba", "commitAfterChange": "3ee95ee9c3ce55e37481a2db14179e5d878a2158", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010828-1228\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010828-1330\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46fd72fff07b8706a11859bfb0f21168", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public void testSimpleAssignBoxInt() throws InterpreterException", "signatureAfterChange": "   public void testSimpleAssignBoxInt() throws InterpreterException", "diff": ["-    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: java.lang.Integer) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.AddExpression: (koala.dynamicjava.tree.IntegerLiteral: 3 3 int) (koala.dynamicjava.tree.IntegerLiteral: 5 5 int)) (koala.dynamicjava.tree.IntType: int))])\";", "+    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: java.lang.Integer) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.AddExpression: (koala.dynamicjava.tree.IntegerLiteral: 3 3 int) (koala.dynamicjava.tree.IntegerLiteral: 5 5 int)) (koala.dynamicjava.tree.IntTypeName: int))])\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484c7f043f93c3eac5a0725e6311eeb4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "e62ed8297c798946c8d04e911cb118b8a9e10779", "commitAfterChange": "edc3544a227872bc7c7b20e7fb9fc2b7a3017d2d", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 322, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_runProjectAction, \"Run\", \"Run the project's main method\");", "+    _setUpAction(_runProjectAction, \"Run Project\", \"Run the project's main method\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48c864e5b1630c776be672b3ce6b9733", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fbf201d6c571409933ea805efe2ae830a8c6d081", "commitAfterChange": "52d7118f909675d6286de388d3cc282a76e90ccf", "methodNumberBeforeChange": 297, "methodNumberAfterChange": 297, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_runProjectAction, \"Run\",\"Run the project's main method\");", "+    _setUpAction(_runProjectAction, \"Run\", \"Run the project's main method\");", "-    _setUpAction(_runAction, \"Run Document\", \"Run the main method of the current document\");", "+    _setUpAction(_runAction, \"Run\", \"Run the main method of the current document\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d3d1a9afc68c9cbbfeff92bc9deb7a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testCollectionInForeach() throws ParseException", "signatureAfterChange": "      public void testCollectionInForeach() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceType: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: List) null) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: List) null) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49dacfb7d32c673d207494be91d5dd5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "   public void testConsoleInput() throws EditDocumentException", "signatureAfterChange": "   public void testConsoleInput() throws EditDocumentException", "diff": ["-    interpret(\"br = new BufferedReader(new InputStreamReader(System.in))\");", "+    interpret(\"BufferedReader br = new BufferedReader(new InputStreamReader(System.in))\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a4374a99ebc4f4f914dc66c60b49f69", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011016-2002\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011016-2004\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a4c6e3c1befcf54a2cbdbc8036a8242", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "414911409ffccc198572e4d568622c4bb424b34e", "commitAfterChange": "a3c9edb6e3c7917ddbf94a68d784b63736e6c7b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1550\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-2243\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afbdd2c28b249c8e52a9d201d66e01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testBiggestLongValue() throws ParseException", "signatureAfterChange": "   public void testBiggestLongValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7379e80aa49ace5f6af307084b70b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testBiggestIntValue() throws ParseException", "signatureAfterChange": "   public void testBiggestIntValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bdb3b096a23c65e790cb5c5008ffa35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testLongMinValue() throws ParseException", "signatureAfterChange": "   public void testLongMinValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c0af56ac6223f91df9855ffbe1e70c9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "a84ad1a0e810fabf34d99b6942e7d43f11aaebeb", "commitAfterChange": "6c72ee3271e405b3e1eb75ff7cd6ca6f659b9121", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010829-1535\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010830-1503\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e94ad3875e0c6592227ff4e3f3aef22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5c8537d4f50a8f0bb4801fdef08cb560fafe29c9", "commitAfterChange": "b7ff28a700c3417709c305a5ec423870e66a3a26", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1842\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010924-1658\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb9c9d80e03a9bc4c0c1f98b6659c1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "9384fc32fbcbd39c62d94dea85b6e39cec7640c4", "commitAfterChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public void testOpenNonexistentFile() throws IOException", "signatureAfterChange": "   public void testOpenNonexistentFile() throws IOException", "diff": ["-    assertEquals(\"non-existant file\", doc, null);", "+    assertEquals(\"doc file should be non-existent\", doc, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eff0483d5198e68675396f49ae2c565", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipCommentsTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testOpenBracePrefix() throws BadLocationException", "signatureAfterChange": "    public void testOpenBracePrefix() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART - line doesn't start with an open brace.\",      !_rule.applyRule(_doc,   0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0 - line doesn't start with an open brace.\",      !_rule.applyRule(_doc,   0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "502cd977d60f3f17f52e5b25a087190c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/ClassInfoCompiler.java", "commitBeforeChange": "f4d62c7f81e2673278601dd88ad24c59dc9e7094", "commitAfterChange": "f8d50a718270a1c53c20d67c84305546551fe17b", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "     public Void visit(MethodDeclaration node)", "signatureAfterChange": "     public Void visit(MethodDeclaration node)", "diff": ["-        TigerUtilities.assertTigerEnabled(\"Methods with variable arguments are only allowed in Java 1.5 or better\");", "+        TigerUtilities.assertTigerEnabled(\"Methods with variable arguments are only allowed in Java 1.5 or higher\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "504dbe2cb4f4e4b1ede4536420320c15", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "signatureAfterChange": "   public String getDisplayFilename(OpenDefinitionsDocument doc)", "diff": ["-    if (doc.isModifiedSinceSave()) filename = filename + \" *\";", "+    if (doc.isModifiedSinceSave()) filename = filename + \"*\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "507208b765fbbae8d68a722763dd428c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "45e7d2e3b59938f5513d4bf9a8c629e42599c7d2", "commitAfterChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1540\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1616\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51e04baeaa7f09cb2c58f96252970e9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "bfbbbb34f309b13ef404f393392d7ea8745940cd", "commitAfterChange": "9d671cad5f849049059b2e199aea7279dd398525", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "    public JPanel _mainDocumentSelector()", "signatureAfterChange": "    public JPanel _mainDocumentSelector()", "diff": ["-    chooser.setDialogTitle(\"Select Main Document\");", "+    chooser.setDialogTitle(\"Select Main Class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5229baecdf00464c547afba5a32fb61e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "commitAfterChange": "ab8f72f86c6d8f3288d1ca14d0e3a244649e4202", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"),", "+                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525ff25517e5b4c8cfc5a7d83cabf2c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testIntMaxValue() throws ParseException", "signatureAfterChange": "   public void testIntMaxValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52810548ce274684cd484d97c7828c25", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "   private void _commentLine()", "signatureAfterChange": "   private void _commentLine()", "diff": ["-      insertString(getCurrentLocation() - getCurrentCol(), \"// \", null);", "+      insertString(getCurrentLocation() - getCurrentCol(), \"//\", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ea5602644333e32854033e400bcde5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "ce1be4bebdf226da73b0f3a3408c7770e9d93c01", "commitAfterChange": "e48d5f3129b8001e5afe1a32af197a9281189fe3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public RegionManager<Breakpoint> getBreakpointManager()", "signatureAfterChange": "    public RegionManager<Breakpoint> getBreakpointManager()", "diff": ["-    throw new UnsupportedOperationException(\"Tried to call getDebugger on a Dummy\");", "+    throw new UnsupportedOperationException(\"Tried to call getBreakpointManager on a Dummy\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b33f6d3a100354323c613e4b91158a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\")(active))\\n\" +", "+      \"   (file (name \\\"sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57b8396fcf28e46667944b1918f6bb62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "     public void setJUnitInProgress()", "signatureAfterChange": "     public void setJUnitInProgress()", "diff": ["-                         \"Testing in progress, please wait ...\",", "+                         \"Testing in progress, please wait...\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59161b0a7254eefbe5528154a19c6b68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      public void testSimpleAssignBox() throws InterpreterException", "signatureAfterChange": "      public void testSimpleAssignBox() throws InterpreterException", "diff": ["-    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: java.lang.Boolean) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.BooleanLiteral: true true boolean) (koala.dynamicjava.tree.BooleanType: boolean))])\";", "+    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: java.lang.Boolean) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.BooleanLiteral: true true boolean) (koala.dynamicjava.tree.BooleanTypeName: boolean))])\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5933e39a54bbec8d68987613a500c166", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "4a6b642f3afd5dae71256130cdcaaf4fda509249", "commitAfterChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "  \t  \tpublic void testStartBrace()", "diff": ["-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\",", "+\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59451b78d9b51d9364e570263cb90612", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "022699e767ab37237911be36e7a5ac8176ca23b6", "commitAfterChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": " public String versionString()", "signatureAfterChange": " public String versionString()", "diff": ["-  FUTURE { public String versionString() { return \">7\"; } };", "+  JAVA_8 { public String versionString() { return \"8\"; } },", "+  FUTURE { public String versionString() { return \">8\"; } };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59bcf9597151dfc532a47478451c9737", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_2/edu/rice/cs/drjava/model/compiler/Javac141Compiler.java", "commitBeforeChange": "c19d7b103025d7a51c5c46b3c8ce59e0ef5fb405", "commitAfterChange": "3491b90acfaeffae7c8b7170b128038e16a09c9c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public String getName()", "signatureAfterChange": "    public String getName()", "diff": ["-    return \"javac 1.4.1+\";", "+    return \"javac 1.4.x\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b1077da99fcef394ed0e058daaed23a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "commitAfterChange": "914e6ea1032a53755afef43e1e250cb1e0c1d993", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "signatureAfterChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "diff": ["-    final Action copyAction = new AbstractAction(\"Copy contents to clipboard\", MainFrame.getIcon(\"Copy16.gif\")) {", "+    final Action copyAction = new AbstractAction(\"Copy Contents to Clipboard\", MainFrame.getIcon(\"Copy16.gif\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b1e7240679eae3a335242bb4b3f8fb6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "2d6da2615a43c4b51e5b38392626de03e404cd1c", "commitAfterChange": "3a303b63c7111176b595875a69f29b6020aaa568", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public boolean saveSettings() throws IOException", "signatureAfterChange": "   public boolean saveSettings() throws IOException", "diff": ["-        JOptionPane.showMessageDialog(this,\"Could not save changes to your '.drjava' file in your home directory. \\n\\n\" + ioe,", "+        JOptionPane.showMessageDialog(this,\"Could not save changes to your \\\".drjava\\\" file in your home directory. \\n\\n\" + ioe,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf19c3aa079ab8bc0d8e0cc449b1ea4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "6f8bd97b87c223769d77170d847f46e44ab561aa", "commitAfterChange": "c5840283da06690e8676e5b395b239a18a3908bb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      protected Context createContext(File[] sourceRoots)", "signatureAfterChange": "      protected Context createContext(File[] sourceRoots)", "diff": ["-    options.put(\"-warnunchecked\", \"\");", "+    //options.put(\"-warnunchecked\", \"\"); <<< DOES NOT WORK", "+    options.put(\"-Xlint:unchecked\",\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c168bc2afa664dd36dbfd812c097575", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "4a6b642f3afd5dae71256130cdcaaf4fda509249", "commitAfterChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testWierdFuckup()", "signatureAfterChange": "  \tpublic void testWierdFuckup()", "diff": ["-\t\t\t\tassertEquals(\"0.1\", \"hello\\n\", doc.getText(0, doc.getLength()));\t\t\t", "+\t\t\t\tassertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c69abadef8ff6a1ad7432c13ebad69a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    // Working directory is default place to start", "+    // Working directory is default place to start, else", "+    // use user.home, not user.dir like we were before.", "-      workDir = new File(System.getProperty(\"user.dir\"));", "+      workDir = new File(System.getProperty(\"user.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd9e7e3a36bb48d23e63ac0d8a6fbc0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "f4d62c7f81e2673278601dd88ad24c59dc9e7094", "commitAfterChange": "f8d50a718270a1c53c20d67c84305546551fe17b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   protected ObjectMethodCall _unbox(Expression child, Class<?> type)", "signatureAfterChange": "   protected ObjectMethodCall _unbox(Expression child, Class<?> type)", "diff": ["-    throw new WrongVersionException(\"Unbox required to use \" + type + \" here. Auto-unboxing requires minimum Java 1.5\");", "+    throw new WrongVersionException(\"Unbox required to use \" + type + \" here. Auto-unboxing requires Java 1.5 or higher\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dfd5c2ef0efe5a2b3868340f7576a46", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-      \"   (file (name \\\"src/test1.java\\\")(select 32 32)(active))\" +", "+      \"   (file (name \\\"src/test1.java\\\")(select 32 32))\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5efa81d19b816c22831ce76f6be17dec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void testNonTrivialCollectionInForeach() throws ParseException", "signatureAfterChange": "      public void testNonTrivialCollectionInForeach() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceType: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: List) [(koala.dynamicjava.tree.StringLiteral: \\\"asdf\\\" asdf class java.lang.String), (koala.dynamicjava.tree.StringLiteral: \\\"asfd\\\" asfd class java.lang.String)]) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: String) i) (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: List) [(koala.dynamicjava.tree.StringLiteral: \\\"asdf\\\" asdf class java.lang.String), (koala.dynamicjava.tree.StringLiteral: \\\"asfd\\\" asfd class java.lang.String)]) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f4059c08beef38a66531d98109f4e10", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "9ce808f40b6076339d815a22e65403b4a39abfe7", "commitAfterChange": "438fba41aa60c90aaef8c43e548f8ad5b5529943", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010822-1549\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1311\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5beb14317c19076c294ce4be7408cf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "30865706505ac032f7839e76656d4d5fb3416a82", "commitAfterChange": "4893120686ef565e3d3aef4c648604d7a3f2e9fc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "diff": ["-    // Foo.main(new String[]{\"a b\", \"c\", \"d\"});", "+    // Foo.main(new String[]{\"a bc\", \"d\"});", "-                             \"Foo.main(new String[]{\\\"a b\\\",\\\"c\\\",\\\"d\\\"});\");", "+                             \"Foo.main(new String[]{\\\"a bc\\\",\\\"d\\\"});\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fabb605efba08e70362697fff6e613b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/CommandLineTest.java", "commitBeforeChange": "f4278ef90560d9633afda2a2ab460f54efaa99f1", "commitAfterChange": "b31f8d4bbae421be3e83afd67fe1e431f6bb7d04", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void testDotPaths()", "signatureAfterChange": "   public void testDotPaths()", "diff": ["-    File relativeFile2 = new File(newDirectory, \".\\\\Y.java\");", "+    File relativeFile2 = new File(newDirectory, \"./Y.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602ae366bf4780a62cdb8f0083fee532", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileProperty.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "        public void resetAttributes()", "signatureAfterChange": "        public void resetAttributes()", "diff": ["-    _attributes.put(\"dir\", \"/\");", "+    _attributes.put(\"rel\", \"/\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "603791bda5c4e8d574c69caef133a8f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CommentTest.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testCommentOutSingleLine() throws BadLocationException", "signatureAfterChange": "   public void testCommentOutSingleLine() throws BadLocationException", "diff": ["-      \"// /* It is on multiple lines, and contains slashes // and other\\n\" +", "+      \"///* It is on multiple lines, and contains slashes // and other\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c89c185c262d00335da6c7fbf61970", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExternalProcessPanel.java", "commitBeforeChange": "d3ca8d30db126f3de1352627e18f51d00a1bf339", "commitAfterChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "signatureAfterChange": "\r   public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc)", "diff": ["-    */", "-  public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc) {", "-    super(frame, title);", "-    _sb = new StringBuilder(\"Command line:\");", "-    _sb.append(pc.cmdline());", "-    _sb.append('\\n');", "-    _header = _sb.toString();", "-    _textArea.setText(_header);", "-    initThread(pc);", "-    _textArea.addMouseListener(new MouseListener() {", "-      public void mouseClicked(MouseEvent e) {", "-        if ((SwingUtilities.isLeftMouseButton(e)) &&", "-            (e.getClickCount()==2)) {", "-          doubleClicked(e);", "-        }", "-      }", "-      public void mouseEntered(MouseEvent e) { }", "-      public void mouseExited(MouseEvent e) { }", "-      public void mousePressed(MouseEvent e) { }", "-      public void mouseReleased(MouseEvent e) { }", "-    });", "-    SwingUtilities.invokeLater(new Runnable() {", "-      public void run() { updateText(); } });", "-    // MainFrame.LOG.log(\"\\tProcessPanel ctor done\");", "-  }", "+    */\r", "+  public ExternalProcessPanel(MainFrame frame, String title, ProcessCreator pc) {\r", "+    super(frame, title);\r", "+    _sb = new StringBuilder(\"Command line: \");\r", "+    _sb.append(pc.cmdline());\r", "+    _sb.append('\\n');\r", "+    _header = _sb.toString();\r", "+    _textArea.setText(_header);\r", "+    initThread(pc);\r", "+    _textArea.addMouseListener(new MouseListener() {\r", "+      public void mouseClicked(MouseEvent e) {\r", "+        if ((SwingUtilities.isLeftMouseButton(e)) &&\r", "+            (e.getClickCount()==2)) {\r", "+          doubleClicked(e);\r", "+        }\r", "+      }\r", "+      public void mouseEntered(MouseEvent e) { }\r", "+      public void mouseExited(MouseEvent e) { }\r", "+      public void mousePressed(MouseEvent e) { }\r", "+      public void mouseReleased(MouseEvent e) { }\r", "+    });\r", "+    SwingUtilities.invokeLater(new Runnable() {\r", "+      public void run() { updateText(); } });\r", "+    // MainFrame.LOG.log(\"\\tProcessPanel ctor done\");\r", "+  }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610e43e486d149fa7162e4c8bfaf566b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "3ee95ee9c3ce55e37481a2db14179e5d878a2158", "commitAfterChange": "69c9884550bf4c7c91788f4d6006ee470704351d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010828-1330\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010829-1019\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6176c280f9e4817963f9ccc66dd9cba5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \"$\" + that.getName().getText());", "+    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \".\" + that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6246771b3f7b094fdc96112e2ba08202", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "6736083aa858d248da57506ac7ac2323edabb299", "commitAfterChange": "81f3a4e94b818023ae800180baeab83ad929753e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020116-1017\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020119-1727\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62951393422bea55fecc16e81d4ecc47", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "de9a557f090086de80e9723b0612333c5fd32e24", "commitAfterChange": "ccf7cf455c303525c1aa4b473bc6c515f03eceab", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 272, "signatureBeforeChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "signatureAfterChange": "     File _getSourceRoot(String packageName) throws InvalidPackageException", "diff": ["-          if (parentDir == null) throw new RuntimeException(\"parent dir is null?!\");", "+          if (parentDir == null) throw new RuntimeException(\"parent dir is null!\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6324065da00f3c47910bdfd2d8d2362f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testCompileNormal() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileNormal() throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6401c2f384dfd6e3a8edbb9e746cb7ef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "555c3f9f770785d516b1e2fbd1fbdabdbbf2eb61", "commitAfterChange": "b125d4a35b225e9cc738f569b062e7e7bd7cf031", "methodNumberBeforeChange": 545, "methodNumberAfterChange": 545, "signatureBeforeChange": "          public void interactionEnded()", "signatureAfterChange": "          public void interactionEnded()", "diff": ["-            if (lastError.startsWith(\"Undefined class '\") && lastError.endsWith(\"'\")) {", "+            if (lastError.startsWith(\"Static Error: Undefined class '\") && lastError.endsWith(\"'\")) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6517de9805562f51ac73d5c63b410c19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "     public void testGetMultipleSourceRootsDefaultPackage()     throws BadLocationException, IOException", "signatureAfterChange": "     public void testGetMultipleSourceRootsDefaultPackage()     throws BadLocationException, IOException", "diff": ["-    // Save the footext to Foo.java in subdirectory 1", "-    File file1 = new File(subdir1, \"Foo.java\");", "+    // Save the footext to DrJavaTestFoo.java in subdirectory 1", "+    File file1 = new File(subdir1, \"DrJavaTestFoo.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651988f44faa17228f94b5d3e8e878a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r   public void testNodesStarEnd() throws Exception", "signatureAfterChange": "   public void testNodesStarEnd() throws Exception", "diff": ["-  }\r", "-  public void testNodesStarEnd() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar>abc</bar>\\n\"\r", "-                                                    + \"  <bar>ghi</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo/*\");\r", "-    assertEquals(3, r.size());\r", "-    assertEquals(\"abc\", r.get(0));\r", "-    assertEquals(\"ghi\", r.get(1));\r", "-    assertEquals(\"def\", r.get(2));\r", "-  }\r", "+  }", "+  public void testNodesStarEnd() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar>abc</bar>\\n\"", "+                                                    + \"  <bar>ghi</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo/*\");", "+    assertEquals(3, r.size());", "+    assertEquals(\"abc\", r.get(0));", "+    assertEquals(\"ghi\", r.get(1));", "+    assertEquals(\"def\", r.get(2));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659067ec0463733fab1c9353c902e1b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testCompileMissingCloseSquiggly()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileMissingCloseSquiggly()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69ddc86b245e9a8c2899d6b2de436e9b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "b39759dad01b50e9aa61922cf5323997723edd83", "commitAfterChange": "4c5305766c9d56dcd5af8d643ed5056e9afa5b8d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1106\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1356\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b0d0a95bf185208d04e9d5a78d120be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/NewVersionPopup.java", "commitBeforeChange": "6cb46de79da79c0083594703f676ab24368c9724", "commitAfterChange": "ce9868c401197893c2350342d3a4d99ed1f30047", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public static Date getBuildTime(URL url, Box<String> versionStringRef)", "signatureAfterChange": "   public static Date getBuildTime(URL url, Box<String> versionStringRef)", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm z\").parse(line + \" GMT\");", "+      return new SimpleDateFormat(\"yyyyMMdd z\").parse(line + \" GMT\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9b744c768af7951a08e332e888e810", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileListProperty.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void update()", "signatureAfterChange": "   public void update()", "diff": ["-                                        new File(StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_attributes.get(\"dir\"), PropertyMaps.ONLY, PropertyMaps.GET_CURRENT))));", "+                                        new File(StringOps.unescapeSpacesWith1bHex(StringOps.replaceVariables(_attributes.get(\"rel\"), PropertyMaps.ONLY, PropertyMaps.GET_CURRENT))));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6beda617b811265045be02869706f5f6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "37449cba11f74bdf3921e2b515b5228eef23235b", "commitAfterChange": "43a72be50c3246f8e631a488321fd0367ada5a58", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   protected static Map<FullVersion, Iterable<JarJDKToolsLibrary>>     getCompletedCompoundResults(GlobalModel model,                                 Iterable<JarJDKToolsLibrary> collapsed,                                 Iterable<JarJDKToolsLibrary> compoundCollapsed)", "signatureAfterChange": "   protected static Map<FullVersion, Iterable<JarJDKToolsLibrary>>     getCompletedCompoundResults(GlobalModel model, Iterable<JarJDKToolsLibrary> collapsed,                                 Iterable<JarJDKToolsLibrary> compoundCollapsed)", "diff": ["-    getCompletedCompoundResults(GlobalModel model,", "-                                Iterable<JarJDKToolsLibrary> collapsed,", "+    getCompletedCompoundResults(GlobalModel model, Iterable<JarJDKToolsLibrary> collapsed,", "-      JDKToolsLibrary.msg(\"compoundLib: \"+compoundLib);", "-      JDKToolsLibrary.msg(\"    \"+compoundLib.location());", "+      JDKToolsLibrary.msg(\"compoundLib: \" + compoundLib);", "+      JDKToolsLibrary.msg(\"    \" + compoundLib.location());", "-        if (!javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "-        JDKToolsLibrary.msg(\"    exact? \"+javaLib);", "+        if (! javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "+        JDKToolsLibrary.msg(\"    exact? \" + javaLib);  // Is exact comparison necessary?  It never seems to match.", "-            (javaVersion.maintenance()==compoundVersion.maintenance()) &&", "-            (javaVersion.update()==compoundVersion.update()) &&", "-            (javaVersion.release()==compoundVersion.release()) &&", "+            (javaVersion.maintenance() == compoundVersion.maintenance()) &&", "+            (javaVersion.update() == compoundVersion.update()) &&", "+            (javaVersion.release() == compoundVersion.release()) &&", "-      if (found==null) {", "+      if (found == null) {", "-          if (!javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "-          JDKToolsLibrary.msg(\"    major? \"+javaLib);", "+          if (! javaLib.jdkDescriptor().isBaseForCompound()) continue; // javaLib not suitable as base", "+          JDKToolsLibrary.msg(\"    major? \" + javaLib);", "-      if (found!=null) {", "+      if (found != null) {", "-          JDKToolsLibrary.msg(\"    ==> \"+lib.version());", "+          JDKToolsLibrary.msg(\"    based on version \" + lib.version());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9a5a3dfa8e54d72572b6efcafaa963", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1755\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1227\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cd58705b3e9fb9134aacc1f6ec92c70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "17590567cb9f06269b33249dad955c39164a9028", "commitAfterChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 256, "signatureBeforeChange": "     private void _saveAllBeforeProceeding(String message, BooleanOption option,                                           String checkMsg)", "signatureAfterChange": "     private void _saveAllBeforeProceeding(String message, BooleanOption option,                                           String checkMsg)", "diff": ["-                                      \"Must save all files to continue\",", "+                                      \"Must Save All Files to Continue\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce8385d38dbbcfb96b7b914b311bd2b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "commitAfterChange": "332b6e452982977da36f3fe748b79e9b0c3888de", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "      void currThreadDied()", "signatureAfterChange": "   synchronized void currThreadDied()", "diff": ["-  void currThreadDied() {", "-    _model.printDebugMessage(\"Current thread has died\");", "+   */", "+  synchronized void currThreadDied() {", "+    _model.printDebugMessage(\"The current thread has finished.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d0796f18811a7c74dddd718641fc45b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-      \"(source ;; comment\\n\" +", "+      \"(source-files ;; comment\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5ccd56c34f3ad9b57f98db3c8cd6d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "a24082414064ecb42431a2e612770e1ab3e9fefa", "commitAfterChange": "b2a145d8d3ea1ad947e0937f542b0780baf31d45", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 19, "signatureBeforeChange": "     @Override public Type visit(GenericReferenceTypeName node)", "signatureAfterChange": "     @Override public Type visit(GenericReferenceTypeName node)", "diff": ["-        catch (InvalidTypeArgumentException e) { throw new ExecutionError(\"type.argument\", node); }", "+        catch (InvalidTypeArgumentException e) { throw new ExecutionError(\"type.argument.arity\", node); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5ccf4a29b51f3071947d398d4751e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/debug/DebugUtil.java", "commitBeforeChange": "0e2962e67fbd4bb0610b6df816f609e60a33a28f", "commitAfterChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      private static LogSink makeAtomicLogSink(String descriptor, String defaultName)", "signatureAfterChange": "      private static LogSink makeAtomicLogSink(String descriptor, String defaultName)", "diff": ["-          if (arg.equals(\"\")) { arg = defaultName.toLowerCase().replace(' ', '-') + \".txt\"; }", "+          if (arg.equals(\"\")) { arg = defaultName.toLowerCase().replace(' ', '-') + \"-log.txt\"; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d6431dc5cfb1054f3af9f9639338794", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "    void _showDebugError(DebugException de)", "signatureAfterChange": "    void _showDebugError(DebugException de)", "diff": ["-               \"A JSwat error occurred in the last operation.\\n\\n\");", "+               \"A Debugger error occurred in the last operation.\\n\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de8523bd4069788bebeca4c91af3d8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "commitAfterChange": "9de352299088533a44cc17c1ffd7938654146b70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1030\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1332\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe7deffbde4a10e558b231da5b1d2d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "ca8c972fc27cfec629f54b8a8a68e7726bac6969", "commitAfterChange": "5e30c7f70ee8822945ce8efbfadabc105dbf602f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010824-1512\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010827-1014\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ab1639b85005388de453dae7bf760e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "0ef216d80b2e9cc63f2ef7b2c23490480ef77851", "commitAfterChange": "c5aaf72fbd7fa889788e2cd72fe646345421a547", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "signatureAfterChange": "   private Method _getDefineVariableMethod(ReferenceType interpreterRef,                                           Value val)     throws DebugException", "diff": ["-      signature_mid = \"Ljava/lang/Object;\";", "+      signature_mid = \"Ljava/lang/Object;Ljava/lang/Class;\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "716cc8d69b468be2ed73823d9828c596", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "104f481f1da9987bda9dc78b6586502c4e58bcba", "commitAfterChange": "a42ed39ebc793380af08f77f8dbb386b3959e18a", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 233, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_cleanAction, \"Clean\", \"Clean the built directory\");", "+    _setUpAction(_cleanAction, \"Clean\", \"Clean Built directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e8754326acc4fe207fae7029f77f78", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/classloader/StrictURLClassLoaderTest.java", "commitBeforeChange": "d2a8f2a02bb6a70cd8bc46bb9bc695a489a535a5", "commitAfterChange": "0fde627fe9cdd73724a26fc0f0f6353cc8fdbbad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "signatureAfterChange": "   public void testWillLoadClassFromGivenURLs() throws Throwable", "diff": ["-    String compilerClass = \"com.sun.tools.javac.main.JavaCompiler\";", "+    String compilerClass = \"com.sun.tools.javac.util.Context\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743c9d87a52e1273760a122c8509826b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/Javac150FromSetLocation.java", "commitBeforeChange": "0ceee5d462dea01e571a97507c2d04495b971db0", "commitAfterChange": "ab9e3c17a5a3c5f93e2194242f915fa2f6bda14a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public Javac150FromSetLocation()", "signatureAfterChange": "   public Javac150FromSetLocation()", "diff": ["-    super(\"edu.rice.cs.drjava.model.compiler.JSR14v20Compiler\",", "-          _getClassLoader());", "+    super(\"edu.rice.cs.drjava.model.compiler.Javac150Compiler\", _getClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7603b015751d2ebeee311e07dfb6fb93", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "e3e15711ffe62e7b19032f1eefe26e2aca48b4e2", "commitAfterChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   protected static Constructor selectTheMostSpecificConstructor(List<Constructor> list)", "signatureAfterChange": "   protected static Constructor selectTheMostSpecificConstructor(List<Constructor> list)", "diff": ["-      throw new AmbiguousMethodException(\"Both contructors match: \" + best + \", and \" + ambiguous);", "+      throw new AmbiguousMethodException(\"Both constructors match: \" + best + \", and \" + ambiguous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76364ba1309fa77ccf059e104c67b766", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "89cc83e7a8ebf309b96c3d7d8a18698681fdb020", "commitAfterChange": "a3a3aaa0c3ac1b6eda6080d129cd04f2b63b0095", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011016-2004\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011024-1628\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ea3ecc5022c0b3f8ebd4be3199968b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "commitAfterChange": "75615d6339345db6e253403db9b318fe78732c66", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1554\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-1038\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781db17d90582016cd280adba6dcf551", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>?\";", "+    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!@#$%^&*~<>?,\\\"`'<>|\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "785e588981916f3fe94bbad97a9d1084", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "0fc2bd43202dc44ec1898220476c0c1829fb08a2", "commitAfterChange": "847a8a14da81b32fde69840fb03b98064ba862eb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1429\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1621\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7955e4d004e845895d3b9880d6cd0f04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "signatureAfterChange": "      private List<FormalParameter> getFormalParameterList(String paramString, boolean isVarArgs) throws ParseException", "diff": ["-    assertEquals(\"Type of node\", MethodDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of node\", MethodDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b0770e0b126b24570183ff848e36a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "405bec7d97445f0020939e0560dc10393430aac1", "commitAfterChange": "070ce5905e33fc289f79bfc0035862d6493d03f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private File _getWorkDir()", "signatureAfterChange": "   private File _getWorkDir()", "diff": ["-      workDir = new File(System.getProperty(\"user.dir\"));", "+      workDir = new File(System.getProperty(\"user.home\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8894a4fe99aabdad7100d3d5e77611", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "      public void testArrayAllocation() throws InterpreterException", "signatureAfterChange": "      public void testArrayAllocation() throws InterpreterException", "diff": ["-    String sizeExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 5 5 int)]))\";", "+    String sizeExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 5 5 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5157f62c27e3f96a028222bf95df43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testVisitForStatement() throws InterpreterException", "signatureAfterChange": "   public void testVisitForStatement() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 1 1 int))]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 1 1 int))]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2903b5059b2850bfc0d2b4b1c3df61", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocErrorPanel.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public JavadocErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JavadocErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    super(model, frame, \"Javadoc Errors\");", "+    super(model, frame, \"Javadoc Output\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5469c670045ffa5306c2623059cb1b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionExistsCharInStmtTest.java", "commitBeforeChange": "6d23d799552cf55313f22433cb12915906b19690", "commitAfterChange": "8a04e8e94a35e432777ebd444cf5fc70868fe9e4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testColonInTernaryOpOneLineStmts() throws BadLocationException", "signatureAfterChange": "   public void testColonInTernaryOpOneLineStmts() throws BadLocationException", "diff": ["-\t       !rule.applyRule(_doc));", "+        !rule.applyRule(_doc));", "-\t       !rule.applyRule(_doc));", "+        !rule.applyRule(_doc));", "-    _setDocText(\"foo();\\nreturn test ? x : y;\\n\");", "+    _setDocText(\"foo();\\nreturn (test ? x : y;)\\n\");", "-\t       rule.applyRule(_doc));", "+        rule.applyRule(_doc));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0a134034aad99f53c39bf2722d6001", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    public void testGetSourceRootDefaultPackage()     throws BadLocationException, IOException, InvalidPackageException", "signatureAfterChange": "    public void testGetSourceRootDefaultPackage()     throws BadLocationException, IOException, InvalidPackageException", "diff": ["-    // Save the footext to Foo.java in the subdirectory", "-    File fooFile = new File(subdir, \"Foo.java\");", "+    // Save the footext to DrJavaTestFoo.java in the subdirectory", "+    File fooFile = new File(subdir, \"DrJavaTestFoo.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e0e35d2dcfacc684f6a947a65f8f14e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "446fca085832de922e13498a639705c809ef278b", "commitAfterChange": "84efde1b7fc541921ab4db44b478a2fdd3fb2da6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public JPanel _jarMainClassSelector()", "signatureAfterChange": "   public JPanel _jarMainClassSelector()", "diff": ["-    chooser.setTopMessage(\"Select the main doucment for the project:\");", "+    chooser.setTopMessage(\"Select the main document for the project:\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e676d8e0156608f5810431e2bf13531", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "bf7de534c5ae8fec052b662fbed00403ec0bf236", "commitAfterChange": "9ce808f40b6076339d815a22e65403b4a39abfe7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010822-0906\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010822-1549\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee6075c8f345403afaa6fb6d65d7652", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "45f11437d24a95250c66e3a94437d7de4d6682c1", "commitAfterChange": "97bb3c70440590a053a3f2aff064ff2a0f94447e", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "   public void testClassNameMisleading() throws BadLocationException", "signatureAfterChange": "   public void testClassNameMisleading() throws BadLocationException", "diff": ["-      \" class MyClass {\";", "+      \" class MyInnerClass {\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f698f60c4f07c3bea4cea46cfb00184", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public void testPlusOperator() throws InterpreterException", "signatureAfterChange": "   public void testPlusOperator() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Double) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: doubleValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Double) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81727abc25dbe9809185b8bc45e8289b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "492227e53d4f60169465f2fd7192a458815ea62f", "commitAfterChange": "8bce57471a5d2761f2096c66cde557596d4532bf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011102-1919\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-0257\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82c792b0e9152855ae5ea366ee5a4d1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "438fba41aa60c90aaef8c43e548f8ad5b5529943", "commitAfterChange": "3b199317bab9cde1aec90843dc1552ed445d9116", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1311\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1338\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "836a0b6d0ee93fbf18150366436df58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7be13fcc2c0b7d44e976f39092577be8a7dfb680", "commitAfterChange": "a80adb22a6549a11ebdbb59ef5adb3006176addd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1154\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1212\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "848f145bbf6bce5490e60899facb1164", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "4c5305766c9d56dcd5af8d643ed5056e9afa5b8d", "commitAfterChange": "09cd2270295d68af1fb40de152705c1266ce1d0e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1356\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010821-1900\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85637b1ea2b58e51c828b67d20217a98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c767fd7ac698a252b2acccd30077ab91751fe069", "commitAfterChange": "41dbd1f79552ad2c4983397e3a693dbde7c41bb5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010830-1545\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010831-1435\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864b435ce65972d247fa91c1294fb6b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "66067a3f1d3a007b2ddad388dba56bb3c6f9df80", "commitAfterChange": "81d6db8320cf4667127c44e5b1de134b58b6f3dc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void xtestEnumType15()", "signatureAfterChange": "   public void xtestEnumType15()", "diff": ["-        \"  public enum Suit { CLUBS, DIAMONDS, HEARTS, SPADES }\\n\"+", "+        \"  public enum Suit { CLUBS, DIAMONDS, HEARTS, SPADES; }\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "869b673260de7fc4ab8f2109d96ad210", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultJavadocModel.java", "commitBeforeChange": "4ec56842cfddc38eb6b984795c24e527fe5df30c", "commitAfterChange": "48cc5099d452791b4ba6da6a0856db4f13cb78f4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver,                          final String classpath)     throws IOException", "signatureAfterChange": "   public void javadocAll(DirectorySelector select, final FileSaveSelector saver,                          final String classpath)     throws IOException", "diff": ["-            (\"The directory you chose does not exist:\\n\" +", "+            (\"The directory you chose does not exist:\\\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8760c10b7a218e33f6cc2fa66f951f22", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "6f064a351cf6f32ca81eb7bd4e1d9f192f6a46c6", "commitAfterChange": "4c20648756c871d7891d04fa6baa315408a26469", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1042\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1209\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881eafac4c4f3c3fed54584c734bb559", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/Distinction1415Test.java", "commitBeforeChange": "66067a3f1d3a007b2ddad388dba56bb3c6f9df80", "commitAfterChange": "81d6db8320cf4667127c44e5b1de134b58b6f3dc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void xtestEnumType14()", "signatureAfterChange": "   public void xtestEnumType14()", "diff": ["-        \"  public enum Suit { CLUBS, DIAMONDS, HEARTS, SPADES }\\n\"+", "+        \"  public enum Suit { CLUBS, DIAMONDS, HEARTS, SPADES; }\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886675c955c094674bde9f94ad10fadc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelTest.java", "commitBeforeChange": "875709ea758d694dda7555b8eeb2e15fa58e98c5", "commitAfterChange": "d29db164117e7452d6023bc6a73abe9d53f7d65b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static Test suite() throws IOException", "signatureAfterChange": "      public static Test suite() throws IOException", "diff": ["-    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench.jar\");", "+    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench-base-14.jar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8906196f635c0cad13ead8416ea489e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "dffeb55b275906c40458f2a767d0f62b0845e9e5", "commitAfterChange": "b1aa79fb7a1aab3c0f34f51e168c7e7a945d8cf6", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["+    // In order to change the title of these three document", "+    // categories, you would need to change it here as well", "+    // as in MainFrame. In MainFrame, there's some code that", "+    // determines which context menu to display based on a", "+    // test on the string used.  You'd need to change that", "+    // string in MainFrame as well.", "+    ", "-    l.add(new Pair<String, INavigatorItemFilter>(\"[ Remembered Files ]\", new INavigatorItemFilter(){", "+    l.add(new Pair<String, INavigatorItemFilter>(\"[ Auxiliary Files ]\", new INavigatorItemFilter(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ba04ac8f9ce698c074184b878b7fe1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "commitAfterChange": "0fc2bd43202dc44ec1898220476c0c1829fb08a2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1227\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1429\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a1a3ade469e25d7838e8b20ead90226", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "commitAfterChange": "1f134e7b24112d7b99c2071fe4abeb160b1eb28b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public void autoImport()", "signatureAfterChange": "   public void autoImport()", "diff": ["-      _document.insertBeforeLastPrompt(\"Auto-import after debug: \"+sb.toString() + \"\\n\", InteractionsDocument.DEBUGGER_STYLE);", "+      _document.insertBeforeLastPrompt(\"Auto-import: \"+sb.toString() + \"\\n\", InteractionsDocument.DEBUGGER_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a46ee9e4b4f1cf51c4956faeb91f0f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testEqualsEquals() throws InterpreterException", "signatureAfterChange": "   public void testEqualsEquals() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bdd405cda33fbfe4767c0e2fa545ad6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "fb8a34355f8b261362a479b30a61f7a961c8b301", "commitAfterChange": "f676d79fa78b72b2738d432695ccafd9d6781f86", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-    JMenuItem commentLinesItem = new JMenuItem(\"Comment Out Line(s)\");", "+    JMenuItem commentLinesItem = new JMenuItem(\"Comment Line(s)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cb86618bf365285cfe005412aa109d7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "42465b0c95801c83cae0d8e781c43cb17e95c775", "commitAfterChange": "dd7f7fbbfae186b155b4ab01f1629e1623154745", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private Class _checkUnaryExpression(String text, String expected)      throws ExceptionReturnedException", "signatureAfterChange": "      private Class _checkUnaryExpression(String text, String expected)      throws ExceptionReturnedException", "diff": ["-    assertEquals(\"Expression should have unboxed correctly.\", expected, actual);", "+    assertEquals(\"Expression should have typed correctly.\", expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccad40deec4f99d603f61bf007b7d53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "a3c9edb6e3c7917ddbf94a68d784b63736e6c7b7", "commitAfterChange": "b7443f9e3a9a6240974f5a0aedb13c7dcfdc0193", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-2243\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010817-1006\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d22031353a38e9e1ce4e99c06078bef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "da8b20243b85298aada190df10fa721e07aae787", "commitAfterChange": "f85f20b04a845bc5f3cc15aa220d5ca52f7ac620", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 149, "signatureBeforeChange": "          public void forVarargArrayType(VarargArrayType t)", "signatureAfterChange": "          public void forVarargArrayType(VarargArrayType t)", "diff": ["-      _result.append(\"[]\");", "+      _result.append(\"...\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d63ccd7421077e831933af3a163edfd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "4c20648756c871d7891d04fa6baa315408a26469", "commitAfterChange": "e325016b29b8dde8e3ba0908ae34d55edb22c64f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1209\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1807\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8efe52bb7639c39d5b917760e6a9bd56", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "b6c98c2729d523213cf8ee6bbc9636575f25da66", "commitAfterChange": "4bdaddc150401ace7c16f01fa5c54525f5642ceb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-        _document.insertBeforeLastPrompt(\"Resetting Interactions ...\\n\", InteractionsDocument.ERROR_STYLE);", "+        _document.insertBeforeLastPrompt(\" Resetting Interactions ...\\n\", InteractionsDocument.ERROR_STYLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f8f32f4ca2d5cd444c88dac148a1f8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    handleInnerClassDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \"$\" + that.getName().getText());", "+    handleInnerClassDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \".\" + that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f9c723addfe13809981e999cda57fd7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "d23acb744eb150939f4879adf009d6632073536f", "commitAfterChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "  \t  \tpublic void testStartBrace()", "diff": ["-\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {\",", "+\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90db6140cbf3d6ba5f09e8490ec45ef1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "e4597735ed480ff103992a6b4edd98783ce62b7c", "commitAfterChange": "c918fda29945e681706734ce52051eaf13078f8d", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "signatureAfterChange": "   public void testIndentInsideCommentBlock () throws BadLocationException", "diff": ["-    _assertContents(\"hello\\n{\\n  /*{\\n  {\\n  */\\n  hehe\", doc);", "+    _assertContents(\"hello\\n{\\n  /*{\\n   {\\n   */\\n  hehe\", doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914c79f16087c9a5cdf1d7e17b8693b8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5a2a5e61cb4a1ee4d053834c9eda949c73544637", "commitAfterChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1616\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1755\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "926648eed1eb9868d651f6eadcaefbd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/ExecJVM.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private static Process _runJVM(String mainClass, String[] classParams, String[] jvmParams, File workDir) throws IOException", "signatureAfterChange": "   private static Process _runJVM(String mainClass, String[] classParams, String[] jvmParams, File workDir) throws IOException", "diff": ["-        edu.rice.cs.util.swing.Utilities.showMessageBox(\"Work directory does not exist:\\n\"+workDir+", "+        edu.rice.cs.util.swing.Utilities.showMessageBox(\"Working directory does not exist:\\n\" + workDir +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f7972aac6be96af5cc5dc95bf597f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "    public void testForWithStatement() throws ParseException", "signatureAfterChange": "    public void testForWithStatement() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: null null null (koala.dynamicjava.tree.EmptyStatement: )), (koala.dynamicjava.tree.ObjectMethodCall: println [(koala.dynamicjava.tree.QualifiedName: i)] (koala.dynamicjava.tree.QualifiedName: System.out))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: null null null (koala.dynamicjava.tree.EmptyStatement: )), (koala.dynamicjava.tree.ObjectMethodCall: println [(koala.dynamicjava.tree.AmbiguousName: i)] (koala.dynamicjava.tree.AmbiguousName: System.out))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92fd144df92433ecf6d432238ace111f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "576713321d388945af9795f8f5bacbafa14cd87f", "commitAfterChange": "b814c7e145dc4411f1437e59c56bc53ee860800f", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "     public File getWorkingDirectory()", "signatureAfterChange": "     public File getWorkingDirectory()", "diff": ["-//       _log.log(\"Returning \" + System.getProperty(\"user.dir\") + \" as working directory\");", "-      return new File(System.getProperty(\"user.dir\"));  // a flat file configuration should have exactly one source root", "+//       _log.log(\"Returning \" + System.getProperty(\"user.home\") + \" as working directory\");", "+      return new File(System.getProperty(\"user.home\"));  // a flat file configuration should have exactly one source root"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93897f0d2db3b42b9c883ec5a4ba421f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AboutDialog.java", "commitBeforeChange": "aa895e173b9073a9e7216d98acba59e6d4855797", "commitAfterChange": "da1a971d51bd3f101601dc97c0fa654f8135af90", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static JPanel createCopyrightTab()", "signatureAfterChange": "      public static JPanel createCopyrightTab()", "diff": ["-    panel.add(new JLabel(\"DrJava Version: \"+Version.getBuildTimeString()),BorderLayout.NORTH);", "+    panel.add(new JLabel(\"DrJava Version \"+Version.getBuildTimeString()),BorderLayout.NORTH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97c622c203818a2bc22d6a03f4feec27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "signatureAfterChange": "   public void testInteractionsVariableWithLowercaseClassName() throws BadLocationException, EditDocumentException,     IOException, InterruptedException", "diff": ["-    assertEquals(\"interactions result\", \"\", interpret(\"drJavaTestClass = new DrJavaTestClass();\"));", "+    assertEquals(\"interactions result\", \"\", interpret(\"Object drJavaTestClass = new DrJavaTestClass();\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99ca0b0f6737e3727a6d57d3d264d2af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-                                                    \"The directory that DrJava should consider the default working directory.\",", "+                                                    \"The working directory for the DrJava editor and GUI interface.\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99dbdf87501d1802213886b6e143035f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "a16de484c1abb580ef9842328449e698b77dfd64", "commitAfterChange": "14407fdf2aae2b7f3a7b62bba50825e37dcd72c4", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "      public void assertRunStartCount(int i)", "signatureAfterChange": "      public void assertRunStartCount(int i)", "diff": ["-      assertEquals(\"number of times runStarted fired\", i, runStartCount);", "+      assertEquals(\"number of times prepareForRun fired\", i, runStartCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a47491061aec1ae8b09b1a3b7daa3e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "   public void testNotEquals() throws InterpreterException", "signatureAfterChange": "   public void testNotEquals() throws InterpreterException", "diff": ["-    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";", "+    String expectedLeft = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9af073478de4a8e576916a4bb24d7edb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public void testComplimentingOneBoolean() throws InterpreterException", "signatureAfterChange": "   public void testComplimentingOneBoolean() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 24 24 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 24 24 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bcdf7fd52ece17deb2aba3867c47f9e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>\";", "+    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>?\";", "-    // Remove the old element frm the vector.", "+    // Remove the old element from the vector."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bffbd6707d8126917062f8c5223c44a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/JavaVersion.java", "commitBeforeChange": "022699e767ab37237911be36e7a5ac8176ca23b6", "commitAfterChange": "64485acb22f7b04ee86b39b46487ccbab2253387", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public String versionString()", "signatureAfterChange": " public String versionString()", "diff": ["-  FUTURE { public String versionString() { return \">7\"; } };", "+  JAVA_8 { public String versionString() { return \"8\"; } },"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de494bbb79713ccfd1c0ca9538ec513", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "0d6a1751a06319b8d446186ea0aafba68239ee0c", "commitAfterChange": "50d54a2cc075d489d4814ce780949e6748ba1350", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "     private void _updateWithErrors() throws BadLocationException", "signatureAfterChange": "     private void _updateWithErrors() throws BadLocationException", "diff": ["-            doc.insertString(doc.getLength(), \"File: \", BOLD_ATTRIBUTES);", "+            doc.insertString(doc.getLength(), \"Class: \", BOLD_ATTRIBUTES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e32922d3dd5b729ce6fc98c6acfbc6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e596571463511296f10cc47acace49d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "d23acb744eb150939f4879adf009d6632073536f", "commitAfterChange": "9d169028680f58d3e3b47cc25c8de1afe15038ec", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "  \t  \tpublic void testStartBrace()", "diff": ["-\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {\",", "+\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc9ffd59b47c888f2dda5b3a650892a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "7f0431102d802f25498e6ad5a22057f937b25cb6", "commitAfterChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>\";", "+    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>?\";", "-    // Remove the old element frm the vector.", "+    // Remove the old element from the vector."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0bf8f1a68f3e99fb5a58e69724befc7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d49cbdbddda87e8c405e1611614405c2c7bd203d", "commitAfterChange": "be38b2b11517729e454db4fb5ce1085dc1eb228a", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 80, "signatureBeforeChange": "      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason)", "signatureAfterChange": "      public void saveBeforeProceeding(GlobalModelListener.SaveReason reason)", "diff": ["-        message = \"To compile, you must first save the current file.\" +", "+        message = \"To compile, you must first save the current file. \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20b73959eb320106819703a089e7b1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/UncaughtExceptionWindow.java", "commitBeforeChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "commitAfterChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private String _getExceptionString()", "signatureAfterChange": "   private String _getExceptionString()", "diff": ["-                      \"Help>About \\n window and an \" +", "+                      \"Help>About \\nwindow and an \" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e3afd2a86e60eb22775af60ee98d27", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/TypeParameter.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public TypeParameter(SourceInfo in_sourceInfo, String rep, ReferenceType in_bound)", "signatureAfterChange": "   public TypeParameter(SourceInfo in_sourceInfo, String rep, ReferenceType in_bound)", "diff": ["-", "+    ", "-      throw new IllegalArgumentException(\"Parameter 'bound' to the TypeParameter constructor was null. This class may not have null field values.\");", "+      throw new IllegalArgumentException(\"Parameter 'bound' to the TypeParameter constructor was null.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a33884e1071017e1f76b4c2316fcd339", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/Javac150FromToolsJar.java", "commitBeforeChange": "0ceee5d462dea01e571a97507c2d04495b971db0", "commitAfterChange": "ab9e3c17a5a3c5f93e2194242f915fa2f6bda14a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   private Javac150FromToolsJar()", "signatureAfterChange": "   private Javac150FromToolsJar()", "diff": ["-    super(\"edu.rice.cs.drjava.model.compiler.JSR14v20Compiler\",", "-          new ToolsJarClassLoader());", "+    super(\"edu.rice.cs.drjava.model.compiler.Javac150Compiler\", new ToolsJarClassLoader());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73af3d27ae077b7211387e4d0751c79", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c609c16897e3dba54f431a1295bf349c06176070", "commitAfterChange": "8f6efc493160eeb6a0f9f6e09acdeddfe1638848", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1338\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1511\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77e54cd2f1fdbd12ac5b2d8c11d7fdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void testCompilePackageAsField2()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField2()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8872b9f8ac7a3b3fb7a1e1a0536f3e1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "22f84adec0a01fd84bebf2427b8cf77de7f17dec", "commitAfterChange": "e776a11cf725fef8ab56c9363f575bc1bfa6b931", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-1152\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-1158\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a944c948d8ff445aa5611b3874cf04ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "4a6b642f3afd5dae71256130cdcaaf4fda509249", "commitAfterChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void testWierdFuckup()", "signatureAfterChange": "  \tpublic void testWierdFuckup()", "diff": ["-\t\t\t\tassertEquals(\"0.1\", \"hello\\n\", doc.getText(0, doc.getLength()));\t\t\t", "+\t\t\t\tassertEquals(\"0.1\", \"hello\\n  \", doc.getText(0, doc.getLength()));\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a94fdbcf3d1dfd806a642d6160ba266c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testSmallestLong() throws ParseException", "signatureAfterChange": "   public void testSmallestLong() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f1a831f1e1f9b347bf571e7266d4b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/InteractionsDocument.java", "commitBeforeChange": "ddb63aca46509193e58befa7d3b4a165c571d2ef", "commitAfterChange": "8417ddcfd5dbe91145435687b878857a28a6fc40", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "    public void prompt()", "signatureAfterChange": "    public void prompt()", "diff": ["-      super.insertString(getLength(), \"\\n> \", null);", "+      super.insertString(getLength(), \"> \", null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9db63ab683174c011c7f586de0c654", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "009201ea5473f7ca59ef7e83c1f67ec0f1be92b0", "commitAfterChange": "6ca20aa23bdf7506876b7d41215a01a9cd168d71", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "      public void assertInterpreterReadyCount(int i)", "signatureAfterChange": "      public void assertInterpreterReadyCount(int i)", "diff": ["-      assertEquals(\"number of times interactionsReset fired\", i, interpreterReadyCount);", "+      assertEquals(\"number of times interpreterReady fired\", i, interpreterReadyCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad19234af49cb4bc0e211d59d6cedaad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public void testSimpleAssignBoxAddExp() throws InterpreterException", "signatureAfterChange": "   public void testSimpleAssignBoxAddExp() throws InterpreterException", "diff": ["-    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: java.lang.Integer) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.AddExpression: (koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)])) (koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 3 3 int)]))) (koala.dynamicjava.tree.IntType: int))])\";", "+    String rightExpected = \"(koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: java.lang.Integer) [(koala.dynamicjava.tree.CastExpression: (koala.dynamicjava.tree.AddExpression: (koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 1 1 int)])) (koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 3 3 int)]))) (koala.dynamicjava.tree.IntTypeName: int))])\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad1a98938572c5bd79d993938dd72dc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/TigerTest.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "    public void testNoNullPointerExceptionForEmptyEnum()", "signatureAfterChange": "    public void testNoNullPointerExceptionForEmptyEnum()", "diff": ["-    assertEquals(\"Interpreting empty null should return a null\", null, interpret(testString));", "+    assertEquals(\"Interpreting empty enum should return a null\", null, interpret(testString));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad20210918df4fd65b6b97a2dc1eedc3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011031-1548\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011102-1813\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aed9dce12ba2d39392a0bc8d4ebf2bcb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectPropertiesFrame.java", "commitBeforeChange": "cfea3e13a321911fb98c8bdb6bf527cebe9e8065", "commitAfterChange": "c93fe40cf9a3db4130d052c7d32f60d02ed31c7a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public JPanel _builtDirectoryPanel()", "signatureAfterChange": "      public JPanel _builtDirectoryPanel()", "diff": ["-    dirChooser.setDialogTitle(\"Select Built Directory\");", "+    dirChooser.setDialogTitle(\"Select Build Directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af03654931f477ee21b8a1ec967d15b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/generic/GenericTreeTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "    public void testAnotherGenericClassWithUpgradedParser()", "signatureAfterChange": "    public void testAnotherGenericClassWithUpgradedParser()", "diff": ["-    // /* Type checker (later) should complain that Double does NOT extend Integer */", "+    // /* TypeName checker (later) should complain that Double does NOT extend Integer */", "-      \"/* Type checker (later) should complain that Double does NOT extend Integer */\\n\"+", "+      \"/* TypeName checker (later) should complain that Double does NOT extend Integer */\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afdeef32a91fbb3c1fde8f4d80c8d3d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testSimpleFor() throws ParseException", "signatureAfterChange": "    public void testSimpleFor() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntType: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c7e4f3de146e00e8a3cb2dc13a6e07", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "536c00239bf186b1c81bb087b131d4cbb6302c23", "commitAfterChange": "ed1069955672117b4c9aac0875c5704fb5071788", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r   \r   public String toString()", "signatureAfterChange": "\r   \r   public String toString()", "diff": ["-  public String toString() { return super.toString() + \" at \" + _location + \"\\n\" + bootClassPath(); }\r", "+  public String toString() { return super.toString() + \" at \" + _location + \", boot classpath: \" + bootClassPath(); }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0d1b87b3f907e4fe8a3484589d357f1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "c88bf4a527291490e603bb8724d52a101cc61a60", "commitAfterChange": "9ac042462ff2ccafde5facafd742598846cdb098", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1050\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1100\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26932a95200d77a4ab6308013c7d152", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "22b4c39d718130f293a6ada596d425525ecbc6e8", "commitAfterChange": "ed15f1e3933f222801a436b129bc84e5a740d057", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public String getName()", "signatureAfterChange": "    public String getName()", "diff": ["-    return \"javac compiler (1.3+)\";", "+    return \"javac\";", "+    /*", "+    if (_supportsGenerics) {", "+      return \"javac (GJ)\";", "+    }", "+    else {", "+      return \"javac\";", "+    }", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ffe3cb40209cbbf8079c9afc82ec5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TopLevelTest.java", "commitBeforeChange": "b31c48044c8b7287b269feadafb16ad6cb2f72cb", "commitAfterChange": "43f44f4c8f4836b9b47858083bf7fd620a01ca0f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public static Test suite() throws IOException", "signatureAfterChange": "      public static Test suite() throws IOException", "diff": ["-    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench-base-14.jar\");", "+    ZipFile jlbenchJar = new ZipFile(\"lib/buildlib/jlbench-base.jar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b30f7cfd17a89a274fdc745da9a715ed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "5bb90362cd995f5e55d5b1fb67a46ff3a54e5317", "commitAfterChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": "   private void _gotoLine()", "signatureAfterChange": "   private void _gotoLine()", "diff": ["-    final String title = \"Jump to line\";", "+    final String title = \"Go to Line\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a7edd00197e769722eb95c9244071e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "c6857a248a65e4dc52a9c98c57b551279861859d", "commitAfterChange": "4118fb5987600e1ade6dff5b6d5f90e5fdaddc47", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "signatureAfterChange": "   public File[] openProject(File projectFile) throws IOException, MalformedProjectFileException", "diff": ["-    l.add(new Pair<String, INavigatorItemFilter>(\"[ Auxiliary Files ]\", new INavigatorItemFilter(){", "+    l.add(new Pair<String, INavigatorItemFilter>(\"[ Remembered Files ]\", new INavigatorItemFilter(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b53a0741edebb97e75e9886c6ff335e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "e325016b29b8dde8e3ba0908ae34d55edb22c64f", "commitAfterChange": "6f4876cdb9441d04299c257c0c7b9b6cc5cb955d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-1807\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010809-1119\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b62165e31317aed6edcd5f867d6099f4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/EagerFileListProperty.java", "commitBeforeChange": "1b2c230a180a408e07fefa4999fd97bfd19485a5", "commitAfterChange": "f88a51007770d2637f5170b66e852db63e500083", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void resetAttributes()", "signatureAfterChange": "   public void resetAttributes()", "diff": ["-    _attributes.put(\"dir\", _dir);", "+    _attributes.put(\"rel\", _dir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b76509a13897761f857ac718711ebb7f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "signatureAfterChange": "    public void testGetSourceRootPackageThreeDeepInvalid()     throws BadLocationException, IOException", "diff": ["-    // Save the footext to Foo.java in the subdirectory", "-    File fooFile = new File(subdir, \"Foo.java\");", "+    // Save the footext to DrJavaTestFoo.java in the subdirectory", "+    File fooFile = new File(subdir, \"DrJavaTestFoo.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b77a48887c400dd89116b093c404775f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "28db8fb2942dc00cad50f5244fe215d573867721", "commitAfterChange": "fb852ee67c669f40a587804216508a1dfbe1be4b", "methodNumberBeforeChange": 539, "methodNumberAfterChange": 539, "signatureBeforeChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "signatureAfterChange": "      public DefinitionsPane getDefPaneGivenODD(OpenDefinitionsDocument doc)", "diff": ["-    if (scroll == null) {", "-      throw new UnexpectedException(new Exception(\"Region set in a closed document.\"));", "+    if (scroll == null) { ", "+      throw new UnexpectedException(new Exception(\"Attempted to get DefinitionsPane for a closed document\")); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8400d944f5985f49b4666200053d718", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "4fb080a38871d6561e99bfdfdb664ff987fb15c5", "commitAfterChange": "d8298bba22e8675e12094f851d61d88ab6c6f68a", "methodNumberBeforeChange": 592, "methodNumberAfterChange": 592, "signatureBeforeChange": "   void askToIncreaseMasterMaxHeap()", "signatureAfterChange": "   void askToIncreaseMasterMaxHeap()", "diff": ["-                                                     \"Your program ran out of memory. You may try to enter a larger\\n\"+", "+                                                     \"DrJava ran out of memory. You may try to enter a larger\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9222e3cc541cdf1106c40ed22c582c4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "81f3a4e94b818023ae800180baeab83ad929753e", "commitAfterChange": "b871de9c2826da6a353414b43c483f0b2ac044ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020119-1727\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020120-1343\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9cecc69b4cc82b4d2bb3b71e6ad637b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "cfea3e13a321911fb98c8bdb6bf527cebe9e8065", "commitAfterChange": "c93fe40cf9a3db4130d052c7d32f60d02ed31c7a", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_cleanAction, \"Clean\", \"Clean Built directory\");", "+    _setUpAction(_cleanAction, \"Clean\", \"Clean Build directory\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba088c3f44b8dc6382fdbce24790e567", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "cc830d3cfb835e44d2498e98729c28536d682aad", "commitAfterChange": "611afcaf59528294d37f92105e692c81ac320af5", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": "   public int findCharOnLine(int pos, char findChar)", "signatureAfterChange": "   public int findCharOnLine(int pos, char findChar)", "diff": ["-    String key = \"getIndentOfCurrStmt:\" + pos + \":\" + findChar;", "+    String key = \"findCharOnLine:\" + pos + \":\" + findChar;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb57f10cfc25247a9db23a6e62ded6bf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "db74f414da6ea4e94230ce374104e651f3b1149a", "commitAfterChange": "2f12a1eb88133f2f5af16745800b04e7680f335e", "methodNumberBeforeChange": 707, "methodNumberAfterChange": 707, "signatureBeforeChange": "      public void nonTestCase(boolean isTestAll)", "signatureAfterChange": "      public void nonTestCase(boolean isTestAll)", "diff": ["-        \"Perhaps you have not yet compiled your test files.\"", "+        \"Perhaps you have not yet saved and compiled your test files.\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6dfdacee806b34a7f2676bfa187ceb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public JUnitPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    super(frame, \"Test output\");", "+    super(frame, \"Test Output\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbe3c0ac29de42ad0d9ccb789243ca1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b796c376864058d232f1be02ccfb0bd7548b3f89", "commitAfterChange": "ba6275930e25f1b0898c45319a21c16860b3e177", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "signatureAfterChange": "   public void testInterpretJavaArguments() throws DocumentAdapterException", "diff": ["+    // Foo.main(new String[]{\"a\", \"b\", \"c\"});", "+    // Foo.main(new String[]{\"a b c\"});", "+    // Foo.main(new String[]{\"a b\", \"c\", \"d\"});", "-    // java Foo c:\\file.txt", "+    // java Foo c:\\\\file.txt", "-    _assertProcessedContents(\"java Foo c:\\\\file.txt\",", "+    _assertProcessedContents(\"java Foo c:\\\\\\\\file.txt\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf556ced177011775b706b7f78bb193f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "cfb5c0d7a42de99cbc0ae424116ea39ceac84b66", "commitAfterChange": "c5393075df9303b791f0a8e80d6b5a15f548551a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-1749\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010815-2205\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c693001c227223264fd8856502b0f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "554902896b1f96c3839ea73c44260e0ca63ab535", "commitAfterChange": "b04ad32b6b168076ffec376c15a5d9d487d414f6", "methodNumberBeforeChange": 290, "methodNumberAfterChange": 290, "signatureBeforeChange": "   public void openFolder(DirectoryChooser chooser)", "signatureAfterChange": "   public void openFolder(DirectoryChooser chooser)", "diff": ["-    String type = \"'\" + DrJavaRoot.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";", "+    String type = \"'.\" + DrJavaRoot.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)] + \"' \";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0f58b73c30b7f740d17ef42c8d13fd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "1a00210ae1e41be9246fee06894f37a248cf99ce", "commitAfterChange": "ab8f72f86c6d8f3288d1ca14d0e3a244649e4202", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testInterpretCurrentInteractionWithIncompleteInput_NOJOIN() throws EditDocumentException, InterruptedException,     RemoteException", "signatureAfterChange": "   public void testInterpretCurrentInteractionWithIncompleteInput_NOJOIN() throws EditDocumentException, InterruptedException,     RemoteException", "diff": ["-    assertReplThrewContinuationException(\"1+\");", "+    assertReplThrewContinuationException(\"1 + \");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c15d777e5a73328c2a429591961d77f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionCurrLineStartsWithSkipCommentsTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public void testNoPrefix() throws BadLocationException", "signatureAfterChange": "      public void testNoPrefix() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0.\", rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c215662a3462295c702ec06743fa81a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "faafdc2e01d97cbdc44ff87232cdd9b0c82af0fb", "commitAfterChange": "0956148bfc1a4479797fc110624bb0930312ee55", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testElspethOneJUnitError() throws Exception", "signatureAfterChange": "   public void testElspethOneJUnitError() throws Exception", "diff": ["-    if (printMessages) System.out.println(\"----testOneJUnitError-----\");", "+    if (printMessages) System.out.println(\"----testElspethOneJUnitError-----\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ec32909ad8d7e1ba8729e5870e77c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/XMLConfigTest.java", "commitBeforeChange": "6e8f4e5161fa153bcd182c1b7aa1963d13d089bb", "commitAfterChange": "58507a81b298eda1c95791a37194e9f75288a8af", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r   public void testAttrsStarEnd() throws Exception", "signatureAfterChange": "   public void testAttrsStarEnd() throws Exception", "diff": ["-  }\r", "-  public void testAttrsStarEnd() throws Exception {\r", "-    XMLConfig xc = new XMLConfig(new StringReader(\r", "-                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?><foo a=\\\"foo.a\\\">\\n\"\r", "-                                                    + \"  <bar>abc</bar>\\n\"\r", "-                                                    + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"\r", "-                                                    + \"</foo>\"));\r", "-    List<String> r = xc.getMultiple(\"foo.*\");\r", "-    assertEquals(1, r.size());\r", "-    assertEquals(\"foo.a\", r.get(0));\r", "-    \r", "-    r = xc.getMultiple(\"foo/fum.*\");\r", "-    assertEquals(3, r.size());\r", "-    assertEquals(\"xyz\", r.get(0));\r", "-    assertEquals(\"aaa\", r.get(1));\r", "-    assertEquals(\"zzz\", r.get(2));\r", "-  }\r", "+  }", "+  public void testAttrsStarEnd() throws Exception {", "+    XMLConfig xc = new XMLConfig(new StringReader(", "+                                                  \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" standalone=\\\"no\\\"?><foo a=\\\"foo.a\\\">\\n\"", "+                                                    + \"  <bar>abc</bar>\\n\"", "+                                                    + \"  <fum fee=\\\"xyz\\\" fuz=\\\"zzz\\\" fiz=\\\"aaa\\\">def</fum>\\n\"", "+                                                    + \"</foo>\"));", "+    List<String> r = xc.getMultiple(\"foo.*\");", "+    assertEquals(1, r.size());", "+    assertEquals(\"foo.a\", r.get(0));", "+    ", "+    r = xc.getMultiple(\"foo/fum.*\");", "+    assertEquals(3, r.size());", "+    assertEquals(\"xyz\", r.get(0));", "+    assertEquals(\"aaa\", r.get(1));", "+    assertEquals(\"zzz\", r.get(2));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3bc8ebacb8381021155eca90708f016", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5bb2c9863f1fe7662bebfd00214a82afb5405950", "commitAfterChange": "f5f9e35c2a806ad9979915d514415944af196bab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010924-1658\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010925-1806\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6bfe94c150ccf54f4e9ab646e241e59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "commitAfterChange": "492227e53d4f60169465f2fd7192a458815ea62f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011102-1813\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011102-1919\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d008d81db0803888c461f9c4df236b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public void testNegatingOneBoolean() throws InterpreterException", "signatureAfterChange": "   public void testNegatingOneBoolean() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: booleanValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Boolean) [(koala.dynamicjava.tree.BooleanLiteral: false false boolean)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca9a1afae024360ced611924eb8c8357", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 71, "signatureBeforeChange": "   public Void forSourceFileDoFirst(SourceFile that)", "signatureAfterChange": "   public Void forSourceFileDoFirst(SourceFile that)", "diff": ["-            _addAndIgnoreError(\"TestCases must appear in files by themselves at all language levels\", c);", "+            _addAndIgnoreError(\"TestCases must appear in files by themselves in functional code\", c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd6e355b913c758f97d676f5c09eeca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors, b, numErrors > 0);", "+    assertEquals(name + \"compile errors > 0? numErrors =\" + numErrors, b, numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd0d0ff9d8ab0a7702bc7c2004c211fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_newAction, \"New\", \"Creat a new document\");", "+    _setUpAction(_newAction, \"New\", \"Create a new document\");", "-    ", "+  ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd29ac074e37e68e5745c38d04e710b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeChecker14.java", "commitBeforeChange": "f4d62c7f81e2673278601dd88ad24c59dc9e7094", "commitAfterChange": "f8d50a718270a1c53c20d67c84305546551fe17b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected SimpleAllocation _box(Expression exp, Class<?> refType)", "signatureAfterChange": "   protected SimpleAllocation _box(Expression exp, Class<?> refType)", "diff": ["-    throw new WrongVersionException(\"Box required to use \" + refType + \" here. Autoboxing requires minimum Java 1.5\");", "+    throw new WrongVersionException(\"Box required to use \" + refType + \" here. Autoboxing requires Java 1.5 or higher\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd4de0e3de98e124e5e334315cb11a8e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5524f1583831732cba13db8d29753185e8da800d", "commitAfterChange": "99d03f8fb452eedca57bf52b837e87bbebdabefc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011221-1020\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20020107-1249\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd8232387059e7c7572c303feed94d0c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "24e790b85d3a1a29de15955ca1ba9200a6865f83", "commitAfterChange": "4ceb386773fd5eb837ddcd34820c563b6c3c20cb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "     public void setJUnitInProgress()", "signatureAfterChange": "     public void setJUnitInProgress()", "diff": ["-                         \"Testing in progress, please wait...\\n\",", "+                         \"Testing in progress.  Please wait...\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce860527680fe14b6d8ea9ae4e5fa27b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "1635ebcc866330c5b8ab6470e164e0d8b3584d8f", "commitAfterChange": "df716c1c0097e3026300a60a646a72121f921c3d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupResourceLocPanel(ConfigPanel panel)", "diff": ["-                                                         \"Restore last working directory of the Interactions pane on start up\", this,", "+                                                         \"<html>Restore last working directory of<br>the Interactions pane on start up</html>\", this,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceafb5058b586dbf14270c6939c29b88", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/ReflectUtilTest.java", "commitBeforeChange": "e6763da4d9e1118450dc76cc396410e4a3b0e46a", "commitAfterChange": "9c8a785db081b77d8ac8b9698b67d2973d82d49a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testLoadObjectThrowsCorrectException()", "signatureAfterChange": "      public void testLoadObjectThrowsCorrectException()", "diff": ["-    try { loadObject(\"java.lang.Iterable\"); }", "+    try { loadObject(\"java.lang.Comparable\"); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced707907bc3b6978eaeaf85affe7c4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testSynchronizedStatement()", "signatureAfterChange": "      public void testSynchronizedStatement()", "diff": ["-    expected = \"(koala.dynamicjava.tree.TypeExpression: (koala.dynamicjava.tree.ReferenceType: Integer))\";", "+    expected = \"(koala.dynamicjava.tree.TypeExpression: (koala.dynamicjava.tree.ReferenceTypeName: Integer))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfbb13e083bb33a09308828175162b62", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCompilePackageAsField()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompilePackageAsField()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b63b173de92a35af1156576605caed", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/OptionComponent.java", "commitBeforeChange": "d2672269336e7275d013a62f6a2cae91ecdf9b13", "commitAfterChange": "1f215280ffb4deee1474aa0ea630d96d544831f9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void showErrorMessage(String title, String value, String message)", "signatureAfterChange": "      public void showErrorMessage(String title, String value, String message)", "diff": ["-                                  \"Your value: \" + value + \"'\\n\" +", "+                                  \"Your value: '\" + value + \"'\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c3a4756011ea569869c83b2bdd84e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "009201ea5473f7ca59ef7e83c1f67ec0f1be92b0", "commitAfterChange": "6ca20aa23bdf7506876b7d41215a01a9cd168d71", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "      public void assertInterpreterResetFailedCount(int i)", "signatureAfterChange": "      public void assertInterpreterResetFailedCount(int i)", "diff": ["-      assertEquals(\"number of times interactionsResetFailed fired\", i, interpreterResetFailedCount);", "+      assertEquals(\"number of times interpreterResetFailed fired\", i, interpreterResetFailedCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cae7ef4cefae8f0266cfb35e90a18e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "a454f078c900245b418db671925f6207d6f1ff60", "commitAfterChange": "533552b81f1020221bb3fe1df1f370a4168db503", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010812-1702\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010813-1416\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30650f1f52066a00c3ae0b4ae35328d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-    super(frame, \"Compiler output\");", "+    super(frame, \"Compiler Output\");", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3ef5010a6bab0283a627aaceb98181c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "b1ab5639c12e11d9d4773b42d5fad59d564680b4", "commitAfterChange": "c11d4ce83dfacd1ad010305b8bbd51b80abac1bf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void junitJVMReady()", "signatureAfterChange": "   public void junitJVMReady()", "diff": ["-    errors[0] = new JUnitError(\"Previous test was interrupted\", true, \"\");", "+    errors[0] = new JUnitError(\"Previous test suite was interrupted\", true, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4704a476b4be8eb9c03942e931367f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testIsIn2DArray() throws BadLocationException", "signatureAfterChange": "   public void testIsIn2DArray() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\", ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0.\", ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d55754bdb8ec86e246ea132971b1dc4f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "1ed74444e7bc359a9a1bceeac912e2a7a23c2add", "commitAfterChange": "7c92e58e6451902680f99442fe1b0e5b6ce56b46", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1835\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010808-0951\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5bf83e94438e22141cab4bdca2132df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "69c9884550bf4c7c91788f4d6006ee470704351d", "commitAfterChange": "a84ad1a0e810fabf34d99b6942e7d43f11aaebeb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010829-1019\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010829-1535\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d66415be29a8d65cde50e310ef11d5b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "2e5b18a99b7dadcdbc9d721e596e386200a1c0d7", "commitAfterChange": "5b3114a7ac9ae00c529dfb2d67c43e022bde4173", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public void testLoadHistoryWithAndWithoutSemicolons() throws BadLocationException,      InterruptedException, IOException", "signatureAfterChange": "   public void testLoadHistoryWithAndWithoutSemicolons() throws BadLocationException,      InterruptedException, IOException", "diff": ["-    String s1 = \"int x = 5\";", "+    String s1 = \"int x = 5;\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6da6225d08ec90ab25fa337d7e39cb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "commitAfterChange": "d11247645bb07934951554afdf566907fa77ed82", "methodNumberBeforeChange": 347, "methodNumberAfterChange": 347, "signatureBeforeChange": "          public void updateLocation()", "signatureAfterChange": "          public void updateLocation()", "diff": ["-      _currLocationField.setText(p.getCurrentLine() + \":\" + p.getCurrentCol() + \")\\t\");", "+      _currLocationField.setText(p.getCurrentLine() + \":\" + p.getCurrentCol() +\"\\t\"); // + \" (offset \"+ p.getCaretPosition() +\")\\t\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81575ac4999abc97f105390b254395e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "2be551782e07a0651826ef4b6bbb14ef56227a55", "commitAfterChange": "90ce2e88786b4edf30eceb4ebde41290759300d3", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "     public void nonTestCase()", "signatureAfterChange": "     public void nonTestCase()", "diff": ["-        \"                                http://www.junit.org/\\n\\n\";", "+        \"  http://www.junit.org/\\n\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81635cfcb0099850950200d2a1c8bcc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "7b4a527a2fd4010c88a2ef6ea8f158547b322968", "commitAfterChange": "7b22fbe0160e9fdc451caeb623e46b870b03ccd3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011029-1605\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011030-1030\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d93928fb891e57ff437179a4cb5f5593", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "signatureAfterChange": "   public Void forInnerInterfaceDef(InnerInterfaceDef that)", "diff": ["-    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \"$\" + that.getName().getText());", "+    handleInnerInterfaceDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \".\" + that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da40b0ad7799e215c9cd8ddb5220c156", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "6a6368ca8d833ea78d352b3e04edd79feda76cc6", "commitAfterChange": "5efc9f9b9b2d5a254886d093c84fc9dff908700a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1152\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1311\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db38996a67c5d3d09082bbb8457daa75", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "4f84296d89b8049419e9f3dd239a91091491facf", "commitAfterChange": "21d1b4d5bf00f0a21e48af621737dfc1061dae04", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011024-1628\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011029-1605\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc998edb2ebd94f2162bb5488e60d28e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void testSimpleFor() throws ParseException", "signatureAfterChange": "    public void testSimpleFor() throws ParseException", "diff": ["-    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.QualifiedName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.QualifiedName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+    assertEquals(\"[(koala.dynamicjava.tree.ForStatement: [(koala.dynamicjava.tree.VariableDeclaration: false (koala.dynamicjava.tree.IntTypeName: int) i (koala.dynamicjava.tree.IntegerLiteral: 0 0 int))] (koala.dynamicjava.tree.LessExpression: (koala.dynamicjava.tree.AmbiguousName: i) (koala.dynamicjava.tree.IntegerLiteral: 10 10 int)) [(koala.dynamicjava.tree.PostIncrement: (koala.dynamicjava.tree.AmbiguousName: i))] (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddfb7952807f57d43f90cb0c49387ff6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "cb029f12bd6c2fdcdba02605492a4baf5ca47e02", "commitAfterChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": "   public void testClassNameMisleading() throws BadLocationException", "signatureAfterChange": "   public void testClassNameMisleading() throws BadLocationException", "diff": ["-      \" {class X} \" + ", "+      \" {class X} \\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de6c0d1b6841dab7def25752a41bd62e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "b1a009357ee38fae7ba4718d569db3d7d864b431", "commitAfterChange": "c18e1b711f51d63da82eefb4c4720e5a5f2e15db", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   private void _setupDebugPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupDebugPanel(ConfigPanel panel)", "diff": ["-                                                  \"including java.*, javax.*, sun.*, com.sun.*, and com.apple.mrj.*</html>\"));", "+                                                  \"including java.*, javax.*, sun.*, com.sun.*, com.apple.eawt.*, and com.apple.eio.*</html>\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa38f38a7c040fcd1e2d88931c04659", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "8bce57471a5d2761f2096c66cde557596d4532bf", "commitAfterChange": "22f84adec0a01fd84bebf2427b8cf77de7f17dec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-0257\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20011114-1152\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfacfcb2cee93ce7f3f30e7adc73f620", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "42453ef03053968f9ca85cc1f502a43bd9378c76", "commitAfterChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "signatureAfterChange": "   private int _highlightKeywords(Vector<HighlightStatus> v, int i)", "diff": ["-    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!~<>?\";", "+    final String delimiters = \" \\t\\n\\r{}()[].+-/*;:=!@#$%^&*~<>?,\\\"`'<>|\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22ccad51bc25df861eb202071999aa6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectTest.java", "commitBeforeChange": "117b8e1eefe7632ee450aed6c94318fa28bf80a4", "commitAfterChange": "67e7b92991e4e8f9e841666ccb236411356e233e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testLegacyParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "signatureAfterChange": "   public void testLegacyParseProject() throws IOException, MalformedProjectFileException, java.text.ParseException", "diff": ["-      \"   (file (name \\\"src/sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\")(active))\\n\" +", "+      \"   (file (name \\\"src/sexp/Empty.java\\\")(select 24 28)(mod-date \\\"16-Jul-2004 03:45:23\\\"))\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e249e6238aa924473b645def22514262", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JSR14FromSetLocation.java", "commitBeforeChange": "7df412f6fa7cbfad04cdf72be8653b8f05b92b51", "commitAfterChange": "c56f2d498f34e494e55c625a22061d1e03ee5836", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public JSR14FromSetLocation()", "signatureAfterChange": "      public JSR14FromSetLocation()", "diff": ["-    super(\"edu.rice.cs.drjava.model.compiler.JSR14Compiler\",", "+    super(\"edu.rice.cs.drjava.model.compiler.JSR14v10Compiler\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2a5151968e8a6987cf357b91567619b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testMinusOperator() throws InterpreterException", "signatureAfterChange": "   public void testMinusOperator() throws InterpreterException", "diff": ["-    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";", "+    String expected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 10 10 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e350ef433aed0aa847e8b6895b68fafb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "commitAfterChange": "4d4748997ee78fbddb6aae07e8eba58cf630528c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private File _getWorkDir()", "signatureAfterChange": "   private File _getWorkDir()", "diff": ["-      workDir = new File(System.getProperty(\"user.home\"));", "+      workDir = new File(System.getProperty(\"user.dir\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3d74fe99abe505debeac7ac67be930b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "14d9da817fd1dfb180c09b0881e9dfe4248e9250", "commitAfterChange": "a4c5974c7021519528f8f810c260f2782693140d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   private void _setUpActions()", "signatureAfterChange": "   private void _setUpActions()", "diff": ["-    _setUpAction(_pasteAction, \"Copy\", \"Paste text from the clipboard\");", "+    _setUpAction(_pasteAction, \"Paste\", \"Paste text from the clipboard\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4975fc57766e7cfa7a04b00bd64006b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "commitAfterChange": "8fa41241e2ac3011c3058f056c6e4c222dae479c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1455\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1554\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a2b155c90116e9a3dd39e250d22cbb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugTestCase.java", "commitBeforeChange": "12434dc2dab84dfe1024e2e2b39fd8f27da62bbd", "commitAfterChange": "476f4df6ab63cd1004cb7cc36238fad228ab6d80", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void _notifyLock()", "signatureAfterChange": "   protected void _notifyLock()", "diff": ["-      _log.log(\"notified, count = \"+_pendingNotifies);     ", "+      _log.log(\"notified; count = \" + _pendingNotifies);     "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a8eea4d67b28522f7ffb6ac18a0068", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_2/edu/rice/cs/drjava/model/compiler/JSR14v12Compiler.java", "commitBeforeChange": "2b60d554bfbc943e9895d62c314b1c1db64d50e8", "commitAfterChange": "fb8ddcbfd71bd75d2b307b4e83f7a834ec364082", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public String getName()", "signatureAfterChange": "    public String getName()", "diff": ["-  ", "+", "-      return \"JSR-14 v1.3+\";", "+      return \"JSR-14 v1.3\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6503e56f1c1a3a5ed412526c6f69883", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ForEachParsingTest.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testFinalParameter() throws ParseException", "signatureAfterChange": "   public void testFinalParameter() throws ParseException", "diff": ["-      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.QualifiedName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());", "+      assertEquals(\"[(koala.dynamicjava.tree.ForEachStatement: (koala.dynamicjava.tree.FormalParameter: true (koala.dynamicjava.tree.ReferenceTypeName: Integer) i) (koala.dynamicjava.tree.AmbiguousName: crazyCollection) (koala.dynamicjava.tree.EmptyStatement: ))]\", statements.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e654bf52acde803a2fec9830652cc5ca", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "4a6b642f3afd5dae71256130cdcaaf4fda509249", "commitAfterChange": "ab1acd6921fa73274023da473a4888d5bdd6b5f2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t  \tpublic void testStartBrace()", "signatureAfterChange": "  \t  \tpublic void testStartBrace()", "diff": ["-\t\t\tassertEquals(\"0.1\", \"public class temp \\n{\",", "+\t\t\tassertEquals(\"0.1\", \"public class temp \\n  {\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76423082601a4e0398b9834005075ff", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "commitAfterChange": "17b59cf1640c29fbcc5ed0fdfe96f8053eaa1da0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "signatureAfterChange": "\r   public static Iterable<JarJDKToolsLibrary> search(GlobalModel model)", "diff": ["-                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \"),\r", "+                                                 LambdaUtil.or(IOUtil.regexCanonicalCaseFilePredicate(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\"),\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89381bfdcfb4b53e511b1938b98c905", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "commitAfterChange": "d07989306c43e4045df83ca1211956d5a85a21bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010831-1459\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010904-1436\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e98d62b3716f9400238a44fa4ad7e058", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "41dbd1f79552ad2c4983397e3a693dbde7c41bb5", "commitAfterChange": "e770a1b2886bd950ea04fddf3c15a027e23855d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010831-1435\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010831-1459\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9d7bf239f433cba6ee0e8920cb4302e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testNoJUnitErrors() throws Exception", "signatureAfterChange": "   public void testNoJUnitErrors() throws Exception", "diff": ["-    doc.startCompile();", "+    doc.startCompile(); // synchronously compiles doc", "-    if (printMessages) System.out.println(\"erros: \"+_model.getJUnitModel().getJUnitErrorModel());", "+    if (printMessages) System.out.println(\"errors: \"+_model.getJUnitModel().getJUnitErrorModel());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebd0d33e2280e4f36067d3720eb80049", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "5a26bed1df752ba1358015c1f052f13e80e98cf2", "commitAfterChange": "b2adcf09a03ba6f772e2f3c91188d15851dd508c", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   private void _setupMiscPanel( ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel( ConfigPanel panel)", "diff": ["-    panel.addComponent( new BooleanOptionComponent( OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Window Exits Unexpectedly\", this));", "+    panel.addComponent( new BooleanOptionComponent( OptionConstants.INTERACTIONS_EXIT_PROMPT, \"Prompt if Interactions Pane Exits Unexpectedly\", this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec2d86ef37ea54623dffdaae03bb98df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "2ec67558fcc2be0c684677fea7ee9feb674b02bc", "commitAfterChange": "a937ccbbfe3e2271b14c781e19a341556df45efe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010823-1354\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010824-1406\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5c14692b0ff948b22bdf2e25d5b540", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "6bdcaa1031d63e5f58edf8d0e2313eac60ac2bdc", "commitAfterChange": "c6ab4cad3515b44035f93fe56438ef0ad4e6d24d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testIndentParenPhrases() throws BadLocationException", "signatureAfterChange": "   public void testIndentParenPhrases() throws BadLocationException", "diff": ["-      \"      // foo();\\n\" +     // not new", "+      \"// foo();\\n\" +     // not new"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eef6e390f093ed2f42774d9e8f704b9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionHasCharPrecedingOpenBraceTest.java", "commitBeforeChange": "910d746e63f304ca12ddaf504f429a40f31bf858", "commitAfterChange": "5aa76b13dff40570c1cd7aec5ad8f4bfd4acc66f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testNoEquals() throws BadLocationException", "signatureAfterChange": "   public void testNoEquals() throws BadLocationException", "diff": ["-    assertTrue(\"At DOCSTART.\",    ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));", "+    assertTrue(\"At 0.\",    ! rule.applyRule(_doc, 0, Indenter.IndentReason.OTHER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef873df1dfed848867542057fbefea6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 28, "signatureBeforeChange": "          public void assertSaveCount(int i)", "signatureAfterChange": "      public void assertSaveCount(int i)", "diff": ["-    ", "-    public void assertSaveCount(int i) {", "-      assertEquals(\"number of times openFile fired\", i, saveCount);", "+", "+    public void assertSaveCount(int i) {", "+      assertEquals(\"number of times saveFile fired\", i, saveCount);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05b05b3aa2ba5eec3a128ff6352e4a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FontOptionTest.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void testParse()", "signatureAfterChange": "    public void testParse()", "diff": ["-    assertEquals(new Font(\"monospaced\", 0, 12), fo.parse(\"monospaced-PLAIN-12\"));", "+    assertEquals(new Font(\"monospaced\", 0, 12), fo.parse(\"monospaced-12\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0ea70e81471054f350936c4ef4fbfc2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "92fd06b34796984853343dde64251cfdd2a0ce25", "commitAfterChange": "ad91ad9028e35ded2c6aef6b30e8459151ecae7c", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   protected boolean shouldIndent(int selStart, int selEnd)", "signatureAfterChange": "   protected boolean shouldIndent(int selStart, int selEnd)", "diff": ["-   */", "+    */", "-         \"Re-indenting this block may take a very long time.  Are you sure?\",", "+         \"Re-indenting this block may take a long time.  Are you sure?\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0fdc7fcc17c0fea596bb15445fbffaf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "de9a74b95459b3c3644152e88e6c7584955956bf", "commitAfterChange": "d4ef034d69b5fa1749fc45485a48a54743383a3f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "signatureAfterChange": "   private void dumpVariablesIntoInterpreterAndSwitch() throws DebugException", "diff": ["-                        \"this2\", thisVal);", "+                        \"this\", thisVal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f11e444f6a71c8f5f9ed97ea96cc15eb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "009201ea5473f7ca59ef7e83c1f67ec0f1be92b0", "commitAfterChange": "6ca20aa23bdf7506876b7d41215a01a9cd168d71", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "      public void assertInterpreterResettingCount(int i)", "signatureAfterChange": "      public void assertInterpreterResettingCount(int i)", "diff": ["-      assertEquals(\"number of times interactionsResetting fired\", i, interpreterResettingCount);", "+      assertEquals(\"number of times interpreterResetting fired\", i, interpreterResettingCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1417428b62c3ba16569bbc8f565e705", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "0e7cc4c6b5d4cda742a05b22b2ec28afb0fbfbfc", "commitAfterChange": "d570ad402c465d9ef4c9e6ddb8071c25dcbbefd5", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testTopLevelInterfaceNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testTopLevelInterfaceNameMisleading()     throws BadLocationException, ClassNameNotFoundException", "diff": ["-    assertEquals(\"class name for interface: '\" + weird + \"'\",", "+    assertEquals(\"class name for user interface: '\" + weird + \"'\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f331288061cfe9c4f772c5c217cfa4b2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "3e22080f0d9650b7b802f9b713065e47d1a0ce19", "commitAfterChange": "1bbb44dda9ccbed1420a315a25ace5ab1cf20f80", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Void forInnerClassDef(InnerClassDef that)", "signatureAfterChange": "   public Void forInnerClassDef(InnerClassDef that)", "diff": ["-    handleInnerClassDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \"$\" + that.getName().getText());", "+    handleInnerClassDef(that, _symbolData, getQualifiedClassName(_symbolData.getName()) + \".\" + that.getName().getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f38c66d91ede603fbb348a0992e851c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testSmallestInt() throws ParseException", "signatureAfterChange": "   public void testSmallestInt() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4259d32473b19f6abae0d3202c1e2a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "59d5a7ea5784619a931e9fdef9de2a8ec9f89b2b", "commitAfterChange": "aa22056e3e8260253bc014e71a3e1da99c0bc773", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1725\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1835\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f467aadd65f3b9d3bf60e09bea4d3c8a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/ParserTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testIntMinValue() throws ParseException", "signatureAfterChange": "   public void testIntMinValue() throws ParseException", "diff": ["-    assertEquals(\"Type of Node\", VariableDeclaration.class, n.getClass());", "+    assertEquals(\"TypeName of Node\", VariableDeclaration.class, n.getClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5d31512677205ec7748ec709bc46db3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JarJDKToolsLibrary.java", "commitBeforeChange": "96a09f26e797e5676f0cf2606ce69c3ce24bf921", "commitAfterChange": "17b59cf1640c29fbcc5ed0fdfe96f8053eaa1da0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r   \r   private static FullVersion guessVersion(File f)", "signatureAfterChange": "\r   \r   private static FullVersion guessVersion(File f)", "diff": ["-      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d + \")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r", "+      else if (name.matches(\"\\\\d+\\\\.\\\\d+\\\\.\\\\d+\")) { result = JavaVersion.parseFullVersion(parsedVersion = name,vendor,vendor); }\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f67f2b2f5e56c1dd8e2bced726b4a484", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "9ac042462ff2ccafde5facafd742598846cdb098", "commitAfterChange": "129e16928b37d25f1eb9e60e117e48de5dda4c3c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1100\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010814-1455\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6829c33c0db8af79eeeaf32e5115ada", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v1_2/edu/rice/cs/drjava/model/compiler/JSR14v12Compiler.java", "commitBeforeChange": "8ece0edfbf0fa97c28d74f8231f220f413cd26e5", "commitAfterChange": "c5f2d31f7edb6a20d0ee084edd50278c1caa182e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public boolean isAvailable()", "signatureAfterChange": "   public boolean isAvailable()", "diff": ["+   */", "-      Class.forName(\"com.sun.tools.javac.v8.Main$10\");", "+      Class.forName(\"com.sun.tools.javac.v8.Main$12\");", "-        // not available since jsr14 v2.0 is on the boot classpath", "+        // only available if jsr14 v2.x is on the boot classpath"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8199c1007397e985fd148b46b8adc4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "d012414100e088dfd0a2ea6e642cc05f11fbf32b", "commitAfterChange": "762f9487498790edfa8d7b58c3d83cb6592af447", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "         public static void main(final String[] args)", "signatureAfterChange": "         public static void main(final String[] args)", "diff": ["-                         \"edu.rice.cs.drjava.AWTExceptionHandler\");", "+                         \"edu.rice.cs.drjava.ui.AWTExceptionHandler\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e6fe5370c382318b2a10544999f34a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "f68cf86a7b77c6be6c5664ebc77bddbfe7e5ec96", "commitAfterChange": "b1771db3e25f16df4acd21624b8bb5b835b04c2b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1625\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010820-1834\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ea62aec42aff403b1f4a2d439ff50f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "8ef464a5916d345894f41b4678b1a0525d26cfff", "commitAfterChange": "f30f8f4a19cbec375d60179da7ca925083cfb5db", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "      public void testArrayAccess() throws InterpreterException", "signatureAfterChange": "      public void testArrayAccess() throws InterpreterException", "diff": ["-    String idxExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceType: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 0 0 int)]))\";", "+    String idxExpected = \"(koala.dynamicjava.tree.ObjectMethodCall: intValue null (koala.dynamicjava.tree.SimpleAllocation: (koala.dynamicjava.tree.ReferenceTypeName: Integer) [(koala.dynamicjava.tree.IntegerLiteral: 0 0 int)]))\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f974f5f4158fbed27ef5cc035a03fc50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "1b141431638c22964f6fac7b85e578de27c8fc84", "commitAfterChange": "59d5a7ea5784619a931e9fdef9de2a8ec9f89b2b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010806-1629\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010807-1725\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa30696e169d5789050a0cf4eba87075", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "847a8a14da81b32fde69840fb03b98064ba862eb", "commitAfterChange": "a454f078c900245b418db671925f6207d6f1ff60", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010810-1621\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010812-1702\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faa34b3b8d7d3dfa1524002b5772dc9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "99b38c17e39f8591bf821ecb0016a46b269f3561", "commitAfterChange": "a41f5b87d13c309c50d9f040cc3993ffd4cc4b01", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1733\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010910-1738\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb28d4a0b9b3dda11cd9b8756a525f57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "985a2a7aa160a776eff6e6187000ef0ccbcb7ce0", "commitAfterChange": "4d4748997ee78fbddb6aae07e8eba58cf630528c", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    // use user.home, not user.dir like we were before.", "+    // use user.dir (bug #895998).", "-      workDir = new File(System.getProperty(\"user.home\"));", "+      workDir = new File(System.getProperty(\"user.dir\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb45859b31651f34bbae0d210e3f77ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "8f6efc493160eeb6a0f9f6e09acdeddfe1638848", "commitAfterChange": "414911409ffccc198572e4d568622c4bb424b34e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1511\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010816-1550\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc72063487cf86429606914fa6ac9e81", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "8af81c4ac2b5fdee08d0909db34923047e4b5620", "commitAfterChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException", "diff": ["-    File compiled = classForJava(file, \"Foo\");", "+    File compiled = classForJava(file, \"DrJavaTestFoo\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcaa14b38c3546647fb4ab1012358bb3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/FontOptionTest.java", "commitBeforeChange": "4009de7b28d2df87c05fce5746e7b354468d763f", "commitAfterChange": "ef6fbf4282520a8a1b7a89050b6be023e72a81a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    public void testFormat()", "signatureAfterChange": "    public void testFormat()", "diff": ["-    assertEquals(\"monospaced-PLAIN-12\",  fO1.format(new Font(\"monospaced\", 0, 12)));", "+    assertEquals(\"monospaced-12\",  fO1.format(new Font(\"monospaced\", 0, 12)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb89ebdcea313350221a1ebccdd6425", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/Version.java", "commitBeforeChange": "5ce697dd7981bb0272c333acaac17aeb5eceb85e", "commitAfterChange": "ca8c972fc27cfec629f54b8a8a68e7726bac6969", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    private static Date _getBuildDate()", "signatureAfterChange": "    private static Date _getBuildDate()", "diff": ["-      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010824-1406\");", "+      return new SimpleDateFormat(\"yyyyMMdd-HHmm\").parse(\"20010824-1512\");"]}], "num": 149}