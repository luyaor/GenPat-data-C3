{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "01922d55482cf7436018bf001e5359ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6132fea2d237b9b2e5382b5df6e1830e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 248, "signatureBeforeChange": "   public static <T1, T2, T3, T4> Iterable<Quad<T1, T2, T3, T4>> zip(Iterable<? extends T1> iter1,                                                                      Iterable<? extends T2> iter2,                                                                     Iterable<? extends T3> iter3,                                                                     Iterable<? extends T4> iter4)", "signatureAfterChange": "   public static <T1, T2, T3, T4> Iterable<Quad<T1, T2, T3, T4>> zip(Iterable<? extends T1> iter1,                                                                      Iterable<? extends T2> iter2,                                                                     Iterable<? extends T3> iter3,                                                                     Iterable<? extends T4> iter4)", "diff": ["-    return new QuaternaryMappedIterable<T1, T2, T3, T4, Quad<T1, T2, T3, T4>>(iter1, iter2, iter3, iter4, ", "-                                                                              Quad.<T1, T2, T3, T4>factory());", "+    return map(iter1, iter2, iter3, iter4, Quad.<T1, T2, T3, T4>factory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651108dcb2922c2cd06a4f2ed55091e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/iter/IterUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 247, "signatureBeforeChange": "   public static <T1, T2, T3> Iterable<Triple<T1, T2, T3>> zip(Iterable<? extends T1> iter1,                                                                Iterable<? extends T2> iter2,                                                               Iterable<? extends T3> iter3)", "signatureAfterChange": "   public static <T1, T2, T3> Iterable<Triple<T1, T2, T3>> zip(Iterable<? extends T1> iter1,                                                                Iterable<? extends T2> iter2,                                                               Iterable<? extends T3> iter3)", "diff": ["-    return new TernaryMappedIterable<T1, T2, T3, Triple<T1, T2, T3>>(iter1, iter2, iter3, Triple.<T1, T2, T3>factory());", "+    return map(iter1, iter2, iter3, Triple.<T1, T2, T3>factory());"]}], "num": 8039}