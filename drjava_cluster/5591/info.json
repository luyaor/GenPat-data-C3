{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aca9d9fe2d7ddd029fa39eb2fa78196c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04c2f76fac96e828d73ee0c9aa757f91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitEventNotifier.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void compileBeforeJUnit(final CompilerListener cl)", "signatureAfterChange": "   public void compileBeforeJUnit(final CompilerListener cl, List<OpenDefinitionsDocument> outOfSync)", "diff": ["-  public void compileBeforeJUnit(final CompilerListener cl) {", "+  public void compileBeforeJUnit(final CompilerListener cl, List<OpenDefinitionsDocument> outOfSync) {", "-    try { for (JUnitListener jul : _listeners) { jul.compileBeforeJUnit(cl); } }", "+    try { for (JUnitListener jul : _listeners) { jul.compileBeforeJUnit(cl, outOfSync); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4031fd85b7868318d8173fda07c9bffe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalEventNotifier.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   public void compileBeforeJUnit(final CompilerListener cl)", "signatureAfterChange": "   public void compileBeforeJUnit(final CompilerListener cl, List<OpenDefinitionsDocument> outOfSync)", "diff": ["-  public void compileBeforeJUnit(final CompilerListener cl) {", "+  public void compileBeforeJUnit(final CompilerListener cl, List<OpenDefinitionsDocument> outOfSync) {", "-    try { for (GlobalModelListener l : _listeners) { l.compileBeforeJUnit(cl); } }", "+    try { for (GlobalModelListener l : _listeners) { l.compileBeforeJUnit(cl, outOfSync); } }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52147c64dcdcc045c80e321cc6a7eb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "51e686ba41ead06ef0f1c4bec2b00eaf247dbe80", "commitAfterChange": "aa7731dd2e1401d2d7a2138058a2aae91b7b3cb6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile)", "signatureAfterChange": "   private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile, final List<OpenDefinitionsDocument> outOfSync)", "diff": ["-  private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile) { ", "-    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileBeforeJUnit(testAfterCompile); } });", "+  private void _notifyCompileBeforeJUnit(final CompilerListener testAfterCompile, final List<OpenDefinitionsDocument> outOfSync) { ", "+    Utilities.invokeLater(new Runnable() { public void run() { _notifier.compileBeforeJUnit(testAfterCompile, outOfSync); } });"]}], "num": 5591}