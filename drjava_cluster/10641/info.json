{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11e8d4309fbff2f1394345f8c93ff9d5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112ce9d63990222e9b5b971e7a7910e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "c93340cd9d91732c1540d4999abcf9b7d3d37f3e", "commitAfterChange": "69b7f744a06a218546e1e05a5acb1e8cacf5750d", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 65, "signatureBeforeChange": "     public void mousePressed(MouseEvent e)", "signatureAfterChange": "          public void mousePressed(MouseEvent e)", "diff": ["-  private class ThreadMouseAdapter extends MouseAdapter {", "-    public void mousePressed(MouseEvent e) {", "-      if (e.isPopupTrigger()) {", "-        int row = _threadTable.rowAtPoint(e.getPoint());", "-        _threadTable.setRowSelectionInterval(row, row);", "-        final DebugThreadData thread = _threads.elementAt(row);", "-        _threadMenuItem.setAction(new AbstractAction() {", "-          public void actionPerformed(ActionEvent e) {", "-            _debugger.setCurrentThread(thread);", "-          }", "-        });", "-        ", "-        if (_threads.elementAt(row).isSuspended()) {", "-          _threadMenuItem.setText(\"Select Thread\");", "-        }", "-        else {", "-          _threadMenuItem.setText(\"Suspend & Select Thread\");", "-        }", "-        _threadPopupMenu.show(e.getComponent(), e.getX(), e.getY());", "-      else if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2) {", "-        _debugger.setCurrentThread(_threads.elementAt(_threadTable.getSelectedRow()));", "+    ", "+    public void mousePressed(MouseEvent e) {", "+      if (e.isPopupTrigger()) {", "+        int row = _table.rowAtPoint(e.getPoint());", "+", "+        _table.setRowSelectionInterval(row, row);", "+", "+        _menuItem.setAction(new AbstractAction() {", "+          public void actionPerformed(ActionEvent e) {", "+            _action();", "+          }", "+        });", "+        ", "+        _menuItem.setText(_popupMenuText());", "+        _popupMenu.show(e.getComponent(), e.getX(), e.getY());", "+      }", "+      else if (SwingUtilities.isLeftMouseButton(e) && e.getClickCount() == 2) {", "+        _action();", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7587155a71ac3409563a19b51314ed05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "da631ae365e5ae3fe7064b60f098ede0150c39bb", "commitAfterChange": "574257b530483460a9c0ce0cc5577b7fd93532dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "signatureAfterChange": "      public ErrorPanel(SingleDisplayModel model, MainFrame frame, String tabString, String labelString)", "diff": ["+    ", "+    /** Default copy action.  Returns focus to the correct pane. */", "+    final Action copyAction = new AbstractAction(\"Copy contents to clipboard\", MainFrame.getIcon(\"Copy16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().selectAll();", "+        String t = getErrorListPane().getSelectedText();", "+        if (t != null) {", "+          if (t.length() != 0) {", "+            StringSelection stringSelection = new StringSelection(t);", "+            Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();", "+            clipboard.setContents(stringSelection, getErrorListPane());", "+            ClipboardHistoryModel.singleton().put(t);", "+          }", "+        }", "+      }", "+    };", "+    addPopupMenu(copyAction);", "+    getPopupMenu().add(new AbstractAction(\"Save Copy of Contents...\", MainFrame.getIcon(\"Save16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        _frame._saveDocumentCopy(getErrorListPane().getErrorDocument());", "+      }", "+    });", "+    getPopupMenu().addSeparator();", "+    getPopupMenu().add(new AbstractAction(\"Print...\", MainFrame.getIcon(\"Print16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().getErrorDocument().print();", "+      }", "+    });", "+    getPopupMenu().add(new AbstractAction(\"Print Preview...\", MainFrame.getIcon(\"PrintPreview16.gif\")) {", "+      public void actionPerformed(ActionEvent e) {", "+        getErrorListPane().getErrorDocument().preparePrintJob();", "+        new PreviewErrorFrame();", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823d324005ecdd1cc5e674bf945b2050", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "54d0a17e7a37f15a89960f683e082d8fac346424", "commitAfterChange": "5c2ac9e8438d392f2dbd245a906f9c4b21c33aac", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    _threadRunningPopupMenu = new JPopupMenu(\"Thread Selection\");", "-    JMenuItem threadRunningSuspend = new JMenuItem();", "-    Action suspendAction = new AbstractAction(\"Select Thread\") {", "+", "+//     _threadRunningPopupMenu = new JPopupMenu(\"Thread Selection\");", "+//     JMenuItem threadRunningSuspend = new JMenuItem();", "+//     Action suspendAction = new AbstractAction(\"Suspend Thread\") {", "+//       public void actionPerformed(ActionEvent e) {", "+//         try{", "+//           _debugger.suspend(getSelectedThread());", "+//         }", "+//         catch(DebugException exception) {", "+//           JOptionPane.showMessageDialog(_frame, \"Cannot suspend the thread.\", \"Debugger Error\", JOptionPane.ERROR_MESSAGE);", "+//         }", "+//       }", "+//     };", "+//     threadRunningSuspend.setAction(suspendAction);", "+//     _threadRunningPopupMenu.add(threadRunningSuspend);", "+//     threadRunningSuspend.setText(\"Suspend and Select Thread\");", "+    ", "+    Action selectAction = new AbstractAction(\"Select Thread\") {", "-          _debugger.suspend(getSelectedThread());", "+          _debugger.setCurrentThread(getSelectedThread());", "-          JOptionPane.showMessageDialog(_frame, \"Cannot suspend the thread.\", \"Debugger Error\", JOptionPane.ERROR_MESSAGE);", "+          JOptionPane.showMessageDialog(_frame, \"Cannot select thread.\", ", "+                                        \"Debugger Error\", JOptionPane.ERROR_MESSAGE);", "-    threadRunningSuspend.setAction(suspendAction);", "-    _threadRunningPopupMenu.add(threadRunningSuspend);", "-    threadRunningSuspend.setText(\"Suspend and Select Thread\");", "-    JMenuItem threadSuspendedSelect = new JMenuItem(suspendAction);", "-    JMenuItem threadSuspendedResume = new JMenuItem(new AbstractAction() {", "+    JMenuItem threadSuspendedSelect = new JMenuItem();", "+    threadSuspendedSelect.setAction(selectAction);", "+    JMenuItem threadSuspendedResume = new JMenuItem();", "+    threadSuspendedResume.setAction(new AbstractAction() {", "-        _debugger.resume(getSelectedThread());", "+          _debugger.resume(getSelectedThread());", "-        catch(DebugException dbe) {", "-          JOptionPane.showMessageDialog(_frame, \"Cannot resume the thread.\", \"Debugger Error\", JOptionPane.ERROR_MESSAGE);", "+        catch (DebugException dbe) {", "+          _frame._showDebugError(dbe);", "-        _debugger.scrollToSource(getSelectedStackItem());", "+        try {", "+          _debugger.scrollToSource(getSelectedStackItem());", "+        }", "+        catch (DebugException de) {", "+          _frame._showDebugError(de);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92b0e85f9aadac00549b180a2e942962", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "commitAfterChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    _threadPopupMenu = new JPopupMenu(\"Thread Selection\");", "-    _threadMenuItem = new JMenuItem();", "-    _threadPopupMenu.add(_threadMenuItem);", "+    _threadRunningPopupMenu = new JPopupMenu(\"Thread Selection\");", "+    JMenuItem threadRunningSuspend = new JMenuItem();", "+    Action suspendAction = new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.suspend(getSelectedThread());", "+      }", "+    };", "+    threadRunningSuspend.setAction(suspendAction);", "+    _threadRunningPopupMenu.add(threadRunningSuspend);", "+    threadRunningSuspend.setText(\"Suspend and Select Thread\");", "+    ", "+    _threadSuspendedPopupMenu = new JPopupMenu(\"Thread Selection\");", "+    JMenuItem threadSuspendedSelect = new JMenuItem();", "+    threadSuspendedSelect.setAction(suspendAction);", "+    JMenuItem threadSuspendedResume = new JMenuItem();", "+    threadSuspendedResume.setAction(new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.resume(getSelectedThread());", "+      }", "+    });", "+    _threadSuspendedPopupMenu.add(threadSuspendedSelect);", "+    _threadSuspendedPopupMenu.add(threadSuspendedResume);", "+    threadSuspendedSelect.setText(\"Select Thread\");", "+    threadSuspendedResume.setText(\"Resume Thread\");", "+    ", "-    _stackMenuItem = new JMenuItem();", "-    _stackPopupMenu.add(_stackMenuItem);", "+    JMenuItem stackMenuItem = new JMenuItem();", "+    stackMenuItem.setAction(new AbstractAction() {", "+      public void actionPerformed(ActionEvent e) {", "+        _debugger.scrollToSource(getSelectedStackItem());", "+      }", "+    });", "+    _stackPopupMenu.add(stackMenuItem);", "+    stackMenuItem.setText(\"Scroll to Source\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c138ffad00685cb72da1724c32b6ab2d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DebugPanel.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   private void _initPopup()", "signatureAfterChange": "   private void _initPopup()", "diff": ["-    JMenuItem threadSuspendedSelect = new JMenuItem();", "-    threadSuspendedSelect.setAction(selectAction);", "-    JMenuItem threadSuspendedResume = new JMenuItem();", "-    threadSuspendedResume.setAction(new AbstractAction() {", "+    _threadSuspendedPopupMenu.add(selectAction);", "+    _threadSuspendedPopupMenu.add(new AbstractAction(\"Resume Thread\") {", "-    _threadSuspendedPopupMenu.add(threadSuspendedSelect);", "-    _threadSuspendedPopupMenu.add(threadSuspendedResume);", "-    threadSuspendedSelect.setText(\"Select Thread\");", "-    threadSuspendedResume.setText(\"Resume Thread\");", "-    JMenuItem stackMenuItem = new JMenuItem();", "-    stackMenuItem.setAction(new AbstractAction() {", "+    _stackPopupMenu.add(new AbstractAction(\"Scroll to Source\") {", "-    _stackPopupMenu.add(stackMenuItem);", "-    stackMenuItem.setText(\"Scroll to Source\");", "+", "+    _breakpointPopupMenu = new JPopupMenu(\"Breakpoint\");", "+    _breakpointPopupMenu.add(new AbstractAction(\"Scroll to Source\") {", "+      public void actionPerformed(ActionEvent e) {", "+        _scrollToSourceIfBreakpoint();", "+      }", "+    });", "+    _breakpointPopupMenu.add(new AbstractAction(\"Remove Breakpoint\") {", "+      public void actionPerformed(ActionEvent e) {", "+        try {", "+          _debugger.removeBreakpoint(_getSelectedBreakpoint());", "+        }", "+        catch (DebugException de) {", "+          _frame._showDebugError(de);", "+        }", "+      }", "+    });", "+    _bpTree.addMouseListener(new BreakpointMouseAdapter());"]}], "num": 10641}