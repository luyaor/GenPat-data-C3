{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17232fdf297c00f31c95914ecd2dad35", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c83cdfff692b6d3e55019647176a13d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "3c002733e6bec1f112ca58ec38806686ba48b477", "commitAfterChange": "781f0d0cc2beb96bc72b49283dde3e8cd187c6ba", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void addDebugInterpreter(String name, JavaInterpreter interpreter)", "signatureAfterChange": "   void addDebugInterpreter(String name, JavaInterpreter interpreter)", "diff": ["-  public void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "-    if (_debugInterpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "-    }", "-    _debugInterpreters.put(name, interpreter);", "+  void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "+    if (_debugInterpreters.containsKey(name)) {", "+      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "+    }", "+    _debugInterpreters.put(name, new InterpreterData(interpreter));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c50b6bc12d97fd14fc0dbebe1183fbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public synchronized void addInterpreter(String name, Interpreter interpreter)", "signatureAfterChange": "   public void addInterpreter(String name)", "diff": ["-   */", "-  public synchronized void addInterpreter(String name, Interpreter interpreter) {", "-    if (_interpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"'\" + name + \"' is not a unique interpreter name\");", "-    }", "-    _interpreters.put(name, new InterpreterData(interpreter));", "-  }", "+   */", "+  public void addInterpreter(String name) {", "+    if (_interpreters.containsKey(name)) {", "+      throw new IllegalArgumentException(\"'\" + name + \"' is not a unique interpreter name\");", "+    }", "+    Interpreter i = new Interpreter(Options.DEFAULT, _classPathManager.getClassLoader());", "+    _interpreters.put(name, i);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9db1f3da6b36a42c11405348ed39acf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "60798300f32b2ec4f4cff0f390993b3a5984e6c1", "commitAfterChange": "6fa1e9e0526601b88fed849b111530adacda855f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 11, "signatureBeforeChange": "   void addDebugInterpreter(String name, JavaInterpreter interpreter)", "signatureAfterChange": "   public void addInterpreter(String name, Interpreter interpreter)", "diff": ["+   */", "+  public void addInterpreter(String name, Interpreter interpreter) {", "+    if (_interpreters.containsKey(name)) {", "+      throw new IllegalArgumentException(\"'\" + name + \"' is not a unique interpreter name\");", "+    }", "+    _interpreters.put(name, new InterpreterData(interpreter));", "+  }", "-   */", "-  void addDebugInterpreter(String name, JavaInterpreter interpreter) {", "-    if (_debugInterpreters.containsKey(name)) {", "-      throw new IllegalArgumentException(\"Names for debug interpreters must be unique\");", "-    }", "-    _debugInterpreters.put(name, new InterpreterData(interpreter));", "-  }"]}], "num": 18504}