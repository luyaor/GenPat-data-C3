{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "384ebc7acfd8b6b801bdb28a31be5466", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb33dd924d71907d13b337ccf3e467c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "a2b28a9213fa3cc634db7fda88e14ebb0a103974", "commitAfterChange": "56df485f00337d373f1f0b94fc58f7c7b8b714d4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public FindReplaceMachine(DocumentIterator docIterator)", "signatureAfterChange": "     public FindReplaceMachine(DocumentIterator docIterator)", "diff": ["-   */", "-  public FindReplaceMachine(DocumentIterator docIterator) {", "-    _findWord = \"\";", "-    _replaceWord = \"\";", "-    _matchCase = true;", "-    _searchAllDocuments = false;", "-    _lastFindWord = null;", "-    _skipOneFind = false;", "-    _docIterator = docIterator;", "-  }", "+    */", "+    public FindReplaceMachine(DocumentIterator docIterator) {", "+        _findAnyOccurrence = new FindAnyOccurrenceState(docIterator);", "+        _matchWholeWord = new MatchWholeWordState(docIterator);", "+        setFindAnyOccurrence();", "+        setFindWord(\"\");", "+        setReplaceWord(\"\");", "+        setMatchCase(true);", "+        setSearchAllDocuments(false);       ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eedb21d3cdddd92c8059aa221690b23b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "commitAfterChange": "46e11d94aab488b0f851c712b65caea9a087e829", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public FindReplaceMachine(DocumentIterator docIterator)", "signatureAfterChange": "   public FindReplaceMachine(DocumentIterator docIterator)", "diff": ["+   */", "+  public FindReplaceMachine(DocumentIterator docIterator) {    ", "+    _skipOneFind = false;", "+    _docIterator = docIterator;", "+    setFindAnyOccurrence();", "+    setFindWord(\"\");", "+    setReplaceWord(\"\");", "+    setSearchBackwards(false);", "+    setMatchCase(true);", "+    setSearchAllDocuments(false);", "+    setIgnoreCommentsAndStrings(false);", "+  }", "-    /** NonModal version */", "-    public FindReplaceMachine(DocumentIterator docIterator) {", "-        _findAnyOccurrence = new FindAnyOccurrenceState(docIterator);", "-        _matchWholeWord = new MatchWholeWordState(docIterator);", "-        setFindAnyOccurrence();", "-        setFindWord(\"\");", "-        setReplaceWord(\"\");", "-        setMatchCase(true);", "-        setSearchAllDocuments(false);", "-"]}], "num": 4568}