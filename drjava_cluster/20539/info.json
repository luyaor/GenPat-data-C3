{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82f6b3acfddcfae55c4081f16648ddea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6352dd65048537facf79c79e46123d1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "          public void testForConcreteMethodDef()", "signatureAfterChange": "          public void testForConcreteMethodDef()", "diff": ["-      assertEquals(\"There should be 2 errors\", 2, errors.size());", "-      assertEquals(\"The error message should be correct\", \"You cannot use i because it may not have been given a value\", errors.get(1).getFirst());", "+      assertEquals(\"There should still be 1 error\", 1, errors.size());  // Generated error is duplicate", "+      assertEquals(\"The error message should be correct\", \"You cannot use i because it may not have been given a value\", ", "+                   errors.get(0).getFirst());", "-      assertEquals(\"There should be 3 errors\", 3, errors.size());", "-      assertEquals(\"The error message should be correct\", \"You cannot assign a value to i because it is immutable and has already been given a value\", errors.get(2).getFirst());", "+      assertEquals(\"There should now be 2 error2\", 2, errors.size());", "+      assertEquals(\"The error message should be correct\", ", "+                   \"You cannot assign a value to i because it is immutable and has already been given a value\", ", "+                   errors.get(1).getFirst());", "-      assertEquals(\"There should be 3 errors\", 3, errors.size());", "+      assertEquals(\"There should still be 2 errors\", 2, errors.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a301c904b39e2a70ac5b406bf7fdbf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": "          public void test_forModifiersAndVisibility()", "signatureAfterChange": "          public void test_forModifiersAndVisibility()", "diff": ["-      assertEquals(\"There should be two errors.\", 3, errors.size());", "+      assertEquals(\"There should still be two errors.\", 2, errors.size());  // Generated error is duplicate", "-                   \" Can't use final and abstract together.\", errors.get(2).getFirst());", "+                   \" Can't use final and abstract together.\", errors.get(1).getFirst());", "-      assertEquals(\"There should be two errors.\", 4, errors.size());", "+      assertEquals(\"There should be three errors.\", 3, errors.size());  // Generated one new error", "-                   \" Can't use final and volatile together.\", errors.get(3).getFirst());", "+                   \" Can't use final and volatile together.\", errors.get(2).getFirst());", "-      assertEquals(\"There should be two errors.\", 5, errors.size());", "-      assertEquals(\"The error message should be correct.\", \"Duplicate modifier: static\", errors.get(4).getFirst());", "+      assertEquals(\"There should be four errors.\", 4, errors.size());  // Generated one new error", "+      assertEquals(\"The error message should be correct.\", \"Duplicate modifier: static\", errors.get(3).getFirst());"]}], "num": 20539}