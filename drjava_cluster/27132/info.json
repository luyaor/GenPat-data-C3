{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d9a9c4d294751bd0605e20a291b3535", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79c8a55c113fb6c14194e159432c3c5f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 49, "signatureBeforeChange": "   final public ConstructorDeclaration constructorDeclaration() throws ParseException", "signatureAfterChange": "   final public ConstructorDeclaration constructorDeclaration() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case PRIVATE:", "-    case PROTECTED:", "-    case PUBLIC:", "+    try {", "-      case PUBLIC:", "-        t = jj_consume_token(PUBLIC);", "-      flag = Modifier.PUBLIC;", "-        break;", "-      case PROTECTED:", "-        t = jj_consume_token(PROTECTED);", "-       flag = Modifier.PROTECTED;", "-        break;", "-        t = jj_consume_token(PRIVATE);", "+      case PROTECTED:", "+      case PUBLIC:", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case PUBLIC:", "+          t = jj_consume_token(PUBLIC);", "+      flag = Modifier.PUBLIC;", "+          break;", "+        case PROTECTED:", "+          t = jj_consume_token(PROTECTED);", "+       flag = Modifier.PROTECTED;", "+          break;", "+        case PRIVATE:", "+          t = jj_consume_token(PRIVATE);", "+          break;", "+        default:", "+          jj_la1[39] = jj_gen;", "+          jj_consume_token(-1);", "+          throw new ParseException();", "+        }", "-        jj_la1[38] = jj_gen;", "-        jj_consume_token(-1);", "-        throw new ParseException();", "-      }", "-      break;", "-    default:", "-      jj_la1[39] = jj_gen;", "-      ;", "-    }", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case LESS:", "-      typeParameters = TypeParameters();", "-      break;", "-    default:", "-      jj_la1[40] = jj_gen;", "-      ;", "-    }", "-    id = jj_consume_token(IDENTIFIER);", "-    params = formalParameters();", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case THROWS:", "-      jj_consume_token(THROWS);", "-      exceptions = ReferenceTypeNameList();", "-      break;", "-    default:", "-      jj_la1[41] = jj_gen;", "-      ;", "-    }", "-    jj_consume_token(LBRACE);", "-    if (jj_2_18(2147483647)) {", "-      ci = explicitConstructorInvocation();", "-    } else {", "-      ;", "-    }", "-    label_15:", "-    while (true) {", "-      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-      case BOOLEAN:", "-      case BREAK:", "-      case BYTE:", "-      case CHAR:", "-      case CLASS:", "-      case CONTINUE:", "-      case DO:", "-      case DOUBLE:", "-      case FALSE:", "-      case FINAL:", "-      case FLOAT:", "-      case FOR:", "-      case IF:", "-      case INT:", "-      case INTERFACE:", "-      case LONG:", "-      case NEW:", "-      case NULL:", "-      case RETURN:", "-      case SHORT:", "-      case SUPER:", "-      case SWITCH:", "-      case SYNCHRONIZED:", "-      case THIS:", "-      case THROW:", "-      case TRUE:", "-      case TRY:", "-      case VOID:", "-      case WHILE:", "-      case INTEGER_LITERAL:", "-      case LONG_LITERAL:", "-      case FLOAT_LITERAL:", "-      case DOUBLE_LITERAL:", "-      case CHARACTER_LITERAL:", "-      case STRING_LITERAL:", "-      case IDENTIFIER:", "-      case LPAREN:", "-      case LBRACE:", "-      case SEMICOLON:", "-      case INCREMENT:", "-      case DECREMENT:", "+        jj_la1[40] = jj_gen;", "+      }", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LESS:", "+        typeParameters = TypeParameters();", "+        break;", "+      default:", "+        jj_la1[41] = jj_gen;", "+        ;", "+      }", "+      id = jj_consume_token(IDENTIFIER);", "+      params = formalParameters();", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case THROWS:", "+        jj_consume_token(THROWS);", "+        exceptions = ReferenceTypeNameList();", "-        break label_15;", "+        ;", "-      stmt = blockStatement();", "+      jj_consume_token(LBRACE);", "+      if (jj_2_18(2147483647)) {", "+        ci = explicitConstructorInvocation();", "+      } else {", "+        ;", "+      }", "+      label_15:", "+      while (true) {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case BOOLEAN:", "+        case BREAK:", "+        case BYTE:", "+        case CHAR:", "+        case CLASS:", "+        case CONTINUE:", "+        case DO:", "+        case DOUBLE:", "+        case FALSE:", "+        case FINAL:", "+        case FLOAT:", "+        case FOR:", "+        case IF:", "+        case INT:", "+        case INTERFACE:", "+        case LONG:", "+        case NEW:", "+        case NULL:", "+        case RETURN:", "+        case SHORT:", "+        case SUPER:", "+        case SWITCH:", "+        case SYNCHRONIZED:", "+        case THIS:", "+        case THROW:", "+        case TRUE:", "+        case TRY:", "+        case VOID:", "+        case WHILE:", "+        case INTEGER_LITERAL:", "+        case LONG_LITERAL:", "+        case FLOAT_LITERAL:", "+        case DOUBLE_LITERAL:", "+        case CHARACTER_LITERAL:", "+        case STRING_LITERAL:", "+        case IDENTIFIER:", "+        case LPAREN:", "+        case LBRACE:", "+        case SEMICOLON:", "+        case INCREMENT:", "+        case DECREMENT:", "+          ;", "+          break;", "+        default:", "+          jj_la1[43] = jj_gen;", "+          break label_15;", "+        }", "+        stmt = blockStatement();", "-    }", "-    e = jj_consume_token(RBRACE);", "+      }", "+      e = jj_consume_token(RBRACE);", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid constructor declaration\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82215416673b517ede0fa80b2bda34a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7228cea597c372946661a7e1f1db20fd24b9dee1", "commitAfterChange": "8bb2649bd077e2bf6ccaf611ff49da8ad083e7b7", "methodNumberBeforeChange": 411, "methodNumberAfterChange": 412, "signatureBeforeChange": "     public void caretUpdate(final CaretEvent ce)", "signatureAfterChange": "     public void caretUpdate(final CaretEvent ce)", "diff": ["-      String text = doc.getText();", "-      if (offset == _offset + 1 && text.charAt(_offset) != '\\n') {", "-        _col += 1;", "+      try {", "+        if (offset == _offset + 1 && doc.getText(_offset, 1).charAt(0) != '\\n') {", "+          _col += 1;", "+          updateLocation(_line, _col); ", "+          return;", "+        }", "-      else {", "-        Element root = doc.getDefaultRootElement();", "-        int line = root.getElementIndex(offset); ", "-        _line = line + 1;     // line numbers are 1-based", "-        _col = offset - root.getElement(line).getStartOffset();", "-      }", "+      catch(BadLocationException e) { /* fall through */ }", "+        ", "+      Element root = doc.getDefaultRootElement();", "+      int line = root.getElementIndex(offset); ", "+      _line = line + 1;     // line numbers are 1-based", "+      _col = offset - root.getElement(line).getStartOffset();"]}], "num": 27132}