{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2ccceca5a260f5126d134234ce257fb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8cbbe842e2dcd9b179ea57d402ef53", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreter.java", "commitBeforeChange": "a42a1005ad3faca50638e0131df3bc7c45ba82de", "commitAfterChange": "0b0e9049d382a4fa995a6c0df7ce197dd950d3eb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "signatureAfterChange": "     protected ReferenceType _getReferenceTypeForField(String field, Context context)", "diff": ["+      // field may be of form outerClass$innerClass. ", "+      // We want to match the inner most class.", "+      int lastDollar = field.lastIndexOf(\"$\");", "+      if (lastDollar != -1) {", "+        field = field.substring(lastDollar + 1, field.length());", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab044f20e351acdcab8d92e3ee6cc616", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/InteractionsController.java", "commitBeforeChange": "aa7f147d71330aa12463dfbc7a233e3ed25560e6", "commitAfterChange": "cfaac02e8e33f506b730c3f8ce96676d16b8f705", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public void insertUpdate(DocumentEvent e)", "signatureAfterChange": "     public void insertUpdate(DocumentEvent e)", "diff": ["+      int prevPromptPos = promptPos - e.getLength();", "-      else {", "-        // Only update caret if it has fallen behind the prompt.", "-        // (And be careful not to move it during a reset, when the", "-        //  prompt pos is temporarily far greater than the length.)", "-        if ((caretPos < promptPos) && (promptPos <= length)) {", "+      // (Be careful not to move caret during a reset, when the", "+      //  prompt pos is temporarily far greater than the length.)", "+      else if (promptPos <= length) {", "+        if (caretPos < prevPromptPos) {", "+          // Caret has fallen behind prompt, so make it catch up so", "+          //  the new input is visible.", "+        }", "+        else {", "+          // Caret was on or after prompt, so move it right by the size", "+          //  of the insert.", "+          moveTo(caretPos + e.getLength());"]}], "num": 9281}