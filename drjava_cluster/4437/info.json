{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d419465990b71761dc95c7c96ef315f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f9ae47cdedffd46c2acedd6c1cd61d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": "   public Void forBitwiseAssignmentExpressionDoFirst(BitwiseAssignmentExpression that)", "signatureAfterChange": "   public Void forBitwiseAssignmentExpressionDoFirst(BitwiseAssignmentExpression that)", "diff": ["-  }", "-  public Void forBitwiseAssignmentExpressionDoFirst(BitwiseAssignmentExpression that) {", "-    _addAndIgnoreError(\"Bitwise operators cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forShiftAssignmentExpressionDoFirst(ShiftAssignmentExpression that) { return null; }", "+  public Void forBitwiseAssignmentExpressionDoFirst(BitwiseAssignmentExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fdf8286f193dbeb29093c5da5fd4c4d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public Void forShiftAssignmentExpressionDoFirst(ShiftAssignmentExpression that)", "signatureAfterChange": "   public Void forShiftAssignmentExpressionDoFirst(ShiftAssignmentExpression that)", "diff": ["-  /**Bitwise operators are not allowed at any language level...*/", "-  public Void forShiftAssignmentExpressionDoFirst(ShiftAssignmentExpression that) {", "-    _addAndIgnoreError(\"Shift assignment operators cannot be used at any language level\", that);", "-    return null;", "-  }", "+  /** Bitwise operators are allowed in Full Java */", "+  public Void forShiftAssignmentExpressionDoFirst(ShiftAssignmentExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69230850b6665916cc88025597d998a2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public Void forBitwiseNotExpressionDoFirst(ShiftBinaryExpression that)", "signatureAfterChange": "   public Void forBitwiseNotExpressionDoFirst(ShiftBinaryExpression that)", "diff": ["-  }", "-  public Void forBitwiseNotExpressionDoFirst(ShiftBinaryExpression that) {", "-    _addAndIgnoreError(\"Bitwise operators cannot be used at any language level\", that);", "-    return null;", "+  public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that) { return null; }", "+  public Void forBitwiseNotExpressionDoFirst(ShiftBinaryExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a241b089b99c691e6afdf43bf363f1e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public Void forBitwiseBinaryExpressionDoFirst(BitwiseBinaryExpression that)", "signatureAfterChange": "   public Void forBitwiseBinaryExpressionDoFirst(BitwiseBinaryExpression that)", "diff": ["-  }", "-  public Void forBitwiseBinaryExpressionDoFirst(BitwiseBinaryExpression that) {", "-    _addAndIgnoreError(\"Bitwise binary expressions cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forBitwiseAssignmentExpressionDoFirst(BitwiseAssignmentExpression that) { return null; }", "+  public Void forBitwiseBinaryExpressionDoFirst(BitwiseBinaryExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "deccb3cc7c831f253a36a61a70a898e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 65, "signatureBeforeChange": "   public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that)", "signatureAfterChange": "   public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that)", "diff": ["-  }", "-  public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that) {", "-    _addAndIgnoreError(\"Bitwise xor expressions cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forBitwiseOrExpressionDoFirst(BitwiseOrExpression that) { return null; }", "+  public Void forBitwiseXorExpressionDoFirst(BitwiseXorExpression that) { return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94763916cefed00aae88c2c4ead82b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "45afdf26640d7e2a166ed67c249ba6fd207b1d2b", "commitAfterChange": "e7a6b9c5a51a2cf7b9cfb5a10d90c24a3c7c3844", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that)", "signatureAfterChange": "   public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that)", "diff": ["-  }", "-  public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that) {", "-    _addAndIgnoreError(\"Bit shifting operators cannot be used at any language level\", that);", "-    return null;", "-  }", "+  public Void forBitwiseNotExpressionDoFirst(BitwiseNotExpression that) { return null; }", "+  public Void forShiftBinaryExpressionDoFirst(ShiftBinaryExpression that) { return null; }"]}], "num": 4437}