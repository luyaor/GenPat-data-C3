{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68745f7f6866e131e6187f2661a0dd4f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5fdd754493624d6955854a85cb3883", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "09e3a1c7c173cb9a37ed9ad28a39b257011828e6", "commitAfterChange": "bdfa5a75e18c9a41c7b54cf4b050565d5259c993", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private INavigatorItem removeNode(LeafNode toRemove)", "signatureAfterChange": "   private synchronized INavigatorItem removeNode(LeafNode toRemove)", "diff": ["-  private INavigatorItem removeNode(LeafNode toRemove){", "+  private synchronized INavigatorItem removeNode(LeafNode toRemove){", "+    DefaultMutableTreeNode parent = (DefaultMutableTreeNode)toRemove.getParent();", "-   ", "-    Enumeration enumeration = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "-    while(enumeration.hasMoreElements())", "-    {", "-      TreeNode next = (TreeNode)enumeration.nextElement();", "-      if(next.getChildCount() == 0 && ", "-         !_doc2node.containsValue(next) && ", "-         next != _model.getRoot())", "-      {", "-        _model.removeNodeFromParent((MutableTreeNode)next); ", "-        _path2node.removeKey((InnerNode)next);", "-      }", "-    }", "+    ", "+    cleanFolderNode(parent);", "+//    // check all elements of the tree and remove incomplete items", "+//    Enumeration enumeration = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "+//    while(enumeration.hasMoreElements()) {", "+//      TreeNode next = (TreeNode)enumeration.nextElement();", "+//      if(next.getChildCount() == 0 &&", "+//         !_doc2node.containsValue(next) && ", "+//         next != _model.getRoot())", "+//      {", "+//        _model.removeNodeFromParent((MutableTreeNode)next);", "+//        _path2node.removeKey((InnerNode)next);", "+//      }", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b2f8d663ee95885a8fbb78e73c64c1a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "12c7c1796a51c2e7ab4bd2410636b833aaf2c7dd", "commitAfterChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private synchronized INavigatorItem removeNode(LeafNode toRemove)", "signatureAfterChange": "   private INavigatorItem removeNode(LeafNode toRemove)", "diff": ["-   */", "-  private synchronized INavigatorItem removeNode(LeafNode toRemove){", "+  /** Only takes in nodes that have a inavigatoritem as their object */", "+  private INavigatorItem removeNode(LeafNode toRemove){", "-//    // check all elements of the tree and remove incomplete items", "-//    Enumeration enumeration = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "-//    while(enumeration.hasMoreElements()) {", "-//      TreeNode next = (TreeNode)enumeration.nextElement();", "-//      if(next.getChildCount() == 0 &&", "-//         !_doc2node.containsValue(next) && ", "-//         next != _model.getRoot())", "-//      {", "-//        _model.removeNodeFromParent((MutableTreeNode)next);", "-//        _path2node.removeKey((InnerNode)next);", "-//      }", "-//    }", "-   ", "-  ", "-    if(_nonProjRoot.getChildCount() == 0)", "-    {", "-      _hasnonprojfilesopen = false;", "-    }", "+    //    // check all elements of the tree and remove incomplete items", "+    //    Enumeration enumeration = ((DefaultMutableTreeNode)_model.getRoot()).depthFirstEnumeration();", "+    //    while(enumeration.hasMoreElements()) {", "+    //      TreeNode next = (TreeNode)enumeration.nextElement();", "+    //      if(next.getChildCount() == 0 &&", "+    //         !_doc2node.containsValue(next) && ", "+    //         next != _model.getRoot())", "+    //      {", "+    //        _model.removeNodeFromParent((MutableTreeNode)next);", "+    //        _path2node.removeKey((InnerNode)next);", "+    //      }", "+    //    }", "+    ", "+    ", "+    if(_nonProjRoot.getChildCount() == 0) _hasNonProjFilesOpen = false;"]}], "num": 1424}