{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5be02f0c0ece3aef9da940f8673e73c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2d759616cae5fb9394f0e9fff1a967", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": "   protected void updatePanel()", "signatureAfterChange": "   protected void updatePanel()", "diff": ["-//    Enumeration docNodes = _rootNode.children();", "-//    while (docNodes.hasMoreElements()) {", "-//      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "-//      // Find the correct start offset node for this region", "-//      Enumeration regionNodes = docNode.children();", "-//      while (regionNodes.hasMoreElements()) {", "-//        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "-//        _regTreeModel.nodeChanged(regionNode);", "-//      }", "-//      _regTreeModel.nodeChanged(docNode);  // file name may have changed", "-//    }", "-    ", "-    revalidate();", "-    repaint();", "-    _lastUpdateTime = System.currentTimeMillis();", "-    _frame.resetChanged();", "+    synchronized(_updateLock) { ", "+      _updatePending = false; ", "+      _lastChangeTime = _frame.getLastChangeTime();", "+    }", "+    revalidate();", "+//    traversePanel();", "+    repaint();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c619e3f37bf879e3d7f1c65de25d6ab1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 29, "signatureBeforeChange": "      protected void traversePanel()", "signatureAfterChange": "   public void reload(R startRegion, R endRegion)", "diff": ["-  protected void traversePanel() {", "-    Enumeration docNodes = _rootNode.children();", "-    while (docNodes.hasMoreElements()) {", "-      DefaultMutableTreeNode docNode = (DefaultMutableTreeNode) docNodes.nextElement();          ", "-      // Find the correct start offset node for this region", "-      Enumeration regionNodes = docNode.children();", "-      while (regionNodes.hasMoreElements()) {", "-        DefaultMutableTreeNode regionNode = (DefaultMutableTreeNode) regionNodes.nextElement();", "-        _regTreeModel.reload(regionNode);", "-      }", "-      _regTreeModel.reload(docNode);  // file name may have changed", "-    }", "-  }", "+  // Reloads regions between starting and endRegion inclusive.  Assumes startRegion, endRegion are in the same document.", "+  public void reload(R startRegion, R endRegion) {", "+    SortedSet<R> tail = _regionManager.getTailSet(startRegion);", "+    Iterator<R> iterator = tail.iterator();", "+    ", "+    while (iterator.hasNext()) {", "+      R r = iterator.next();", "+      if (r.compareTo(endRegion) > 0) break; ", "+      System.err.println(\"Reloading region '\" + r.getString() + \"'\");", "+      _regTreeModel.reload(getNode(r));", "+    }", "+  }"]}], "num": 30672}