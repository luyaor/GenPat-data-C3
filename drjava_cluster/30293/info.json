{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f2be5fb212cdb65d4d5d8b14f6b44b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e7968866e988515a9aedbd68b484bb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result, TypeData value_result)", "signatureAfterChange": "   public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result,                                                    TypeData value_result)", "diff": ["-   */", "-  public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result, TypeData value_result) {", "+    */", "+  public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result, ", "+                                                  TypeData value_result) {", "-    if (name_result.getSymbolData().isAssignableTo(string, LanguageLevelConverter.OPT.javaVersion())) {", "+    if (name_result.getSymbolData().isAssignableTo(string, JAVA_VERSION)) {", "-      assertInstanceType(name_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, but you have specified a type name\", that);", "-      assertInstanceType(value_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, but you have specified a type name\", that);", "+      assertInstanceType(name_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "+                         \"but you have specified a type name\", that);", "+      assertInstanceType(value_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "+                         \"but you have specified a type name\", that);", "-      if (!name_result.getSymbolData().isNumberType(LanguageLevelConverter.OPT.javaVersion()) ||", "-          !value_result.getSymbolData().isNumberType(LanguageLevelConverter.OPT.javaVersion())) {", "-        _addError(\"The arguments to the Plus Assignment Operator (+=) must either include an instance of a String or both be numbers.  You have specified arguments of type \" + name_result.getName() + \" and \" + value_result.getName(), that);", "+      if (!name_result.getSymbolData().isNumberType(JAVA_VERSION) ||", "+          !value_result.getSymbolData().isNumberType(JAVA_VERSION)) {", "+        _addError(\"The arguments to the Plus Assignment Operator (+=) must either include an instance of a String \" + ", "+                  \"or both be numbers.  You have specified arguments of type \" + name_result.getName() + \" and \" + ", "+                  value_result.getName(), that);", "-      else if (!value_result.getSymbolData().isAssignableTo(name_result.getSymbolData(), LanguageLevelConverter.OPT.javaVersion())) {", "-        _addError(\"You cannot increment something of type \" + name_result.getName() + \" with something of type \" + value_result.getName(), that);", "+      else if (! value_result.getSymbolData().isAssignableTo(name_result.getSymbolData(), ", "+                                                            JAVA_VERSION)) {", "+        _addError(\"You cannot increment something of type \" + name_result.getName() + \" with something of type \" + ", "+                  value_result.getName(), that);", "-        assertInstanceType(name_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, but you have specified a type name\", that);", "-        assertInstanceType(value_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, but you have specified a type name\", that);", "+        assertInstanceType(name_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "+                           \"but you have specified a type name\", that);", "+        assertInstanceType(value_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "+                           \"but you have specified a type name\", that);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3bff5272923dcc1a29a1756f63b526d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result,                                                    TypeData value_result)", "signatureAfterChange": "   public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData nameRes,                                                    TypeData valueRes)", "diff": ["-  public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData name_result, ", "-                                                  TypeData value_result) {", "-    if (name_result == null || value_result == null) {return null;}", "+  public TypeData forPlusAssignmentExpressionOnly(PlusAssignmentExpression that, TypeData nameRes, ", "+                                                  TypeData valueRes) {", "+    if (nameRes == null || valueRes == null) {return null;}", "-    if (! assertFound(name_result, that) || !assertFound(value_result, that)) {", "+    if (! assertFound(nameRes, that) || !assertFound(valueRes, that)) {", "-    if (name_result.getSymbolData().isAssignableTo(string, JAVA_VERSION)) {", "+    if (nameRes.getSymbolData().isAssignableTo(string, JAVA_VERSION)) {", "-      assertInstanceType(name_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "+      assertInstanceType(nameRes, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "-      assertInstanceType(value_result, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "+      assertInstanceType(valueRes, \"The arguments to a Plus Assignment Operator (+=) must both be instances, \" + ", "-      if (!name_result.getSymbolData().isNumberType(JAVA_VERSION) ||", "-          !value_result.getSymbolData().isNumberType(JAVA_VERSION)) {", "+      if (!nameRes.getSymbolData().isNumberType(JAVA_VERSION) ||", "+          !valueRes.getSymbolData().isNumberType(JAVA_VERSION)) {", "-                  \"or both be numbers.  You have specified arguments of type \" + name_result.getName() + \" and \" + ", "-                  value_result.getName(), that);", "+                  \"or both be numbers.  You have specified arguments of type \" + nameRes.getName() + \" and \" + ", "+                  valueRes.getName(), that);", "-      else if (! value_result.getSymbolData().isAssignableTo(name_result.getSymbolData(), ", "+      else if (! valueRes.getSymbolData().isAssignableTo(nameRes.getSymbolData(), ", "-        _addError(\"You cannot increment something of type \" + name_result.getName() + \" with something of type \" + ", "-                  value_result.getName(), that);", "+        _addError(\"You cannot increment something of type \" + nameRes.getName() + \" with something of type \" + ", "+                  valueRes.getName(), that);", "-        assertInstanceType(name_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "+        assertInstanceType(nameRes, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "-        assertInstanceType(value_result, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "+        assertInstanceType(valueRes, \"The arguments to the Plus Assignment Operator (+=) must both be instances, \" + ", "-      return name_result.getInstanceData();", "+      return nameRes.getInstanceData();"]}], "num": 30293}