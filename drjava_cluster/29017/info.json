{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c6c1a8a17d982c87438e44669622c0fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4030199f7b16fd47a5de7d01e49f746b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testCheckDifferentReturnTypes()", "signatureAfterChange": "          public void testCheckDifferentReturnTypes()", "diff": ["-      MethodDef mDef = new ConcreteMethodDef(JExprParser.NO_SOURCE_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                             new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "-                                             new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[] {new ValueReturnStatement(JExprParser.NO_SOURCE_INFO, new IntegerLiteral(JExprParser.NO_SOURCE_INFO, 76))}));", "+      MethodDef mDef = new ConcreteMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                             new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "+                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 76))}));", "-      mDef = new AbstractMethodDef(JExprParser.NO_SOURCE_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                   new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);", "+      mDef = new AbstractMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                   new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ded008a947e92dc00d7c332a20e5da", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testCheckDifferentReturnTypes()", "signatureAfterChange": "          public void testCheckDifferentReturnTypes()", "diff": ["-      MethodDef mDef = new ConcreteMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                             new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "-                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NO_INFO, new IntegerLiteral(SourceInfo.NO_INFO, 76))}));", "+      MethodDef mDef = new ConcreteMethodDef(SourceInfo.NONE, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                             new Word(SourceInfo.NONE, \"methodName\"), new FormalParameter[0], new ReferenceType[0], ", "+                                             new BracedBody(SourceInfo.NONE, new BodyItemI[] {new ValueReturnStatement(SourceInfo.NONE, new IntegerLiteral(SourceInfo.NONE, 76))}));", "-      mDef = new AbstractMethodDef(SourceInfo.NO_INFO, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                   new Word(SourceInfo.NO_INFO, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);", "+      mDef = new AbstractMethodDef(SourceInfo.NONE, _publicMav, new TypeParameter[0], new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                   new Word(SourceInfo.NONE, \"methodName\"), new FormalParameter[0], new ReferenceType[0]);"]}], "num": 29017}