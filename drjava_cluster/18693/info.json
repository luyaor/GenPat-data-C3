{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6b8aa3cad3a8ddad3a552f54f8979d6e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fa0deef4518618ad6045ade598a0759", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 654, "methodNumberAfterChange": 645, "signatureBeforeChange": "          public void interactionStarted()", "signatureAfterChange": "          public void interactionStarted()", "diff": ["-      Utilities.invokeLater(new Runnable() {", "-        public void run() {", "-          _disableInteractionsPane();", "-          _runAction.setEnabled(false);", "-          _runProjectAction.setEnabled(false);", "-        }", "-      });", "+//      Utilities.invokeLater(new Runnable() {", "+//        public void run() {", "+      _disableInteractionsPane();", "+      _runAction.setEnabled(false);", "+      _runProjectAction.setEnabled(false);", "+//        }", "+//      });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e230121506bdb70b3e901e331243f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 152, "signatureBeforeChange": "   protected void createModel()", "signatureAfterChange": "          public void logCompileStart()", "diff": ["-  /** Instantiates the GlobalModel to be used in the test cases. */", "-  protected void createModel() {", "-    //_model = new DefaultGlobalModel(_originalModel);", "-    _model = new TestGlobalModel();", "-", "-    // Wait until it has connected", "-    _model._jvm.ensureInterpreterConnected();", "-    // Wait until all pending events have finished", "+    ", "+    public void logCompileStart() { ", "+      logInteractionStart();", "+      _compileDone = false; ", "+    }"]}], "num": 18693}