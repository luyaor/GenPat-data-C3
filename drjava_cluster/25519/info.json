{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "63f81a0655729dc1da745aed80f42553", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a040b661d87aa50c599d0a2708c161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public static Runnable1<Object> promote(final Runnable r)", "signatureAfterChange": "   public static GeneralRunnable promote(Runnable r)", "diff": ["-  /** @return A {@code Runnable1} equivalent to {@code r} with an ignored argument */", "-  public static Runnable1<Object> promote(final Runnable r) {", "-    return new Runnable1<Object>() {", "-      public void run(Object arg) { r.run(); }", "-    };", "+  /** Create a {@code GeneralRunnable} equivalent to {@code r} that ignores any arguments. */", "+  public static GeneralRunnable promote(Runnable r) { return new PromotedGeneralRunnable(r); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32764f6550ffc63f97f0856e16a0c04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 117, "signatureBeforeChange": "   public static Predicate<File> asPredicate(final FileFilter filter)", "signatureAfterChange": "   public static FilePredicate asFilePredicate(FileFilter filter)", "diff": ["-  public static Predicate<File> asPredicate(final FileFilter filter) {", "-    return new Predicate<File>() {", "-      public Boolean value(File f) { return filter.accept(f); }", "-    };", "+  public static FilePredicate asFilePredicate(FileFilter filter) {", "+    return new FileFilterFilePredicate(filter);", "+  }"]}], "num": 25519}