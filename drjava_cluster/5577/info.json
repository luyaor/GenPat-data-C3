{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc42004ac155209077ab7d88945aae9d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c26d29f450283e6b404f2f0cbcc25d4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ProjectMenuTest.java", "commitBeforeChange": "fb93f82276123a18905a2159a25d73d2bbcc047e", "commitAfterChange": "532a8e4a236c1416b1be3b1779f05fbf9bbd77fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public void testSaveProject() throws IOException, MalformedProjectFileException", "signatureAfterChange": "      public void testSaveProject() throws IOException, MalformedProjectFileException", "diff": ["-    assertEquals(\"Wrong file name,\", _file1, src[0]);", "-    assertEquals(\"Wrong aux file\", _auxFile, aux[0]);", "+    assertEquals(\"Wrong file name\", _file1.getCanonicalPath(), src[0].getCanonicalPath());", "+    assertEquals(\"Wrong aux file\", _auxFile.getCanonicalPath(), aux[0].getCanonicalPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9085ebbd1d620bb53bbedbbca19c5de8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/OptionMapLoaderTest.java", "commitBeforeChange": "85538cb484722f3ee8b8f52d4f19defc02bd67d5", "commitAfterChange": "ec727abc662388138ad4bf94694974ef5e13db3c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void checkSet(String set, Integer indent, String javac, String jsr, String col, int size) throws IOException", "signatureAfterChange": "      private void checkSet(String set, Integer indent, File javac, File jsr, File col, int size) throws IOException", "diff": ["+  ", "+  private void checkSet(String set, Integer indent, File javac, File jsr, File col, int size) throws IOException {", "+    StringInputStream is = new StringInputStream(set);", "+    OptionMapLoader loader = new OptionMapLoader(is);", "+    DefaultOptionMap map = new DefaultOptionMap();", "+    loader.loadInto(map);", "+    assertEquals(\"indent (integer) option\",", "+                 map.getOption(INDENT_LEVEL),indent);", "+    assertEquals(\"JAVAC\", map.getOption(JAVAC_LOCATION),javac.getAbsoluteFile());", "+    assertEquals(\"JSR14\", map.getOption(JSR14_LOCATION),jsr.getAbsoluteFile());", "+    assertEquals(\"COLLECTIONS\", map.getOption(JSR14_COLLECTIONSPATH),col.getAbsoluteFile());", "+    assertEquals(\"size of extra-classpath vector\",", "+                 new Integer(size),new Integer(map.getOption(EXTRA_CLASSPATH).size()));", "+  }", "-", "-    private void checkSet(String set, Integer indent, String javac, String jsr, String col, int size) throws IOException {", "-        StringInputStream is = new StringInputStream(set);", "-\tOptionMapLoader loader = new OptionMapLoader(is);", "-\tDefaultOptionMap map = new DefaultOptionMap();", "-\tloader.loadInto(map);", "-\tassertEquals(\"indent (integer) option\",", "-\t\t     map.getOption(INDENT_LEVEL),indent);", "-\tassertEquals(map.getOption(JAVAC_LOCATION),javac);", "-\tassertEquals(map.getOption(JSR14_LOCATION),jsr);", "-\tassertEquals(map.getOption(JSR14_COLLECTIONSPATH),col);", "-\tassertEquals(\"size of extra-classpath vector\",", "-                     new Integer(size),new Integer(map.getOption(EXTRA_CLASSPATH).size()));", "-    }"]}], "num": 5577}