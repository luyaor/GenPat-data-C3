{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f00fa4c02022555eeaef813feaf4e9ab", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a543e5bcc8d6e60fdcb968c549229a5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAbortsIfAnyUnsaved() throws Exception", "diff": ["-  public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException {", "+  public void testCompileAbortsIfAnyUnsaved() throws Exception {", "-    TestListener listener = new TestListener() {", "+    CompileShouldFailListener listener = new CompileShouldFailListener() {", "-    doc.startCompile();", "+    listener.compile(doc);", "+    _log.log(\"testCompileAbortsIfAnyUnsaved complete\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a4eaf8ce129a11d2532d24f41419bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException", "signatureAfterChange": "   public void testCompileAbortsIfAnyUnsaved() throws Exception", "diff": ["-  public void testCompileAbortsIfAnyUnsaved() throws BadLocationException, IOException {", "+  public void testCompileAbortsIfAnyUnsaved() throws Exception {", "-    TestListener listener = new TestListener() {", "+    CompileShouldFailListener listener = new CompileShouldFailListener() {", "-    doc.startCompile();", "+    listener.compile(doc);", "+    _log.log(\"testCompileAbortsIfAnyUnsaved complete\");"]}], "num": 24092}