{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87013991cee73437beb78cb40ba9c237", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cde45e86919b8c1fda74773e7a2ddbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "e33f4d6f84850cd296a0da931db2c5376721147d", "commitAfterChange": "c7bde15c7f9b451331f476bd5459c183a6ad8b94", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testResetConsole()     throws BadLocationException, InterruptedException", "signatureAfterChange": "   public void testResetConsole()     throws BadLocationException, InterruptedException", "diff": ["-      public void interactionEnded() {}", "+      public void interactionEnded() {", "+        synchronized(this) {", "+          interactionEndCount++;", "+          this.notify();", "+        }", "+      }", "-    interpretIgnoreResult(\"System.out.print(\\\"a\\\");\");", "+    synchronized(listener) {", "+      interpretIgnoreResult(\"System.out.print(\\\"a\\\");\");", "+      listener.wait();  // notified on interactionEnded", "+    }", "+    /*", "-", "+    */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2414f2591069851fd33413b622bc5a8d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/SimpleDocumentRegion.java", "commitBeforeChange": "ceeb43b0cd71a090481b6c99329a86882de7136d", "commitAfterChange": "229b97efe43c666e9a5a8a6450aaf594c37171c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean equals(Object other)", "signatureAfterChange": "   public final boolean equals(Object o)", "diff": ["+    */", "+  public final boolean equals(Object o) {", "+    if (o == null || ! (o instanceof SimpleDocumentRegion)) return false;", "+    SimpleDocumentRegion r = (SimpleDocumentRegion) o;", "+    return _doc == r._doc & getStartOffset() == r.getStartOffset() && getEndOffset() == r.getEndOffset();", "+  }", "-  /** @return true if the specified region is equal to this one. */", "-  public boolean equals(Object other) {", "-    if (other == null || other.getClass() != getClass()) return false;", "-    SimpleDocumentRegion o = (SimpleDocumentRegion) other;", "-    return equals(_doc, o._doc) && equals(_file, o._file) &&", "-            _startPos.getOffset() == o._startPos.getOffset() &&", "-            _endPos.getOffset() == o._endPos.getOffset();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d653eb95ff077cf4186ca5237802d62f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "signatureAfterChange": "   public void testUndoAndRedoAfterMultipleLineCommentAndUncomment()     throws BadLocationException", "diff": ["-    assertEquals(\"insertion\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"insertion\",text, _defModel.getText());", "-    assertEquals(\"commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"commenting\",commented, _defModel.getText());", "-    assertEquals(\"undo commenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo commenting\",text, _defModel.getText());", "-    assertEquals(\"redo commenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo commenting\",commented, _defModel.getText());", "-    assertEquals(\"uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"uncommenting\",text, _defModel.getText());", "-    assertEquals(\"undo uncommenting\",commented, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"undo uncommenting\",commented, _defModel.getText());", "-    assertEquals(\"redo uncommenting\",text, _defModel.getText(0,_defModel.getLength()));", "+    assertEquals(\"redo uncommenting\",text, _defModel.getText());"]}], "num": 30398}