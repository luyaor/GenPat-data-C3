{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3a80a08af5543087122397359a1e08c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "764449c8b02bdae7dcf4e6811f5c6f84", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TreeCompiler.java", "commitBeforeChange": "12b972c6351f6122675c003ccbc59ef481c89cda", "commitAfterChange": "b10686f6739b4554b283179f3edc2b09ee48a09a", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "          private Object evaluateBlock(BlockStatement block, RuntimeBindings bindings) throws Throwable", "signatureAfterChange": "          private Object evaluateBlock(BlockStatement block, Class<?> returnType,                                  RuntimeBindings bindings) throws Throwable", "diff": ["-    private Object evaluateBlock(BlockStatement block, RuntimeBindings bindings) throws Throwable {", "+    private Object evaluateBlock(BlockStatement block, Class<?> returnType,", "+                                 RuntimeBindings bindings) throws Throwable {", "-        return null;", "+        // if we didn't return, produce null or a zero primitive", "+        return SymbolUtil.initialValue(returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf8ff44f08ced299aa41e9d49f34bc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-windows/edu/rice/cs/drjava/platform/WindowsPlatform.java", "commitBeforeChange": "e52121b9ddfdfad00cd9b2bb1ac04c508b2ab7f5", "commitAfterChange": "c49bfac6b5c39aa536d2d1420b6c956dfa5557c6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private boolean registerFileExtension(String extension, String progid, String perceived, String mime)", "signatureAfterChange": "   private boolean registerFileExtension(String extension, String progid, String fileDesc, String perceived, String mime)", "diff": ["-  private boolean registerFileExtension(String extension, String progid, String perceived, String mime) {", "+  private boolean registerFileExtension(String extension, String progid, String fileDesc, String perceived, String mime) {", "-      WindowsRegistry.setKey(WindowsRegistry.HKEY_CLASSES_ROOT, progid, \"\", \"DrJava project file\");", "+      WindowsRegistry.setKey(WindowsRegistry.HKEY_CLASSES_ROOT, progid, \"\", fileDesc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3320b74b12c7a39dbd1678169f9fb6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/TypeCheckerTest.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      private Class _checkBinaryExpression(String text, String leftExpected, String rightExpected)      throws ExceptionReturnedException", "signatureAfterChange": "   private Class _checkBinaryExpression(String text,                                         String leftExpected,                                         String rightExpected)      throws ExceptionReturnedException", "diff": ["-  private Class _checkBinaryExpression(String text, String leftExpected, String rightExpected) ", "+   */", "+  private Class _checkBinaryExpression(String text, ", "+                                       String leftExpected, ", "+                                       String rightExpected) ", "-    ", "-    _interpreter.interpret(\"int x; Integer X; Boolean B; boolean b; \"+ text);", "-    ", "+    _interpreter.interpret(text);"]}], "num": 6040}