{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ea53264cb961b8a69b0c357ace47f64", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "049b3d544e8c25e8daee7bd5646804ab", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "d57a4715eeda5394b496008be220f6252b47b950", "commitAfterChange": "ac02f569f5916c295bec9f11458dcf6db5964244", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["-    getBrowserHistoryManager().clearRegions();", "+    getBrowserHistoryManager().clearBrowserRegions();", "-    for (final DocumentRegion bm: ir.getBookmarks ()) {", "-      final OpenDefinitionsDocument odd = getDocumentForFile(bm.getFile());", "-      getBookmarkManager().addRegion(new SimpleDocumentRegion(odd, odd.getFile(), bm.getStartOffset(), bm.getEndOffset()));", "+    try {", "+      for (final DocumentRegion bm: ir.getBookmarks()) {", "+        final OpenDefinitionsDocument odd = getDocumentForFile(bm.getFile());", "+        final Position startPos = odd.createPosition(bm.getStartOffset());", "+        final Position endPos = odd.createPosition(bm.getEndOffset());", "+        getBookmarkManager().addRegion(new SimpleDocumentRegion(odd, startPos, endPos));", "+      }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "-      projFiles.add(f);", "+      if (f.isActive()) active = f;", "+      else projFiles.add(f);  // add to projFiles unless active", "-      projFiles.add(f);", "+      if (f.isActive()) active = f;", "+      else projFiles.add(f);  // add to projFiles unless active", "-    if (active != null) projFiles.add(active);", "+    if (active != null) projFiles.add(active);   ", "-    //Set active document from project file", "+//    //Set active document from project file", "-    //OpenDefinitionsDocument.getCanonicalPath()", "-    //search for active document within opendefdocs", "+//    OpenDefinitionsDocument.getCanonicalPath()", "+////  Search for active document within opendefdocs"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb238e8a70f1573d72201d9e09413483", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0d5df6cd7df2851aa927f5b2af952c4c284e3a43", "commitAfterChange": "d809f0c0466409ce32ae91b0868974eef6e3d031", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "signatureAfterChange": "   private void _loadProject(final ProjectFileIR ir) throws IOException", "diff": ["+    ArrayList<DocumentRegion> expiredBookmarks = new ArrayList<DocumentRegion>();", "+    ArrayList<Breakpoint> expiredBreakpoints = new ArrayList<Breakpoint>();", "-      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate (f.lastModified());", "+      if (f.lastModified() > f.getSavedModDate()) {", "+        for (DocumentRegion r: getBookmarkManager().getRegions())", "+          if (r.getFile().equals( f )) expiredBookmarks.add( r );", "+        for (Breakpoint r: getBreakpointManager().getRegions())", "+          if (r.getFile().equals( f )) expiredBreakpoints.add( r );", "+        f.setSavedModDate (f.lastModified());", "+      }", "-      if (f.lastModified() > f.getSavedModDate()) f.setSavedModDate (f.lastModified());", "+      if (f.lastModified() > f.getSavedModDate()) {", "+        for (DocumentRegion r: getBookmarkManager().getRegions())", "+          if (r.getFile().equals( f )) expiredBookmarks.add( r );", "+        for (Breakpoint r: getBreakpointManager().getRegions())", "+          if (r.getFile().equals( f )) expiredBreakpoints.add( r );", "+        f.setSavedModDate (f.lastModified());", "+      }", "+    // Remove bookmarks and breakpoints for files that were modified outside of DrJava", "+    for (DocumentRegion r: expiredBookmarks) getBookmarkManager().removeRegion( r );", "+    for (Breakpoint r: expiredBreakpoints) getBreakpointManager().removeRegion( r );", "+    "]}], "num": 14768}