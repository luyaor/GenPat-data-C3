{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df12756eb3fb1be5b309f29d55c6ebb0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f65f83864b0383b8f352adba316dd194", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "\r   boolean isFloatType(JavaVersion version)", "signatureAfterChange": "   boolean isFloatType(JavaVersion version)", "diff": ["-  /**@return true if this is a primitive char or a Character with autoboxing enabled*/\r", "-  boolean isFloatType(JavaVersion version) {\r", "-    return (this==FLOAT_TYPE) || (this.getName().equals(\"java.lang.Float\") && LanguageLevelConverter.versionSupportsAutoboxing(version));//Double.valueOf(System.getProperty(\"java.specification.version\")) >= 1.5);\r", "-  }\r", "+  /**@return true if this is a primitive char or a Character with autoboxing enabled*/", "+  boolean isFloatType(JavaVersion version) {", "+    return (this==FLOAT_TYPE) || (getName().equals(\"java.lang.Float\") && ", "+                                  LanguageLevelConverter.versionSupportsAutoboxing(version));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbed56e45d2057b9ccbb1ab2a41b75aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "   boolean isIntType(JavaVersion version)", "signatureAfterChange": "   boolean isIntType(JavaVersion version)", "diff": ["-  /**@return true if this is a primitive int or an Integer with autoboxing enabled*/", "-  boolean isIntType(JavaVersion version) {", "-    return (this==INT_TYPE) || (this.getName().equals(\"java.lang.Integer\") && LanguageLevelConverter.versionSupportsAutoboxing(version));//Double.valueOf(System.getProperty(\"java.specification.version\")) >= 1.5);", "-  }", "+  /**@return true if this is a primitive int or an Integer with autoboxing enabled*/", "+  boolean isIntType(JavaVersion version) {", "+    return this==INT_TYPE || (getName().equals(\"java.lang.Integer\") && ", "+                              LanguageLevelConverter.versionSupportsAutoboxing(version));", "+  }"]}], "num": 28839}