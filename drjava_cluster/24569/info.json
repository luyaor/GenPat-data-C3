{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "705731358ca01fe555b3bd1c9b5a8f90", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a79fdccb03f6aad33b9053b9a95d9bd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/MutableFileProperty.java", "commitBeforeChange": "1a21d93c6026fc975d9f1a1bda2fbd55942a0154", "commitAfterChange": "7cbabe0b7b5f77b58eac69afdca15c16ef2f6a9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r   public MutableFileProperty(String name, File initialFile, String help)", "signatureAfterChange": "   public MutableFileProperty(String name, File initialFile, String help)", "diff": ["-  /** Create an eager file property. */\r", "-  public MutableFileProperty(String name, File initialFile, String help) {\r", "-    super(name,new Lambda<File,Void>() { public File apply(Void v) { return null; } }, help);\r", "-    // cannot access _fileValue before super constructor has been called, so assign it again after the call\r", "-    _getFile = new Lambda<File,Void>() { public File apply(Void v) { return _fileValue; } };\r", "-    _fileValue = initialFile;\r", "-    _value = \"\";\r", "-    resetAttributes();\r", "-  }\r", "+  /** Create an eager file property. */", "+  public MutableFileProperty(String name, File initialFile, String help) {", "+    super(name,new Thunk<File>() { public File value() { return null; } }, help);", "+    // cannot access _fileValue before super constructor has been called, so assign it again after the call", "+    _getFile = new Thunk<File>() { public File value() { return _fileValue; } };", "+    _fileValue = initialFile;", "+    _value = \"\";", "+    resetAttributes();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f792b7849252e00754309be8f00f2b45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "6f501e5fca95aec34d7430b68d9d987e33ec6129", "commitAfterChange": "f175bd951be0706c1171fa45b387f5428c58ddb3", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": "     public Object value(Lambda<Object, ?> lambda, Object arg)", "signatureAfterChange": "     public R value(Thunk<? extends R> t)", "diff": ["+    private ThunkValueLambda() {}", "+    public R value(Thunk<? extends R> t) { return t.value(); }", "-    public Object value(Lambda<Object, ?> lambda, Object arg) { return lambda.value(arg); }"]}], "num": 24569}