{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54fa9f69751627fb66537ff1c5f6a302", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c734936321baf406647a150df9d166a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileIOTest.java", "commitBeforeChange": "80b5fb6a38e815634acd75afbaca24da4d11be21", "commitAfterChange": "dea430b985112dc86310f3cdaf8b15a8dea3799c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "signatureAfterChange": "   public void testClassFileSynchronizationAfterRename() throws BadLocationException, IOException, IllegalStateException,     InterruptedException", "diff": ["-    assertTrue(\"Class file should not exist before compile\",", "-               doc.getCachedClassFile() == null);", "-    assertTrue(\"should not be in sync before compile\",", "-               !doc.checkIfClassFileInSync());", "+    System.err.println(\"cached class file is \" + doc.getCachedClassFile());", "+    assertTrue(\"Class file should not exist before compile\", doc.getCachedClassFile() == FileOps.NULL_FILE);", "+    assertTrue(\"should not be in sync before compile\", !doc.checkIfClassFileInSync());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38d7f85a9198be04979fc9573468ecb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "d0727a77251489c271609794ef5d58d9b3aab593", "commitAfterChange": "e782d4da2d7bff038017015047af677bda357a17", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testOutOfSyncAfterModification()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOutOfSyncAfterModification()     throws BadLocationException, IOException", "diff": ["-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync before compile\", ", "+               !doc.checkIfClassFileInSync());", "-    assertTrue(doc.checkIfClassFileInSync());", "+    assertTrue(\"should be in sync after compile\", ", "+               doc.checkIfClassFileInSync());", "-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync after modification\",", "+               !doc.checkIfClassFileInSync());", "+", "+    // Have to wait 1 second so file will have a different timestamp", "+    try {", "+      Thread.sleep(1000);", "+    }", "+    catch (InterruptedException ie) {}", "+", "-    assertTrue(!doc.checkIfClassFileInSync());", "+    assertTrue(\"should not be in sync after save\", ", "+               !doc.checkIfClassFileInSync());"]}], "num": 21440}