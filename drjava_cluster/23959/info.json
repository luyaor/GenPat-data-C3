{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be2bea20d1fd833a797501310f38f337", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c03a957d31bcf947bb946d7a1213c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "commitAfterChange": "d61b8181e3991377c3e72e5da1d438e3d26d3479", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["+   */", "+  public boolean isOnMatch() {", "+    String findWord = _findWord;", "+    int len, off;", "+    len = findWord.length();", "+    if (!_searchBackwards) {", "+      off = _current.getOffset() - len;", "+    }", "+    else {", "+      off = _current.getOffset();", "+    if (off < 0) {", "+      return false;", "+    }", "+    else if (off + len > _doc.getLength()) {", "+      return false;", "+    try {", "+      String matchSpace = _doc.getText(off, len);", "+      if (!_matchCase) {", "+        matchSpace = matchSpace.toLowerCase();", "+        findWord = findWord.toLowerCase();", "+      }", "+      return matchSpace.equals(findWord);", "+    catch (BadLocationException e) {", "+      throw new UnexpectedException(e);", "+  }", "-     */", "-    public boolean isOnMatch() {", "-\tString findWord = this._findWord;", "-\tint len, off;", "-\tlen = findWord.length();", "-\tif(!_searchBackwards) {", "-\t    off = _current.getOffset() - len;", "-\t} else {", "-\t    off = _current.getOffset();", "-\t}", "-", "-\tif(off < 0){", "-\t    return false;", "-\t} else if (off + len > _doc.getLength()){", "-\t    return false;", "-\t}", "-", "-\ttry {", "-\t    String matchSpace = _doc.getText(off, len);", "-\t    if (!_matchCase){", "-\t\tmatchSpace = matchSpace.toLowerCase();", "-\t\tfindWord = findWord.toLowerCase();", "-\t    }", "-\t    return matchSpace.equals(findWord);", "-\t}", "-\tcatch (BadLocationException e) {", "-\t    throw new UnexpectedException(e);", "-\t}", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cfa984f3a5716bdb71130f6d30bba6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "cd663e9bf0c95c5bb5b12db38fbcd366660d665e", "commitAfterChange": "22cb21cbc806aa257284ccfb5bed593a93cc9671", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "   public boolean isOnMatch()", "diff": ["-    int len = _findWord.length();", "-    int off = _current.getOffset();", "-    if(off < len) return false;", "+    String findWord = this._findWord;", "+    int len, off;", "+    len = findWord.length();", "+    if(!_searchBackwards) {", "+      off = _current.getOffset() - len;", "+    } else {", "+      off = _current.getOffset();", "+    }", "+", "+    if(off < 0){", "+      return false;", "+    } else if (off + len > _doc.getLength()){", "+      return false;", "+    }", "+", "-      String matchSpace = _doc.getText(off-len, len);", "-      if (_matchCase)", "-        return matchSpace.equals(_findWord);", "-      else", "-        return matchSpace.toLowerCase().equals(_findWord.toLowerCase());", "+      String matchSpace = _doc.getText(off, len);", "+      if (!_matchCase){", "+        matchSpace = matchSpace.toLowerCase();", "+        findWord = findWord.toLowerCase();", "+      }", "+      return matchSpace.equals(findWord);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7f3b35c6169d10e35362c9b48c715f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "a2b28a9213fa3cc634db7fda88e14ebb0a103974", "commitAfterChange": "56df485f00337d373f1f0b94fc58f7c7b8b714d4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public boolean isOnMatch()", "signatureAfterChange": "     public boolean isOnMatch()", "diff": ["-   */", "-  public boolean isOnMatch() {", "-    String findWord = this._findWord;", "-    int len, off;", "-    len = findWord.length();", "-    if(!_searchBackwards) {", "-      off = _current.getOffset() - len;", "-    } else {", "-      off = _current.getOffset();", "-    if(off < 0){", "-      return false;", "-    } else if (off + len > _doc.getLength()){", "-      return false;", "-    try {", "-      String matchSpace = _doc.getText(off, len);", "-      if (!_matchCase){", "-        matchSpace = matchSpace.toLowerCase();", "-        findWord = findWord.toLowerCase();", "-      }", "-      return matchSpace.equals(findWord);", "-    }", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "-  }", "+    */", "+    public boolean isOnMatch() {", "+        return _state.isOnMatch();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c12182b745e06dc5ec85040f644f6562", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0c95fc4366bd5654ddd2a4c942b1634c96be89c8", "commitAfterChange": "57576abf3c61a61cbc760b4b0e10c533bcfaab23", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 165, "signatureBeforeChange": "    public OpenDefinitionsDocument newClass(String methodName, String modifier, String className, boolean mainMethod, boolean classConstructor, String inheritance, String interfaces)", "signatureAfterChange": "   public OpenDefinitionsDocument newFile()", "diff": ["-", "-  public OpenDefinitionsDocument newClass(String methodName, String modifier, String className, boolean mainMethod, boolean classConstructor, String inheritance, String interfaces) {", "-    ", "-    NewJavaClass javaClass = new NewJavaClass();", "-    String classContent = javaClass.createClassContent(methodName, modifier, className, mainMethod, classConstructor, inheritance, interfaces);", "-    OpenDefinitionsDocument openDoc = newFile();", "-    ", "-    try {", "-      openDoc.insertString(0, classContent, null);", "-      openDoc.indentLines(0, classContent.length());", "-    }", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "-    ", "-    return openDoc;", "-  }", "+    */", "+  public OpenDefinitionsDocument newFile() { return newFile(\"\"); }  "]}], "num": 23959}