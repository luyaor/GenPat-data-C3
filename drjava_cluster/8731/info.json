{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "567d0ab9ce1632187a3d0d8b5b4fd2d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c23f019b12d444ef163e3d22356f09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "6cba9045a1219f7dc187e955d25853d180ed7377", "commitAfterChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "signatureAfterChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "diff": ["-", "+\t\t\t", "+", "-", "-\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\t", "-\t\t\t\tif ((k < length) && (text.charAt(k) != '{'))", "-\t\t\t\t\ttab = j + _indent;", "-\t\t\t\telse if (k == text.length())", "+\t\t\t\tif ((k < length) && (text.charAt(k) == '{')){", "+\t\t\t\t\tif ((j < length) && (text.charAt(j) == '{'))", "+\t\t\t\t\t\ttab = j + _indent;", "+\t\t\t\t\telse", "+\t\t\t\t\t\ttab = j;", "+\t\t\t\t}", "+\t\t\t\telse"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af9e7d3ce79f6a0d4669ee89d6e38a68", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsDocument.java", "commitBeforeChange": "6cba9045a1219f7dc187e955d25853d180ed7377", "commitAfterChange": "1a9af627ea69f691af32f9a422290b5017b0703d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "signatureAfterChange": " \tprivate int _indentSpecialCases(int tab, int distToPrevNewline) \t\tthrows BadLocationException", "diff": ["-", "+\t\t\t", "+", "-", "-\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\tmove(-distToPrevNewline - 2); //assumed: we are at end of a line.", "+\t\t\t", "-\t\t\t\tif ((k < length) && (text.charAt(k) != '{'))", "-\t\t\t\t\ttab = j + _indent;", "-\t\t\t\telse if (k == text.length())", "+\t\t\t\tif ((k < length) && (text.charAt(k) == '{')){", "+\t\t\t\t\tif ((j < length) && (text.charAt(j) == '{'))", "+\t\t\t\t\t\ttab = j + _indent;", "+\t\t\t\t\telse", "+\t\t\t\t\t\ttab = j;", "+\t\t\t\t}", "+\t\t\t\telse"]}], "num": 8731}