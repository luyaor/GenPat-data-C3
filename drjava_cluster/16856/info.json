{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f602939f2d73857f856739ca313b6cc3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d4359ef2027d615f4227e8ffb9d4b3f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/sourcechecker/SourceChecker.java", "commitBeforeChange": "e664df55ae0a7bd09b3050ad4027139ea59836cd", "commitAfterChange": "41fd33d17362a9b484003b73b5562d87a9b206fa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void check(Iterable<? extends File> sources, Iterable<? extends File> classPath) throws InterpreterException", "signatureAfterChange": "      public void check(Iterable<? extends File> sources, Iterable<? extends File> classPath)                       throws InterpreterException", "diff": ["-  public void check(Iterable<? extends File> sources, Iterable<? extends File> classPath) throws InterpreterException {", "+  public void check(Iterable<? extends File> sources, Iterable<? extends File> classPath)", "+                      throws InterpreterException {", "-    typeCheck(tree, classPath);", "+    TypeContext context = makeContext(tree, classPath);", "+    Relation<TypeDeclaration, ClassChecker> decls = extractDeclarations(tree, context);", "+    initializeClassSignatures(decls);", "+    checkSignatures(decls);", "+    checkBodies(decls);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f8b77be79352d2119fad7fcbf7d3ae4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk15/edu/rice/cs/drjava/model/compiler/Javac150Compiler.java", "commitBeforeChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "commitAfterChange": "51ac7cbc7782d911930f183c9cf811f53aba30d2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "signatureAfterChange": "   public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath,                                                 List<? extends File> sourcePath, File destination,                                                 List<? extends File> bootClassPath, String sourceVersion, boolean showWarnings)", "diff": ["-  public List<? extends CompilerError> compile(List<? extends File> files, List<? extends File> classPath, ", "+  public List<? extends DJError> compile(List<? extends File> files, List<? extends File> classPath, ", "-      LinkedList<CompilerError> errors = log.getErrors();", "-      errors.addFirst(new CompilerError(\"Compile exception: \" + t, false));", "+      LinkedList<DJError> errors = log.getErrors();", "+      errors.addFirst(new DJError(\"Compile exception: \" + t, false));"]}], "num": 16856}