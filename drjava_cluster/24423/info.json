{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35d392f2c207af009f430ee9d62a4f85", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf38b9cbaab77f78ab69a7f2cdee322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["-      int errPos = positions[idx].getOffset();", "+      Position pos = positions[idx];", "-      defPane.setCaretPosition(errPos);", "+      if (pos != null) {", "+        int errPos = pos.getOffset();", "+        defPane.setCaretPosition(errPos);", "+        //defPane.getJUnitErrorCaretListener().updateHighlight(errPos);", "+      }", "-      defPane.getJUnitErrorCaretListener().updateHighlight(errPos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f9174c01672834565266cc1590023e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorCaretListener.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private void _highlightErrorInSource(int newIndex)", "signatureAfterChange": "   private void _highlightErrorInSource(int newIndex)", "diff": ["-    int errPos = _positions[newIndex].getOffset();", "+    Position pos = _positions[newIndex];", "+    if (pos == null) {", "+      return;", "+    }", "+    int errPos = pos.getOffset();", "-      _definitionsPane.addErrorHighlight(prevNewline+1, nextNewline);", "+      prevNewline++;", "+      if (prevNewline <= nextNewline) {", "+        _definitionsPane.addErrorHighlight(prevNewline, nextNewline);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "573018f273be7691d4482f596bc075cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorCaretListener.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _highlightErrorInSource(int newIndex)", "signatureAfterChange": "   private void _highlightErrorInSource(int newIndex)", "diff": ["-    int errPos = _positions[newIndex].getOffset();", "+    Position pos = _positions[newIndex];", "+    if (pos == null) {", "+      return;", "+    }", "+    int errPos = pos.getOffset();", "-      _errorListPane.getLastDefPane().removeErrorHighlight();", "+      if (_errorListPane.getLastDefPane() != null) {", "+        _errorListPane.getLastDefPane().removeErrorHighlight();", "+      }", "-      if (prevNewline>0) prevNewline++;", "+      if (prevNewline>0) prevNewline++;      ", "-      _definitionsPane.addErrorHighlight(prevNewline, nextNewline);", "+      if (prevNewline <= nextNewline) {", "+        _definitionsPane.addErrorHighlight(prevNewline, nextNewline);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aee6d9c366db6229321c4a23eeb6c1e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "signatureAfterChange": "     private void _gotoErrorSourceLocation(OpenDefinitionsDocument doc,                                           final int idx)", "diff": ["-      int errPos = positions[idx].getOffset();", "-", "+      Position pos = positions[idx];", "-      defPane.setCaretPosition(errPos);", "+      if (pos != null) {", "+        int errPos = pos.getOffset();", "+        defPane.setCaretPosition(errPos);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef0cae554830312c079e2203bc4a2066", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitErrorCaretListener.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void updateHighlight(int curPos)", "signatureAfterChange": "   public void updateHighlight(int curPos)", "diff": ["-      if (_positions[errorAfter].getOffset() >= curPos) {", "+      Position pos = _positions[errorAfter];", "+      if (pos == null) {", "+        return;", "+      }", "+      if (pos.getOffset() >= curPos) {"]}], "num": 24423}