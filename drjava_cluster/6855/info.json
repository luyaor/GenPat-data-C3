{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8684616d7daef40062e32ff9a3d235b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05079d7e3ff180b93fd9029f570c47b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   synchronized public void interpreterResetting()", "signatureAfterChange": "   public void interpreterResetting()", "diff": ["-  synchronized public void interpreterResetting() {", "-    int size = _listeners.size();", "-    for(int i = 0; i < size; i++) {", "-      _listeners.get(i).interpreterResetting();", "+  public void interpreterResetting() {", "+    _lock.startRead();", "+    try {", "+      int size = _listeners.size();", "+      for(int i = 0; i < size; i++) {", "+        _listeners.get(i).interpreterResetting();", "+      }", "+    }", "+    finally {", "+      _lock.endRead();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0761f6277d3e0170d264b50dd4451440", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "2c16e0d4d9158060234171af20b20d5de3e555f9", "commitAfterChange": "e1f5c81c52809e8bace735e11df6213768d823f8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   synchronized public void interpreterResetFailed()", "signatureAfterChange": "   public void interpreterResetFailed()", "diff": ["-  synchronized public void interpreterResetFailed() {", "-    int size = _listeners.size();", "-    for(int i = 0; i < size; i++) {", "-      _listeners.get(i).interpreterResetFailed();", "+  public void interpreterResetFailed() {", "+    _lock.startRead();", "+    try {", "+      int size = _listeners.size();", "+      for(int i = 0; i < size; i++) {", "+        _listeners.get(i).interpreterResetFailed();", "+      }", "+    }", "+    finally {", "+      _lock.endRead();"]}], "num": 6855}