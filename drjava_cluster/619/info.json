{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e7b5a76d803b217754e33e1db979839", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93bb2c2bde79b221deeb5147f2df1036", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilities.java", "commitBeforeChange": "46bddad84804814dd0241cc4f939b2c8bb524e79", "commitAfterChange": "57c329e51bd78750aa00f213f08f13a896c8353c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void resetVersion()", "signatureAfterChange": "   public static void resetVersion()", "diff": ["-      java.lang.reflect.Method.class.getMethod(\"isVarArgs\", new Class[]{});", "+      java.lang.reflect.Method.class.getMethod(\"isVarArgs\", new Class<?>[]{});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae17e042384be22cb274f91dbe9663cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilities.java", "commitBeforeChange": "85fd61ee1a700a3554f9f6051d7b820240977650", "commitAfterChange": "59987ac5015023feebf0645e29708a317ba8687d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public static void resetVersion()", "signatureAfterChange": "   public static void resetVersion()", "diff": ["-      Class.forName(\"com.sun.javadoc.ParameterizedType\");", "+//      Class.forName(\"com.sun.javadoc.ParameterizedType\");", "+      java.lang.reflect.Method.class.getMethod(\"isVarArgs\", new Class[]{});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5f5da4ba2e5f293550a285f92728f8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilitiesTest.java", "commitBeforeChange": "46bddad84804814dd0241cc4f939b2c8bb524e79", "commitAfterChange": "57c329e51bd78750aa00f213f08f13a896c8353c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testBridgeMethodLookup()      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException", "signatureAfterChange": "   public void testBridgeMethodLookup()      throws NoSuchMethodException, IllegalAccessException, InvocationTargetException", "diff": ["+    //System.err.println(m1.getModifiers());", "-    m = ReflectionUtilities.lookupMethod(C1.class, \"method1\", new Class[]{});", "+    m = ReflectionUtilities.lookupMethod(C1.class, \"method1\", new Class<?>[]{});"]}], "num": 619}