{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3edba81bb2901cab118c47527e86692", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c374c45448eb4a7fdd998a955814cf2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "19bcb8a67a06dcc2ef48a69b7811a95873e9cceb", "commitAfterChange": "a78feabf50a41fa3e5a96262d5810086d7fca66d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException", "signatureAfterChange": "   protected final void invokeSlave(String[] jvmArgs, String cp, File workDir) throws IOException, RemoteException", "diff": ["-      //*******************************************", "-      // first, we we export ourselves to a file...", "-      //*******************************************", "+      /**********************************************", "+       * First, we we export ourselves to a file... *", "+       **********************************************/", "-              //javax.swing.JOptionPane.showMessageDialog(null, _stub.toString());", "+              // javax.swing.JOptionPane.showMessageDialog(null, _stub.toString());", "-              //javax.swing.JOptionPane.showMessageDialog(null, edu.rice.cs.util.StringOps.getStackTrace(re));", "+              // javax.swing.JOptionPane.showMessageDialog(null, edu.rice.cs.util.StringOps.getStackTrace(re));", "-        while (_stub == null) {", "-          try { lock.wait(); }", "-          catch (InterruptedException ie) { throw new edu.rice.cs.util.UnexpectedException(ie); }", "-        }", "+        try { while (_stub == null) { lock.wait(); } }", "+        catch (InterruptedException ie) { throw new edu.rice.cs.util.UnexpectedException(ie); }", "-      //*******************************************", "-      // done exporting ourselves to a file...", "-      // now lets export our classloader", "-      // this will be used to handle classloading ", "-      // requests from the slave jvm", "-      //*******************************************", "+      /***********************************************************************************", "+       * Done exporting ourselves to a file ...  Now let's export our classloader        *", "+       * This will be used to handle classloading requests from the slave jvm.           *", "+       ***********************************************************************************/", "+      ", "-        while (_classLoaderStub == null) {", "-          try { lock.wait(); }", "-          catch (InterruptedException ie) { throw new edu.rice.cs.util.UnexpectedException(ie); }", "-        }", "+        try { while (_classLoaderStub == null) { lock.wait(); } }", "+        catch (InterruptedException ie) { throw new edu.rice.cs.util.UnexpectedException(ie); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2ff15623fdb079545e91f64b2a3dbe4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractMasterJVM.java", "commitBeforeChange": "754c5c6ad2cb355b22670132dd3802b39cd047ad", "commitAfterChange": "96733f3b5667642e9fe604cf00e9cf6d6a2ed1f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   protected synchronized final void invokeSlave(String[] jvmArgs, String cp)     throws IOException, RemoteException", "signatureAfterChange": "   protected synchronized final void invokeSlave(String[] jvmArgs, String cp)     throws IOException, RemoteException", "diff": ["+    ", "+    //*******************************************", "+    // first, we we export ourselves to a file...", "+    //*******************************************", "+    ", "-        synchronized(AbstractMasterJVM.this) {", "+        synchronized(lock) {", "-          AbstractMasterJVM.this.notify();", "+          lock.notify();", "-", "-    t.start();", "-    while (_stub == null) {", "-      try {", "-        wait();", "-      }", "-      catch (InterruptedException ie) {", "-        throw new edu.rice.cs.util.UnexpectedException(ie);", "+    synchronized(lock){", "+      t.start();", "+      while (_stub == null) {", "+        try {", "+          lock.wait();", "+        }", "+        catch (InterruptedException ie) {", "+          throw new edu.rice.cs.util.UnexpectedException(ie);", "+        }", "-", "-", "+", "+    //*******************************************", "+    // done exporting ourselves to a file...", "+    // now lets export our classloader", "+    // this will be used to handle classloading ", "+    // requests from the slave jvm", "+    //*******************************************", "+    final RemoteClassLoader rClassLoader = new RemoteClassLoader(getClass().getClassLoader());", "+    t = new Thread(_exportMasterThreadName) {", "+      public void run() {", "+        synchronized(lock) {", "+          try {", "+            _classLoaderStub = UnicastRemoteObject.exportObject(rClassLoader);", "+            ", "+            // Debug: check that the IP address is 127.0.0.1", "+            //javax.swing.JOptionPane.showMessageDialog(null, _stub.toString());", "+          }", "+          catch (RemoteException re) {", "+            //javax.swing.JOptionPane.showMessageDialog(null, edu.rice.cs.util.StringOps.getStackTrace(re));", "+            throw new edu.rice.cs.util.UnexpectedException(re);", "+          }", "+          lock.notify();", "+        }", "+      }", "+    };", "+    synchronized(lock){", "+      t.start();", "+      while (_classLoaderStub == null) {", "+        try {", "+          lock.wait();", "+        }", "+        catch (InterruptedException ie) {", "+          throw new edu.rice.cs.util.UnexpectedException(ie);", "+        }", "+      }", "+    }", "+    _classLoaderStubFile = File.createTempFile(\"DrJava-remote-stub\", \".tmp\");", "+    _classLoaderStubFile.deleteOnExit();", "+    // serialize stub to _stubFile", "+    fstream = new FileOutputStream(_classLoaderStubFile);", "+    ostream = new ObjectOutputStream(fstream);", "+    ostream.writeObject(_classLoaderStub);", "+    ostream.flush();", "+    fstream.close();", "+    ", "-      _slaveClassName", "+      _slaveClassName,", "+      _classLoaderStubFile.getAbsolutePath()", "-    // When it dies,", "+    // When it dies, restart it"]}], "num": 7215}