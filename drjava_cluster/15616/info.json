{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65b60d1aeaaae171a5fca31eb1d07efb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc09ffc6d14682fa1941569dda5e54a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReferenceTypeName.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public ReferenceTypeName(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public ReferenceTypeName(List<? extends IdentifierToken> ids, String fn, int bl, int bc, int el, int ec)", "diff": ["-  public ReferenceTypeName(List<IdentifierToken> ids, String fn, int bl, int bc, int el, int ec) {", "+  public ReferenceTypeName(List<? extends IdentifierToken> ids, String fn, int bl, int bc, int el, int ec) {", "-", "+    if (ids.size() == 0) throw new IllegalArgumentException(\"ids.size() == 0\");", "+    identifiers = ids;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "948c8e7016df18d02f9253853b739dc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReferenceTypeName.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ReferenceTypeName(String rep, String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "      public ReferenceTypeName(IdentifierToken... ids)", "diff": ["+  ", "+  public ReferenceTypeName(IdentifierToken... ids) {", "+    this(Arrays.asList(ids));", "+  }", "-   */", "-  public ReferenceTypeName(String rep, String fn, int bl, int bc, int el, int ec) {", "-    super(fn, bl, bc, el, ec);", "-", "-    if (rep == null) throw new IllegalArgumentException(\"rep == null\");", "-", "-    representation = rep;"]}], "num": 15616}