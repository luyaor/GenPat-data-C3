{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bab22b4be52f0e57f0f244a38cd37a5b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "892948ad3bbda8f3973c7da417a8a32e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/TreeClass.java", "commitBeforeChange": "66044dc35b8be11319705314c96973e09057e03e", "commitAfterChange": "a5ae5bcbd4d40718a2d40d7b0f66e985886102c4", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private boolean paramsMatch(Iterable<LocalVariable> p1, Iterable<LocalVariable> p2)", "signatureAfterChange": "   private boolean paramsMatch(Iterable<LocalVariable> p1, Iterable<LocalVariable> p2)", "diff": ["-  /** Non-static because it depends on _opt. */", "+   */", "-        if (!ts.erase(vars.first().type()).equals(ts.erase(vars.second().type()))) {", "+        Thunk<Class<?>> c1 = ts.erasedClass(vars.first().type());", "+        Thunk<Class<?>> c2 = ts.erasedClass(vars.second().type());", "+        if (!c1.value().equals(c2.value())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe81659d25558c266f393adb7bce22c8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtilTest.java", "commitBeforeChange": "14999011605e2c3a05dc56c0f62a941e8b525311", "commitAfterChange": "9ac999ce828a3f9b8d41d5a1d9e3b21904fde907", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "    private void checkProcessOutput(Process p, String classPath, String workingDir, Iterable<String> args)      throws IOException", "signatureAfterChange": "    private void checkProcessOutput(Process p, String classPath, String workingDir, Iterable<String> args)      throws IOException", "diff": ["-      assertTrue(TextUtil.contains(in.readLine(), classPath));", "+      Iterable<File> expectedPath = IOUtil.parsePath(classPath);", "+      Iterable<File> actualPath = IOUtil.parsePath(in.readLine());", "+      assertTrue(IterUtil.containsAll(actualPath, expectedPath));"]}], "num": 27361}