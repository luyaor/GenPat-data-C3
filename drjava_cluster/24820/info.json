{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02ae66c80504cbae855e36b2d2ecfd17", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b253eabaebb73d8e837262baa391c2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public HashRelation(boolean indexFirst, boolean indexSecond)", "signatureAfterChange": "   public HashRelation(boolean indexSecond)", "diff": ["-  public HashRelation(boolean indexFirst, boolean indexSecond) {", "-    _pairs = new HashSet<Pair<T1, T2>>();", "-    if (indexFirst) { _firstIndex = new HashMap<T1, HashSet<T2>>(); }", "-    else { _firstIndex = null; }", "-    if (indexSecond) { _secondIndex = new HashMap<T2, HashSet<T1>>(); }", "-    else { _secondIndex = null; }", "+   */", "+  public HashRelation(boolean indexSecond) {", "+    _firstIndex = new ConcreteRelationIndex<T1, T2>(CollectUtil.<T1, PredicateSet<T2>>hashMapFactory(),", "+                                                    CollectUtil.<T2>hashSetFactory(4)) {", "+      public void addToRelation(T1 first, T2 second) { _secondIndex.added(second, first); }", "+      public void removeFromRelation(T1 first, T2 second) { _secondIndex.removed(second, first); }", "+      public void clearRelation() { _secondIndex.cleared(); }", "+    if (indexSecond) {", "+      _secondIndex = new ConcreteRelationIndex<T2, T1>(CollectUtil.<T2, PredicateSet<T1>>hashMapFactory(),", "+                                                       CollectUtil.<T1>hashSetFactory(4)) {", "+        public void addToRelation(T2 second, T1 first) { _firstIndex.added(first, second); }", "+        public void removeFromRelation(T2 second, T1 first) { _firstIndex.removed(first, second); }", "+        public void clearRelation() { _firstIndex.cleared(); }", "+      };", "+    else {", "+      _secondIndex = new LazyRelationIndex<T2, T1>(IterUtil.map(_firstIndex, Pair.<T1, T2>inverter()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cce7f01a66957132665f4a178496476a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "34165d14e4d7d5138ad316dc07c21ed2c5c60ba7", "commitAfterChange": "6df23b9d947a754084cff460e34d203b0d81fd48", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "    private void _setUpTabs()", "signatureAfterChange": "    private void _setUpTabs()", "diff": ["-    _interactionsScroll = new BorderlessScrollPane(_interactionsPane);", "+    JScrollPane interactionsScroll = new BorderlessScrollPane(_interactionsPane);", "-    _interactionsContainer.add(_interactionsScroll, BorderLayout.CENTER);", "+    _interactionsContainer.add(interactionsScroll, BorderLayout.CENTER);", "-        if (_tabbedPane.getSelectedComponent() == _interactionsScroll) {", "+        if (_tabbedPane.getSelectedComponent() == _interactionsContainer) {", "+    ", "+    _interactionsPane.addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _interactionsContainer;", "+      }", "+    });", "+    _consolePane.addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _consoleScroll;", "+      }", "+    });", "+//    _compilerErrorPanel.addFocusListener(new LastFocusListener());", "+//    _junitErrorPanel.addFocusListener(new LastFocusListener());", "+//    _javadocErrorPanel.addFocusListener(new LastFocusListener());", "+//    _findReplace.addFocusListener(new LastFocusListener());", "+    _compilerErrorPanel.getMainPanel().addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _compilerErrorPanel;", "+      }", "+    });", "+    _junitErrorPanel.getMainPanel().addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _junitErrorPanel;", "+      }", "+    });", "+    _javadocErrorPanel.getMainPanel().addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _javadocErrorPanel;", "+      }", "+    });", "+    _findReplace.getFindField().addFocusListener(new FocusAdapter() {", "+      public void focusGained(FocusEvent e) {", "+        _lastFocusOwner = _findReplace;", "+      }", "+    });"]}], "num": 24820}