{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba1a93dc89a5fb79696aed2d37dbee84", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbaeae33825ae281499f99db0293ea6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "   private OpenDefinitionsDocument _openFiles(File[] files)      throws IOException, OperationCanceledException, AlreadyOpenException", "signatureAfterChange": "   private OpenDefinitionsDocument _openFiles(File[] files)      throws IOException, OperationCanceledException, AlreadyOpenException", "diff": ["-//        SHOW_GETDOC = true;", "-        ", "+    //        SHOW_GETDOC = true;", "+    ", "-    for (File f: files) {", "-      if (f == null) {", "-        throw new IOException(\"File name returned from FileSelector is null\");", "-      }", "+    for (final File f: files) {", "+      if (f == null) throw new IOException(\"File name returned from FileSelector is null\");", "-        if (storedAOE == null) {", "-          storedAOE = aoe;", "-        }", "-      } catch(FileNotFoundException e){", "-        filesNotFound.add(f);", "-      }", "+        if (storedAOE == null) storedAOE = aoe;", "+      } ", "+      catch(FileNotFoundException e) { filesNotFound.add(f); }", "-    for(final OpenDefinitionsDocument d: filesOpened){", "+    for (final OpenDefinitionsDocument d: filesOpened){", "-//        SHOW_GETDOC = false;", "-    for(File f: filesNotFound){", "-      _notifier.fileNotFound(f);", "-    }", "+    //        SHOW_GETDOC = false;", "+    for (File f: filesNotFound) { _notifier.fileNotFound(f); }", "-    if (storedAOE != null) {", "-      throw storedAOE;", "-    }", "-", "-    if (retDoc != null) {", "-      return retDoc;", "-    }", "+    if (storedAOE != null) throw storedAOE;", "+    ", "+    if (retDoc != null) return retDoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b452d1f6e2ec7603f24968418ab9781", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 408, "methodNumberAfterChange": 406, "signatureBeforeChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "diff": ["-      if (! _model.getActiveDocument().equals(doc)) {", "-        _model.setActiveDocument(doc);", "-      }", "+      if (! _model.getActiveDocument().equals(doc)) _model.setActiveDocument(doc);", "-      catch (IllegalStateException ise) {", "-        // No file exists", "-        fname = \"Untitled file\";", "-      }", "-      catch (FileMovedException fme) {", "-        // File was deleted, but use the same name anyway", "-        fname = fme.getFile().getName();", "-      }", "+      catch (IllegalStateException ise) { fname = \"Untitled file\"; } // No file exists", "+        ", "+      catch (FileMovedException fme) { fname = fme.getFile().getName(); }", "+      // File was deleted, but use the same name anyway", "-      String text = fname + \" has changed on disk. Would you like to \" +", "-      \"reload it?\\nThis will discard any changes you have made.\";", "+      String text = fname + \" has changed on disk. Would you like to reload it?\\n\" + ", "+        \"This will discard any changes you have made.\";"]}], "num": 7232}