{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18eff05451576d3ff5b622e49191e0b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eeb9c3f12a45bab329e7d68a48f005f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "      private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont,                                      int start, int found, AbstractDocumentInterface doc)", "signatureAfterChange": "      private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found,                                       OpenDefinitionsDocument doc)", "diff": ["-  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont,", "-                                     int start, int found, AbstractDocumentInterface doc)", "-  {", "-    FindResult fr = frm.findNext();", "-    AbstractDocumentInterface d = fr.getDocument();", "-    if (frm.getDocument() != d) {", "-      // do FindReplaceDialog's _updateMachine", "-      frm.setDocument(d);", "-      frm.setStart(found);", "-      frm.setPosition(found);", "-    }", "-    Utilities.clearEventQueue();", "+  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found, ", "+                                     OpenDefinitionsDocument doc) {", "+    try {", "+      FindResult fr = frm.findNext();", "+      OpenDefinitionsDocument d = fr.getDocument();", "+      if (frm.getDocument() != d) {", "+        // do FindReplaceDialog's _updateMachine", "+//        Utilities.show(\"return doc = \" + d + \" distinct from current machine doc = \" + frm.getDocument());", "+        frm.setDocument(d);", "+        frm.setPosition(found);", "+      }", "+      Utilities.clearEventQueue();", "-    assertEquals(\"findNext return value\", found, fr.getFoundOffset());", "-    _assertOffsets(frm, start, found);", "-    assertTrue(\"on find text\", frm.isOnMatch());", "+      assertEquals(\"findNext return value\", found, fr.getFoundOffset());", "+      _assertOffsets(frm, start, found);", "+      assertTrue(\"on find text\", frm.isOnMatch());", "+    }", "+    catch(Exception e) { fail(\"Threw exception: \" + e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ba926d2035ad6e2ed8517951a37133", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachineTest.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "      private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found,                                       OpenDefinitionsDocument doc)", "signatureAfterChange": "      private void _testFindNextSucceeds(final FindReplaceMachine frm, int start, final int found,                                       OpenDefinitionsDocument doc)", "diff": ["-  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, int start, int found, ", "+  private void _testFindNextSucceeds(final FindReplaceMachine frm, int start, final int found, ", "-    try {", "-      FindResult fr = frm.findNext();", "-      OpenDefinitionsDocument d = fr.getDocument();", "-      if (frm.getDocument() != d) {", "-        // do FindReplacePanel's _updateMachine", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        try {", "+          _result = frm.findNext();", "+          OpenDefinitionsDocument newDoc = _result.getDocument();", "+          if (frm.getDocument() != newDoc) {", "+            // do FindReplacePanel's _updateMachine", "-        frm.setDocument(d);", "-        frm.setPosition(found);", "+            frm.setDocument(newDoc);", "+            frm.setPosition(found);", "+          }", "+        }", "+        catch (Exception e) { throw new UnexpectedException(e); }", "-      Utilities.clearEventQueue();", "-//    assertEquals(\"documents should equal\", doc, frm.getDocument());", "-      assertEquals(\"findNext return value\", found, fr.getFoundOffset());", "-      _assertOffsets(frm, start, found);", "-      assertTrue(\"on find text\", frm.onMatch());", "-    }", "-    catch(Exception e) { fail(\"Threw exception: \" + e); }", "-  }", "+    });", "+    Utilities.clearEventQueue();", "+    assertEquals(\"documents should equal\", doc.toString(), frm.getDocument().toString());", "+    assertEquals(\"findNext return value\", found, _result.getFoundOffset());", "+  } "]}], "num": 9703}