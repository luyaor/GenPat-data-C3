{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7574bab77c6a545c0637379a4ddad883", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e4a2d6dc6520a898f5c7b0f5c290051", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void testCrazyCase2()", "signatureAfterChange": " \tpublic void testCrazyCase2()", "diff": ["-\t", "+\t/**Test sequences of inserts*/", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(2);", "+\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\t//System.out.println(\"SHOULD BE:  /#__/__  \\n\"+model1.simpleString());", "-\t\t\tassertEquals(\"#0.0\", 2, model1.getCursor().current().getSize());\t\t\t", "-\t\t\tassertEquals(\"#0.1\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#0.2\", 1, model1.getCursor().nextItem().getSize());", "+\t\t\tmodel1.move(0);", "+\t\t\tmodel1.move(-3);", "+\t\t\t//check that double slash works.", "+\t\t\tassertEquals(\"#0.0\", 2, model1.currentToken().getSize());\t\t\t", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#0.2\", 1, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tmodel1.move(-2);", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tassertEquals(\"#1.1\", \"//\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-2);", "+\t\t\tassertEquals(\"#1.1\", \"//\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#1.3\",ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(2);", "+\t\t\t// //#__/__", "-\t\t\tassertEquals(\"#1.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(2);", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t// //#__/__", "-\t\t\t//break line comment simultaneously forming a new line comment", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(-2);", "+", "+\t\t}", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\t// //#/__/__", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tassertEquals(\"#2.0\", \"//\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#2.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\t\t\t\t", "-\t\t\tassertEquals(\"#3.0\", \"/*\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#3.1\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#3.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#3.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t//break block comment start with a star.", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tassertEquals(\"#4.0\", \"/*\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#4.1\", \"*/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#4.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#4.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\t // /**___#//__/__\t", "-\t\t\tassertEquals(\"#5.0\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#5.2\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#5.3\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#5.4\",ReducedToken.INSIDE_BLOCK_COMMENT,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfb0e580197dbade0abac99b0fea5fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void testCrazyCase2()", "signatureAfterChange": " \tpublic void testCrazyCase2()", "diff": ["-\t", "+\t/**Test sequences of inserts*/", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(2);", "+\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\t//System.out.println(\"SHOULD BE:  /#__/__  \\n\"+model1.simpleString());", "-\t\t\tassertEquals(\"#0.0\", 2, model1.getCursor().current().getSize());\t\t\t", "-\t\t\tassertEquals(\"#0.1\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#0.2\", 1, model1.getCursor().nextItem().getSize());", "+\t\t\tmodel1.move(0);", "+\t\t\tmodel1.move(-3);", "+\t\t\t//check that double slash works.", "+\t\t\tassertEquals(\"#0.0\", 2, model1.currentToken().getSize());\t\t\t", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#0.2\", 1, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#0.1\", \"/\", model1.currentToken().getType());", "+\t\t\tmodel1.move(-2);", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tassertEquals(\"#1.1\", \"//\", model1.getCursor().prevItem().getType());", "+\t\t\tmodel1.move(-2);", "+\t\t\tassertEquals(\"#1.1\", \"//\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#1.3\",ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(2);", "+\t\t\t// //#__/__", "-\t\t\tassertEquals(\"#1.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(2);", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t// //#__/__", "-\t\t\t//break line comment simultaneously forming a new line comment", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(-2);", "+", "+\t\t}", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\t// //#/__/__", "-\t\t\t//System.out.println(model1.simpleString());", "-\t\t\tassertEquals(\"#2.0\", \"//\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#2.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\tmodel1.insertStar();", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\t\t\t\t", "-\t\t\tassertEquals(\"#3.0\", \"/*\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#3.1\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#3.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#3.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\t//break block comment start with a star.", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tassertEquals(\"#4.0\", \"/*\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#4.1\", \"*/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#4.2\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#4.3\",ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tmodel1.setBlockOffset(1);", "-\t\t\t // /**___#//__/__\t", "-\t\t\tassertEquals(\"#5.0\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#5.2\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#5.3\", \"/\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#5.4\",ReducedToken.INSIDE_BLOCK_COMMENT,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());"]}], "num": 8237}