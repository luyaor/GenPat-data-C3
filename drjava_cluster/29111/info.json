{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f700c2884c3bc24b763d1c3c4555b9af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302a61d5e43de44c19665f4176881e30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-        new ClassDef(SourceInfo.NO_INFO, _packageMav, ", "-                     new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+        new ClassDef(SourceInfo.NONE, _packageMav, ", "+                     new Word(SourceInfo.NONE, \"Lisa\"),", "-                     new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]), ", "-                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])); ", "+                     new BracedBody(SourceInfo.NONE, new BodyItemI[0])); ", "-        new ClassDef(SourceInfo.NO_INFO, _abstractMav, new Word(SourceInfo.NO_INFO, \"Bart\"),", "+        new ClassDef(SourceInfo.NONE, _abstractMav, new Word(SourceInfo.NONE, \"Bart\"),", "-                     new ClassOrInterfaceType(SourceInfo.NO_INFO, \"System\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NONE, \"System\", new Type[0]), ", "-                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                     new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"testMethodName\"),", "+                                                    new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                                                    new Word(SourceInfo.NONE, \"testMethodName\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new ClassDef(SourceInfo.NO_INFO, ", "+        new ClassDef(SourceInfo.NONE, ", "-                     new Word(SourceInfo.NO_INFO, \"TestSuper2\"),", "-                     new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NO_INFO, \"TestCase\", new Type[0]), ", "+                     new Word(SourceInfo.NONE, \"TestSuper2\"),", "+                     new TypeParameter[0], new ClassOrInterfaceType(SourceInfo.NONE, \"TestCase\", new Type[0]), ", "-                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {cmd}));", "+                     new BracedBody(SourceInfo.NONE, new BodyItemI[] {cmd}));", "-      ConcreteMethodDef cmd2 = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      ConcreteMethodDef cmd2 = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"uhOh\"),", "+                                                    new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                                                    new Word(SourceInfo.NONE, \"uhOh\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new ClassDef(SourceInfo.NO_INFO, ", "+        new ClassDef(SourceInfo.NONE, ", "-                     new Word(SourceInfo.NO_INFO, \"TestVoidNoTestMethod\"),", "+                     new Word(SourceInfo.NONE, \"TestVoidNoTestMethod\"),", "-                     new ClassOrInterfaceType(SourceInfo.NO_INFO,\"junit.framework.TestCase\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NONE,\"junit.framework.TestCase\", new Type[0]), ", "-                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { cmd2 }));", "+                     new BracedBody(SourceInfo.NONE, new BodyItemI[] { cmd2 }));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "415ab685c4791c6d5a942c99d4f83c05", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "          public void testForVariableDeclarationOnly()", "signatureAfterChange": "          public void testForVariableDeclarationOnly()", "diff": ["-      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NO_INFO,", "+      VariableDeclaration vdecl = new VariableDeclaration(SourceInfo.NONE,", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                            new Word (SourceInfo.NO_INFO, \"field1\")),", "-          new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                              new PrimitiveType(SourceInfo.NO_INFO, \"boolean\"), ", "-                                              new Word (SourceInfo.NO_INFO, \"field2\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                            new Word (SourceInfo.NONE, \"field1\")),", "+          new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                              new PrimitiveType(SourceInfo.NONE, \"boolean\"), ", "+                                              new Word (SourceInfo.NONE, \"field2\"))});", "-        new VariableDeclaration(SourceInfo.NO_INFO,", "+        new VariableDeclaration(SourceInfo.NONE,", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                            new Word(SourceInfo.NO_INFO, \"field3\")),", "-          new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                              new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                              new Word(SourceInfo.NO_INFO, \"field3\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                            new Word(SourceInfo.NONE, \"field3\")),", "+          new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                              new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                              new Word(SourceInfo.NONE, \"field3\"))});", "-      VariableDeclaration vdecl3 = new VariableDeclaration(SourceInfo.NO_INFO,", "+      VariableDeclaration vdecl3 = new VariableDeclaration(SourceInfo.NONE,", "-        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                            new Word (SourceInfo.NO_INFO, \"field4\"))});", "+        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                            new Word (SourceInfo.NONE, \"field4\"))});", "-      VariableDeclaration vdecl5 = new VariableDeclaration(SourceInfo.NO_INFO,", "+      VariableDeclaration vdecl5 = new VariableDeclaration(SourceInfo.NONE,", "-        new InitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                          new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                          new Word(SourceInfo.NO_INFO, \"field5\"), ", "-                                          new DoubleLiteral(SourceInfo.NO_INFO, 2.4))});", "+        new InitializedVariableDeclarator(SourceInfo.NONE, ", "+                                          new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                          new Word(SourceInfo.NONE, \"field5\"), ", "+                                          new DoubleLiteral(SourceInfo.NONE, 2.4))});", "-//      VariableDeclaration vdecl6 = new VariableDeclaration(SourceInfo.NO_INFO,", "+//      VariableDeclaration vdecl6 = new VariableDeclaration(SourceInfo.NONE,", "-//        new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-//                                            new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-//                                            new Word(SourceInfo.NO_INFO, \"field6\"))});", "+//        new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+//                                            new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+//                                            new Word(SourceInfo.NONE, \"field6\"))});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bd00cf9b3949e3c04815634a98c6cf1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "          public void testForBracedBody()", "signatureAfterChange": "          public void testForBracedBody()", "diff": ["-        new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] {new UnlabeledBreakStatement(SourceInfo.NO_INFO)});", "+        new BracedBody(SourceInfo.NONE, new BodyItemI[] {new UnlabeledBreakStatement(SourceInfo.NONE)});", "-      BracedBody runtimeBB = new BracedBody(SourceInfo.NO_INFO, ", "+      BracedBody runtimeBB = new BracedBody(SourceInfo.NONE, ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-                           new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+        new ThrowStatement(SourceInfo.NONE, ", "+                           new SimpleNamedClassInstantiation(SourceInfo.NONE, ", "+                                         new ClassOrInterfaceType(SourceInfo.NONE, ", "-                                                             new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])))});", "+                                                             new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])))});", "-      BracedBody bb = new BracedBody(SourceInfo.NO_INFO, ", "+      BracedBody bb = new BracedBody(SourceInfo.NONE, ", "-        new ThrowStatement(SourceInfo.NO_INFO, ", "-        new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, ", "-                                         new ClassOrInterfaceType(SourceInfo.NO_INFO, ", "+        new ThrowStatement(SourceInfo.NONE, ", "+        new SimpleNamedClassInstantiation(SourceInfo.NONE, ", "+                                         new ClassOrInterfaceType(SourceInfo.NONE, ", "-                                          new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[] {new StringLiteral(SourceInfo.NO_INFO, \"wee\")})))});", "+                                          new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[] {new StringLiteral(SourceInfo.NONE, \"wee\")})))});", "-        new BracedBody(SourceInfo.NO_INFO, ", "+        new BracedBody(SourceInfo.NONE, ", "-        new ExpressionStatement(SourceInfo.NO_INFO, ", "-                                new SimpleMethodInvocation(SourceInfo.NO_INFO, ", "-                                                           new Word(SourceInfo.NO_INFO, \"throwsException\"), ", "-                                                           new ParenthesizedExpressionList(SourceInfo.NO_INFO, ", "+        new ExpressionStatement(SourceInfo.NONE, ", "+                                new SimpleMethodInvocation(SourceInfo.NONE, ", "+                                                           new Word(SourceInfo.NONE, \"throwsException\"), ", "+                                                           new ParenthesizedExpressionList(SourceInfo.NONE, ", "-      BracedBody bbConstr = new BracedBody(SourceInfo.NO_INFO, new BodyItemI[]{new ExpressionStatement(SourceInfo.NO_INFO, new SimpleNamedClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, _sd3.getName(), new Type[0]), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])))});", "+      BracedBody bbConstr = new BracedBody(SourceInfo.NONE, new BodyItemI[]{new ExpressionStatement(SourceInfo.NONE, new SimpleNamedClassInstantiation(SourceInfo.NONE, new ClassOrInterfaceType(SourceInfo.NONE, _sd3.getName(), new Type[0]), new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])))});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9636030c4ef19db619fefbbd2b0daf8c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "               public void testCreateMethodData()", "signatureAfterChange": "               public void testCreateMethodData()", "diff": ["-      MethodDef mdef = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      MethodDef mdef = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                                                    new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                    new Word(SourceInfo.NONE, \"methodName\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      mdef = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      mdef = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"methodName2\"),", "+                                                    new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                    new Word(SourceInfo.NONE, \"methodName2\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"double\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-        new FormalParameter(SourceInfo.NO_INFO, ", "-                            new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "-                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "-                                                                new Word (SourceInfo.NO_INFO, \"field1\")),", "+        new FormalParameter(SourceInfo.NONE, ", "+                            new UninitializedVariableDeclarator(SourceInfo.NONE, ", "+                                                                new PrimitiveType(SourceInfo.NONE, \"int\"), ", "+                                                                new Word (SourceInfo.NONE, \"field1\")),", "-        new AbstractMethodDef(SourceInfo.NO_INFO, ", "+        new AbstractMethodDef(SourceInfo.NONE, ", "-                              new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                                      new TypeVariable(SourceInfo.NO_INFO, \"U\"))},", "-                              new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                              new Word(SourceInfo.NO_INFO, \"methodName\"),", "+                              new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                                      new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                                      new TypeVariable(SourceInfo.NONE, \"U\"))},", "+                              new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                              new Word(SourceInfo.NONE, \"methodName\"),", "-                              new ReferenceType[] { new TypeVariable(SourceInfo.NO_INFO, \"X\") });", "+                              new ReferenceType[] { new TypeVariable(SourceInfo.NONE, \"X\") });", "-                             new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO,", "-                                                                     new TypeVariable(SourceInfo.NO_INFO, \"T\"),", "-                                                                     new TypeVariable(SourceInfo.NO_INFO, \"U\"))}, ", "+                             new TypeParameter[] { new TypeParameter(SourceInfo.NONE,", "+                                                                     new TypeVariable(SourceInfo.NONE, \"T\"),", "+                                                                     new TypeVariable(SourceInfo.NONE, \"U\"))}, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0b85d3baf2b0a462dae1c2c49ea33e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-        new ClassDef(SourceInfo.NO_INFO, PACKAGE_MAV, new Word(SourceInfo.NO_INFO, \"Lisa\"),", "+        new ClassDef(SourceInfo.NONE, PACKAGE_MAV, new Word(SourceInfo.NONE, \"Lisa\"),", "-                     new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                     new ClassOrInterfaceType(SourceInfo.NONE, \"java.lang.Object\", new Type[0]), ", "-                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])); ", "+                     new BracedBody(SourceInfo.NONE, new BodyItemI[0])); ", "-      ClassDef cd1 = new ClassDef(SourceInfo.NO_INFO, ", "+      ClassDef cd1 = new ClassDef(SourceInfo.NONE, ", "-                                  new Word(SourceInfo.NO_INFO, \"Bart\"),", "+                                  new Word(SourceInfo.NONE, \"Bart\"),", "-                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"System\", new Type[0]), ", "+                                  new ClassOrInterfaceType(SourceInfo.NONE, \"System\", new Type[0]), ", "-                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                  new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      ConcreteMethodDef cmd = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                    new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                                                    new Word(SourceInfo.NO_INFO, \"testMethodName\"),", "+                                                    new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                                                    new Word(SourceInfo.NONE, \"testMethodName\"),", "-                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      ClassDef cd3 = new ClassDef(SourceInfo.NO_INFO, ", "+      ClassDef cd3 = new ClassDef(SourceInfo.NONE, ", "-                                  new Word(SourceInfo.NO_INFO, \"TestSuper2\"),", "+                                  new Word(SourceInfo.NONE, \"TestSuper2\"),", "-                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"TestCase\", new Type[0]), ", "+                                  new ClassOrInterfaceType(SourceInfo.NONE, \"TestCase\", new Type[0]), ", "-                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { cmd }));", "+                                  new BracedBody(SourceInfo.NONE, new BodyItemI[] { cmd }));", "-      ConcreteMethodDef cmd2 = new ConcreteMethodDef(SourceInfo.NO_INFO, ", "+      ConcreteMethodDef cmd2 = new ConcreteMethodDef(SourceInfo.NONE, ", "-                                                     new VoidReturn(SourceInfo.NO_INFO, \"void\"), ", "-                                                     new Word(SourceInfo.NO_INFO, \"uhOh\"),", "+                                                     new VoidReturn(SourceInfo.NONE, \"void\"), ", "+                                                     new Word(SourceInfo.NONE, \"uhOh\"),", "-                                                     new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+                                                     new BracedBody(SourceInfo.NONE, new BodyItemI[0]));", "-      ClassDef cd4 = new ClassDef(SourceInfo.NO_INFO, ", "+      ClassDef cd4 = new ClassDef(SourceInfo.NONE, ", "-                                  new Word(SourceInfo.NO_INFO, \"TestVoidNoTestMethod\"),", "+                                  new Word(SourceInfo.NONE, \"TestVoidNoTestMethod\"),", "-                                  new ClassOrInterfaceType(SourceInfo.NO_INFO, \"junit.framework.TestCase\", new Type[0]), ", "+                                  new ClassOrInterfaceType(SourceInfo.NONE, \"junit.framework.TestCase\", new Type[0]), ", "-                                  new BracedBody(SourceInfo.NO_INFO, new BodyItemI[] { cmd2 }));", "+                                  new BracedBody(SourceInfo.NONE, new BodyItemI[] { cmd2 }));"]}], "num": 29111}