{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "35fa26baab1be19650fbf9700fcdeb16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d4dbfd46548a711e2a4ac78d3197c1e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testDeleteInsideGap()", "signatureAfterChange": "  \tpublic void testInnerGapDelete()", "diff": ["+", "+\tpublic void testInnerGapDelete()", "+\t\t{", "+\t\t\tassertEquals(\"#0.0\", 8, model1.absOffset());", "+\t\t\tassertEquals(\"#0.0\", 2, model1.absOffset());", "+", "+\t\t \tassertEquals(\"#1.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\", 5, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#2.0\", 5, model1.absOffset());", "+\t\t}", "-\tpublic void testDeleteInsideGap()", "-\t\t\tmodel1.insertGap(15);", "-\t\t\tmodel1.move(-6);", "-\t\t\tmodel1.delete(4);", "-\t\t \tassertTrue(\"#0.0\",model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#0.1\",11, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#0.2\",9,model1.getBlockOffset());", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9cb188fd7e61a43e78f3664d50c91c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelDeleteTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testDeleteInsideGap()", "signatureAfterChange": "  \tpublic void testInnerGapDelete()", "diff": ["+", "+\tpublic void testInnerGapDelete()", "+\t\t{", "+\t\t\tassertEquals(\"#0.0\", 8, model1.absOffset());", "+\t\t\tassertEquals(\"#0.0\", 2, model1.absOffset());", "+", "+\t\t \tassertEquals(\"#1.0\", 2, model1.absOffset());", "+\t\t\tassertEquals(\"#1.1\", 5, model1.currentToken().getSize());", "+\t\t\tassertEquals(\"#2.0\", 5, model1.absOffset());", "+\t\t}", "-\tpublic void testDeleteInsideGap()", "-\t\t\tmodel1.insertGap(15);", "-\t\t\tmodel1.move(-6);", "-\t\t\tmodel1.delete(4);", "-\t\t \tassertTrue(\"#0.0\",model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#0.1\",11, model1.getCursor().current().getSize());", "-\t\t\tassertEquals(\"#0.2\",9,model1.getBlockOffset());", "-\t\t}"]}], "num": 1298}