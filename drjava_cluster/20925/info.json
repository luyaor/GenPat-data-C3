{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00095dfde5a549863952d2a286b92f2b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b755e8cfbd6d8c7bfd3357a53deb4d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 91, "signatureBeforeChange": "      public Type meet(Iterable<? extends Type> ts)", "signatureAfterChange": "      public Type meet(Iterable<? extends Type> ts)", "diff": ["-    return MEET_NORM.value(map(ts, NORMALIZE));", "+    NormSubtyper sub = new NormSubtyper();", "+    return new NormMeeter(sub).value(map(ts, new Normalizer(sub)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83fa1fd052f80cc082d1e6c8abd06a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 88, "signatureBeforeChange": "      public Type join(Iterable<? extends Type> ts)", "signatureAfterChange": "      public Type join(Iterable<? extends Type> ts)", "diff": ["-    return JOIN_NORM.value(map(ts, NORMALIZE));", "+    NormSubtyper sub = new NormSubtyper();", "+    return new NormJoiner(sub).value(map(ts, new Normalizer(sub)));"]}], "num": 20925}