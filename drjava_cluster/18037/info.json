{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c9c54f1906b2e99da226bd1abc2b3e14", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d7afae7f7b3dc8455c1d2cd8c90915", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ab929f2517998893e7ac2a2baadc6213c733962b", "commitAfterChange": "0fe56dbec731a045fe28e9c5bc1a9260c7157f46", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 150, "signatureBeforeChange": "       private void getFilesInDir(File d, List<File> acc, boolean recur)", "signatureAfterChange": "           public boolean accept(File f)", "diff": ["-  private void getFilesInDir(File d, List<File> acc, boolean recur){", "-    if(d.isDirectory()){", "-      File[] fa = d.listFiles();", "-      for(File f: fa){", "-        if(f.isDirectory() && recur){ ", "-          getFilesInDir(f, acc, recur);", "-        }else if(f.isFile()){", "-          acc.add(f);", "-        }", "-      }      ", "-    }else{", "-      acc.add(d);", "-    }", "-  }", "+        files = FileOps.getFilesInDir(dir, openSelector.isRecursive(), new FileFilter(){", "+          public boolean accept(File f){ ", "+            return f.isDirectory() ||", "+              f.isFile() && ", "+              f.getName().endsWith(DrJava.LANGUAGE_LEVEL_EXTENSIONS[DrJava.getConfig().getSetting(LANGUAGE_LEVEL)]);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f91533040bdd21ea3345931f266bd462", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "signatureAfterChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "diff": ["-      for (File f: d.listFiles(filter)) {", "-        if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "-        else if (f.isFile()) acc.add(f);", "+      File[] files = d.listFiles(filter);", "+      if (files!=null) { // listFiles may return null if there's an IO error", "+        for (File f: files) {", "+          if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "+          else if (f.isFile()) acc.add(f);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce6cd748019863e825b3ebcf0f9d59e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "1acb63fa1c578959b54f9766299c6e0a8865f601", "commitAfterChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "signatureAfterChange": "   private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter)", "diff": ["-  private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter){", "-    if(d.isDirectory()){", "-      File[] fa = d.listFiles(filter);", "-      for(File f: fa){", "-        if(f.isDirectory() && recur){ ", "-          getFilesInDir(f, acc, recur, filter);", "-        }else if(f.isFile()){", "-          acc.add(f);", "-        }", "-      }      ", "-    }else{", "-      acc.add(d);", "-    }", "+  private static void getFilesInDir(File d, List<File> acc, boolean recur, FileFilter filter) {", "+    if (d.isDirectory()) {", "+      for (File f: d.listFiles(filter)) {", "+        if (f.isDirectory() && recur) getFilesInDir(f, acc, recur, filter);", "+        else if (f.isFile()) acc.add(f);", "+      }", "+    }      ", "+    else acc.add(d);"]}], "num": 18037}