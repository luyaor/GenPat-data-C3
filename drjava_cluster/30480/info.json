{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a752463595e0c9b1ecc8920ad6e9db6e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3468a25c49607b4553b45c69d79fa284", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/ProcessingDialog.java", "commitBeforeChange": "39a73399844d4efd2d2ebe97954e53d44db0a9b6", "commitAfterChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public ProcessingDialog(Frame parent, String title, String label)", "signatureAfterChange": "    public ProcessingDialog(Frame parent, String title, String label,                           boolean modal)", "diff": ["-    super(parent, title);", "+", "+  public ProcessingDialog(Frame parent, String title, String label,", "+                          boolean modal) {", "+    super(parent, title, modal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb11764039dcc394d91a4f7138fd448", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "facb31d52d0108009578d6a1708ac1dfc68b98b8", "commitAfterChange": "417b6d282f87d7da5aa7274e065294c3e7058851", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public void updateListPane()", "signatureAfterChange": "     public void updateListPane(boolean haveTestsRun)", "diff": ["-    public void updateListPane() {", "+    public void updateListPane(boolean haveTestsRun) {", "-          _updateNoErrors();", "+          _updateNoErrors(haveTestsRun);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e5db2b490a69cbdeee0f83c6ad929a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/EventNotifier.java", "commitBeforeChange": "6222fd84e3aa6c7b8b3da9d73ccf7a9a3370487b", "commitAfterChange": "a6f0da7db6181f31273ee7bf3cfd92ed3fabb503", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void javadocEnded(boolean success, File destDir)", "signatureAfterChange": "   public void javadocEnded(boolean success, File destDir, boolean showFrames)", "diff": ["-  public void javadocEnded(boolean success, File destDir) {", "+  public void javadocEnded(boolean success, File destDir, boolean showFrames) {", "-        _listeners.get(i).javadocEnded(success, destDir);", "+        _listeners.get(i).javadocEnded(success, destDir, showFrames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a62062087bf6bc2425e5301b08f47df", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "34f2ea007a9d228268fe51193dea23995f823c51", "commitAfterChange": "fc5097bf3e220739875860f050e455b4fcf1d859", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   synchronized void scrollToSource(Location location)", "signatureAfterChange": "   synchronized void scrollToSource(Location location, boolean shouldHighlight)", "diff": ["+   */", "+  synchronized void scrollToSource(Location location, boolean shouldHighlight) {", "-    openAndScroll(doc, location);", "+    openAndScroll(doc, location, shouldHighlight);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6925f44db697c76749f400e45aed6f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "6ec50bbad6902867dbbd689ce421d583e985cd75", "commitAfterChange": "40c5d59f4d83560f5b1a6adb2abd1bc3bc016193", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public final void resetInterpreter(File wd)", "signatureAfterChange": "   public final void resetInterpreter(File wd, boolean force)", "diff": ["-  /** Resets the Java interpreter with working directry wd. */", "-  public final void resetInterpreter(File wd) {", "+  /** Resets the Java interpreter with working directory wd. */", "+  public final void resetInterpreter(File wd, boolean force) {", "-    _resetInterpreter(wd);", "+    _resetInterpreter(wd, force);"]}], "num": 30480}