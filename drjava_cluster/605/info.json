{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "666ec3ca024b8cc74cd25e3caca13b7b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ea9b222e7a458487fcf62f7647964d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public void resetInteractionsClassPath()", "signatureAfterChange": "   public void resetInteractionsClassPath()", "diff": ["-    ClassPathVector projectExtras = getExtraClassPath();", "+    Iterable<File> projectExtras = getExtraClassPath();", "-    if (projectExtras != null)  for (URL cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }", "+    if (projectExtras != null)  for (File cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }", "-      for (File f : cp) {", "-        try { _interactionsModel.addExtraClassPath(FileOps.toURL(f)); }", "-        catch(MalformedURLException murle) {", "-          System.out.println(\"File \" + f + \" in your extra classpath could not be parsed to a URL; \" +", "-                             \"it may contain un-URL-encodable characters.\");", "-        }", "-      }", "+      for (File f : cp) { _interactionsModel.addExtraClassPath(f); }", "-      try { _interactionsModel.addProjectFilesClassPath(FileOps.toURL(odd.getSourceRoot())); }", "-      catch(MalformedURLException murle) { /* fail silently */ }", "+      try { _interactionsModel.addProjectFilesClassPath(odd.getSourceRoot()); }", "-        if (sourceRoot != null) _interactionsModel.addExternalFilesClassPath(FileOps.toURL(sourceRoot)); ", "+        if (sourceRoot != null) _interactionsModel.addExternalFilesClassPath(sourceRoot); ", "-      catch(MalformedURLException murle) { /* ignore it */ }", "-    try { _interactionsModel.addProjectFilesClassPath(FileOps.toURL(getProjectRoot())); }", "-    catch(MalformedURLException murle) { /* fail silently */ } ", "+    _interactionsModel.addProjectFilesClassPath(getProjectRoot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1525b556ffd9fea6951e16359e918d38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "c056ab71f347d40179703642e25ff83ac78c70e0", "commitAfterChange": "6e6dc20e393a893a5d9ad55d0b971c8d23c8c73e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 61, "signatureBeforeChange": "      public void testIndentingCorrectLine() throws BadLocationException", "signatureAfterChange": "      public void testIndentingCorrectLine() throws BadLocationException", "diff": ["-    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "-    System.out.println(\"test1Correct = \\n\" + test1Correct + \" \\n length = \" + test1Correct.length());", "-    System.out.println(\"doc = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());", "+//    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "+//    System.out.println(\"test1Correct = \\n\" + test1Correct + \" \\n length = \" + test1Correct.length());", "+//    System.out.println(\"doc = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());"]}], "num": 605}