{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe2525e87febe996dbaacf2a4254c799", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bb428d73d0bc9ab5e627349af356149", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "deb4bbe3644e2d17508378353337903e5f2c956b", "commitAfterChange": "f9f9b40d76f2ccbda12717eda0af359f2105ef7b", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "signatureAfterChange": "   public File getSaveFile(JFileChooser jfc) throws OperationCanceledException", "diff": ["+    File previous = null;", "-    //if (active.isUntitled()) {", "-    try {", "-      String className = active.getFirstTopLevelClassName();", "-      if (!className.equals(\"\")) {", "-        jfc.setSelectedFile(new File(jfc.getCurrentDirectory(), className));", "+    if (active.isUntitled()) {", "+      try {", "+        String className = active.getFirstTopLevelClassName();", "+        if (!className.equals(\"\")) {", "+          jfc.setSelectedFile(new File(jfc.getCurrentDirectory(), className));", "+        }", "+      }", "+      catch (ClassNameNotFoundException e) {", "+        // Don't set selected file", "-    catch (ClassNameNotFoundException e) {", "-      // Don't set selected file", "+    else {", "+      // not untitled, select previous name", "+      previous = active.getRawFile();", "+      jfc.setSelectedFile(previous);", "-    return getChosenFile(jfc, rc);", "+    return getChosenFile(jfc, rc, previous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a98c218d84b2a4a1f57071002aba4fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "4dc5ace86e9b2c575f2b09ebb783f4d8d9db5e9a", "commitAfterChange": "798fcd5fdec1efc6698cb1c49cd62bdab41daffc", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "   final public List<FormalParameter> formalParameters() throws ParseException", "signatureAfterChange": "   final public List<FormalParameter> formalParameters() throws ParseException", "diff": ["+    FormalParameter lastVarArgsParam = null;", "-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case BOOLEAN:", "-    case BYTE:", "-    case CHAR:", "-    case DOUBLE:", "-    case FINAL:", "-    case FLOAT:", "-    case INT:", "-    case LONG:", "-    case SHORT:", "-    case IDENTIFIER:", "+    if (jj_2_15(2147483647)) {", "+    } else {", "+      ;", "+    }", "+    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+    case BOOLEAN:", "+    case BYTE:", "+    case CHAR:", "+    case DOUBLE:", "+    case FINAL:", "+    case FLOAT:", "+    case INT:", "+    case LONG:", "+    case SHORT:", "+    case IDENTIFIER:", "+      lastVarArgsParam = varArgsFormalParameter();", "+           lastFormalParameterIsVarArgs = (lastVarArgsParam != null);", "+           if(lastFormalParameterIsVarArgs) {", "+             list.add(lastVarArgsParam);", "+           }"]}], "num": 20435}