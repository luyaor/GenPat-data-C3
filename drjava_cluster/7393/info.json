{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1677b776803e5e371a8dcc93f09d5b6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbcd20f0c7dc710612c3f930f3021fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueWithValueTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "                 public void testForArrayAccess()", "signatureAfterChange": "                 public void testForArrayAccess()", "diff": ["-                      SourceInfo.NO_INFO);", "+                      SourceInfo.NONE);", "-      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NONE));", "-      ArrayAccess a1 = new ArrayAccess(SourceInfo.NO_INFO, ", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a1 = new ArrayAccess(SourceInfo.NONE, ", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));", "-      ArrayAccess a2 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new PlusExpression(SourceInfo.NO_INFO,", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 12),", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 22)));", "+      ArrayAccess a2 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new PlusExpression(SourceInfo.NONE,", "+                                                          new IntegerLiteral(SourceInfo.NONE, 12),", "+                                                          new IntegerLiteral(SourceInfo.NONE, 22)));", "-      ArrayAccess a3 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleMethodInvocation(SourceInfo.NO_INFO,", "-                                                                  new Word(SourceInfo.NO_INFO, \"makeArray\"),", "-                                                                  new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a3 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleMethodInvocation(SourceInfo.NONE,", "+                                                                  new Word(SourceInfo.NONE, \"makeArray\"),", "+                                                                  new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7deaf5775d7b620098de2d1eabf31af8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public void testForArrayAccess()", "signatureAfterChange": "          public void testForArrayAccess()", "diff": ["-                      SourceInfo.NO_INFO);", "+                      SourceInfo.NONE);", "-      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NO_INFO));", "+      MethodData makeArray = new MethodData(\"makeArray\", _privateMav, new TypeParameter[0], intArray, new VariableData[0], new String[0], _ta._data.getSymbolData(), new NullLiteral(SourceInfo.NONE));", "-      ArrayAccess a1 = new ArrayAccess(SourceInfo.NO_INFO, ", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a1 = new ArrayAccess(SourceInfo.NONE, ", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));", "-      ArrayAccess a2 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"variable1\")),", "-                                       new PlusExpression(SourceInfo.NO_INFO,", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 12),", "-                                                          new IntegerLiteral(SourceInfo.NO_INFO, 22)));", "+      ArrayAccess a2 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"variable1\")),", "+                                       new PlusExpression(SourceInfo.NONE,", "+                                                          new IntegerLiteral(SourceInfo.NONE, 12),", "+                                                          new IntegerLiteral(SourceInfo.NONE, 22)));", "-      ArrayAccess a3 = new ArrayAccess(SourceInfo.NO_INFO,", "-                                       new SimpleMethodInvocation(SourceInfo.NO_INFO,", "-                                                                  new Word(SourceInfo.NO_INFO, \"makeArray\"),", "-                                                                  new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0])),", "-                                       new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"intVar\")));", "+      ArrayAccess a3 = new ArrayAccess(SourceInfo.NONE,", "+                                       new SimpleMethodInvocation(SourceInfo.NONE,", "+                                                                  new Word(SourceInfo.NONE, \"makeArray\"),", "+                                                                  new ParenthesizedExpressionList(SourceInfo.NONE, new Expression[0])),", "+                                       new SimpleNameReference(SourceInfo.NONE, new Word(SourceInfo.NONE, \"intVar\")));"]}], "num": 7393}