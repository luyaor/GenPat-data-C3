{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3b62d475910193617cd6c76d4615394", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d3e129e27b6aeca57a2a0bae08da737", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "b18f1653904355c80d15c949af97466afd1bb285", "commitAfterChange": "3f3a8c8fcf83f21f81d279554b4af7fbd0689bb1", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "      public void testIndentingCorrectLine() throws BadLocationException", "signatureAfterChange": "      public void testIndentingCorrectLine() throws BadLocationException", "diff": ["-//    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "-//    System.out.println(\"test1 = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());", "+    System.out.println(\"test1 = \\n\" + test1 + \"\\n length = \" + test1.length());", "+    System.out.println(\"test1Correct = \\n\" + test1Correct + \" \\n length = \" + test1Correct.length());", "+    System.out.println(\"doc = \\n\" + doc.getText() + \"\\n length = \" + doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d3ed2ac499586a81be8d88c9843dec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/RMIInteractionsModel.java", "commitBeforeChange": "a30a5503c4bed745d3bf75a4b449d026f5c00795", "commitAfterChange": "18853ae3d062d9694905fb3ffaa507db78319f52", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String getVariableToString(String var)", "signatureAfterChange": "   public Pair<String,String> getVariableToString(String var)", "diff": ["-  public String getVariableToString(String var) {", "-    Option<String> result = _jvm.getVariableToString(var);", "-    return result.unwrap(\"\");", "-  }", "+  public Pair<String,String> getVariableToString(String var) {", "+    System.out.println(\"getVariableToString: \"+var);", "+    Option<Pair<String,String>> result = _jvm.getVariableToString(var);", "+    System.out.println(\"\\tresult.isNone? \"+result.isNone());", "+    Pair<String,String> retval = result.unwrap(new Pair<String,String>(\"\",\"\"));", "+    System.out.println(\"\\tretval: \"+retval);", "+    return retval;"]}], "num": 12083}