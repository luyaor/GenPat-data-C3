{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "59e48589b955c0d89457fea2cd043b14", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eaf357d1d830eefea7c6b79cec66bfa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private int _updateInsideBlockComment( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateInsideBlockComment     (ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  private int _updateInsideBlockComment(", "-\t\tModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn -1;", "-", "-\t\t\t_combineCurrentAndNextIfFind(\"*\", \"/\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"*\",\"//\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"*\",\"/*\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "-\t\t\t", "-\t\t\t\t_splitCurrentIfCommentBlock(false, false,copyCursor);", "-", "-\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\tif (type.equals(\"*/\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t", "-\t\t\t\telse", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.INSIDE_BLOCK_COMMENT);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.INSIDE_BLOCK_COMMENT;", "-\t\t\t\t\t\t//_updateInsideBlockComment(copyCursor);", "-\t\t\t\t\t}", "-\t\t}", "+  private int _updateInsideBlockComment", "+    (ModelList<ReducedToken>.Iterator copyCursor)", "+  {", "+    if (copyCursor.atEnd()) {", "+      return -1;", "+    }", "+    _combineCurrentAndNextIfFind(\"*\", \"/\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"*\",\"//\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"*\",\"/*\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+    ", "+    _splitCurrentIfCommentBlock(false, false,copyCursor);", "+    ", "+    String type = copyCursor.current().getType();", "+    if (type.equals(\"*/\")) {", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    ", "+    else {", "+      copyCursor.current().setState(Brace.INSIDE_BLOCK_COMMENT);", "+      copyCursor.next();", "+      return Brace.INSIDE_BLOCK_COMMENT;", "+      //_updateInsideBlockComment(copyCursor);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cff52fe25171e2e931b72dab9c9d37b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   private int _updateInsideBlockComment( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateInsideBlockComment     (ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  private int _updateInsideBlockComment(", "-\t\tModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn -1;", "-", "-\t\t\t_combineCurrentAndNextIfFind(\"*\", \"/\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"*\",\"//\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"*\",\"/*\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "-\t\t\t", "-\t\t\t\t_splitCurrentIfCommentBlock(false, false,copyCursor);", "-", "-\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\tif (type.equals(\"*/\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t", "-\t\t\t\telse", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.INSIDE_BLOCK_COMMENT);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.INSIDE_BLOCK_COMMENT;", "-\t\t\t\t\t\t//_updateInsideBlockComment(copyCursor);", "-\t\t\t\t\t}", "-\t\t}", "+  private int _updateInsideBlockComment", "+    (ModelList<ReducedToken>.Iterator copyCursor)", "+  {", "+    if (copyCursor.atEnd()) {", "+      return -1;", "+    }", "+    _combineCurrentAndNextIfFind(\"*\", \"/\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"*\",\"//\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"*\",\"/*\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+    ", "+    _splitCurrentIfCommentBlock(false, false,copyCursor);", "+    ", "+    String type = copyCursor.current().getType();", "+    if (type.equals(\"*/\")) {", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    ", "+    else {", "+      copyCursor.current().setState(Brace.INSIDE_BLOCK_COMMENT);", "+      copyCursor.next();", "+      return Brace.INSIDE_BLOCK_COMMENT;", "+      //_updateInsideBlockComment(copyCursor);", "+    }", "+  }"]}], "num": 23283}