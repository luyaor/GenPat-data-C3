{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b84d57d0aefe51eb09e0c80c717287d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ebe4ccf760ba93f16d876ce36903584", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 346, "methodNumberAfterChange": 346, "signatureBeforeChange": "         public boolean containsClass(Type t, final String name)", "signatureAfterChange": "         public boolean containsClass(Type t, final String name)", "diff": ["-//    System.out.println(\"Testing if class \" + name + \" exists in type \" + userRepresentation(t));", "+    debug.logStart(new String[]{\"t\",\"name\"}, wrap(t), name); try {", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c0f4bb69972b92414c6a771c1bc5615", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "signatureAfterChange": "   public StaticFieldReference lookupStaticField(Type t, final String name)     throws InvalidTargetException, UnmatchedLookupException", "diff": ["-//    System.out.println(\"\\nLooking up static field \" + name + \" in type \" + userRepresentation(t));", "+    debug.logStart(new String[]{\"t\", \"name\"}, wrap(t), name); try {", "+    ", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8382731e60013d886e65109406ae58c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": "   public ObjectFieldReference lookupField(final Expression object, final String name)     throws InvalidTargetException, UnmatchedLookupException", "signatureAfterChange": "   public ObjectFieldReference lookupField(final Expression object, final String name)     throws InvalidTargetException, UnmatchedLookupException", "diff": ["-//    System.out.println(\"\\nLooking up field \" + name + \" in type \" + ", "-//                       userRepresentation(NodeProperties.getType(object)));", "+    debug.logStart(new String[]{\"t\", \"name\"}, wrap(NodeProperties.getType(object)), name); try {", "+", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0832cd63a6b1657e80642bd91470c37", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 292, "methodNumberAfterChange": 292, "signatureBeforeChange": "      private boolean containsMethod(Type t, final String name, final boolean requireStatic)", "signatureAfterChange": "      private boolean containsMethod(Type t, final String name, final boolean requireStatic)", "diff": ["-//    System.out.println(\"Testing if method \" + name + \" exists in type \" + userRepresentation(t));", "+    debug.logStart(new String[]{\"t\",\"name\",\"requireStatic\"}, wrap(t), name, requireStatic); try {", "+    ", "+        debug.logValues(new String[]{\"t\",\"methods\"}, wrap(t), t.ofClass().declaredMethods());", "+    ", "+    } finally { debug.logEnd(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb836685c42f959f961b8b9af0e4226c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "46bcadf84d25b13a4fedcd62704db0f1ba315fe0", "commitAfterChange": "900f0639b0094b4c968af41d5a8352411b9f32cd", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": "      private boolean containsField(Type t, final String name, final boolean requireStatic)", "signatureAfterChange": "      private boolean containsField(Type t, final String name, final boolean requireStatic)", "diff": ["-//    System.out.println(\"Testing if field \" + name + \" exists in type \" + userRepresentation(t));", "+    debug.logStart(new String[]{\"t\", \"name\", \"requireStatic\"}, wrap(t), name, requireStatic); try {", "+    ", "+    ", "+    } finally { debug.logEnd(); }"]}], "num": 29008}