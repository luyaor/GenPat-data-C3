{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "961ca11ddfa427053b06a2ee03adeb34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3bea31ffc4b2ab3a8fd2a9c04e97c97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r   public void removeRegion(final R r)", "signatureAfterChange": "   public void removeRegion(final R r)", "diff": ["-    */\r", "-  public void removeRegion(final R r) {\r", "-    // Only change GUI from event-dispatching thread\r", "-    _changeState.setLastAdded(null);\r", "-    Runnable doCommand = new Runnable() {\r", "-      public void run() {\r", "-        File file = r.getDocument().getRawFile();\r", "-        \r", "-        DefaultMutableTreeNode regDocNode = new DefaultMutableTreeNode(file);\r", "-        \r", "-        // Find the document node for this region\r", "-        Enumeration documents = _regionRootNode.children();\r", "-        boolean found = false;\r", "-        while (! found && documents.hasMoreElements()) {\r", "-          DefaultMutableTreeNode doc = (DefaultMutableTreeNode) documents.nextElement();\r", "-          if (doc.getUserObject().equals(regDocNode.getUserObject())) {\r", "-            // Find the correct start offset node for this region\r", "-            Enumeration existingRegions = doc.children();\r", "-            while (existingRegions.hasMoreElements()) {\r", "-              DefaultMutableTreeNode existing = (DefaultMutableTreeNode) existingRegions.nextElement();\r", "-              if (((RegionTreeUserObj) existing.getUserObject()).region().getStartOffset() == r.getStartOffset()) {\r", "-                _regTreeModel.removeNodeFromParent(existing);\r", "-                // notify\r", "-                if (doc.getChildCount() == 0) {\r", "-                  // this document has no more regions, remove it\r", "-                  _regTreeModel.removeNodeFromParent(doc);\r", "-                }\r", "-                found = true;\r", "-                break;\r", "-              }\r", "-            }\r", "-          }\r", "-        }\r", "-        _changeState.updateButtons();\r", "-      }\r", "-    };\r", "-    Utilities.invokeLater(doCommand);\r", "-  }\r", "+    */", "+  public void removeRegion(final R r) {", "+    assert EventQueue.isDispatchThread();", "+    _changeState.setLastAdded(null);", "+", "+    DefaultMutableTreeNode regionNode = r.getTreeNode();", "+    OpenDefinitionsDocument doc = r.getDocument();", "+    ", "+//    DefaultMutableTreeNode docNode = _regionManager.getTreeNode(doc);", "+    DefaultMutableTreeNode parent = (DefaultMutableTreeNode) regionNode.getParent();  // TreeNode for document", "+    _regTreeModel.removeNodeFromParent(regionNode);", "+    ", "+    // check for empty subtree for this document (rooted at parent)", "+    if (parent.getChildCount() == 0)", "+      // this document has no more regions, remove it", "+      _regTreeModel.removeNodeFromParent(parent);", "+    ", "+    _changeState.updateButtons();", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea18ff4886d73bc3c6f0a9238428cf45", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RegionsTreePanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r   public void removeRegions(final OpenDefinitionsDocument odd)", "signatureAfterChange": "   public void removeRegions(final OpenDefinitionsDocument odd)", "diff": ["-  /** Remove all regions for this document from the tree. Must be executed in event thread. */\r", "-  public void removeRegions(final OpenDefinitionsDocument odd) {\r", "-    _changeState.setLastAdded(null);\r", "-    // Only change GUI from event-dispatching thread\r", "-    Runnable doCommand = new Runnable() {\r", "-      public void run() {\r", "-        File file = odd.getRawFile();\r", "-        \r", "-        DefaultMutableTreeNode regDocNode = new DefaultMutableTreeNode(file);\r", "-        \r", "-        // Find the document node for this region\r", "-        Enumeration documents = _regionRootNode.children();\r", "-        while (documents.hasMoreElements()) {\r", "-          DefaultMutableTreeNode doc = (DefaultMutableTreeNode)documents.nextElement();\r", "-          if (doc.getUserObject().equals(regDocNode.getUserObject())) {\r", "-            while(doc.getChildCount()>0) {\r", "-              DefaultMutableTreeNode existing = (DefaultMutableTreeNode)doc.getFirstChild();\r", "-              @SuppressWarnings(\"unchecked\") R r = ((RegionTreeUserObj<R>)existing.getUserObject()).region();\r", "-              _regTreeModel.removeNodeFromParent(existing);\r", "-            }\r", "-            _regTreeModel.removeNodeFromParent(doc);\r", "-          }\r", "-        }\r", "-        _changeState.updateButtons();\r", "-      }\r", "-    };\r", "-    Utilities.invokeLater(doCommand);\r", "-  }\r", "+  /** Remove all regions for the given document from the tree. Must be executed in event thread. */", "+  public void removeRegions(final OpenDefinitionsDocument odd) {", "+    assert EventQueue.isDispatchThread();", "+    _changeState.setLastAdded(null);", "+    ", "+    DefaultMutableTreeNode docNode = _regionManager.getTreeNode(odd);", "+    ", "+    // Find the document node for this region", "+", "+    while(docNode.getChildCount() > 0) {", "+      DefaultMutableTreeNode node = (DefaultMutableTreeNode)docNode.getFirstChild();", "+      _regTreeModel.removeNodeFromParent(node);", "+    }", "+    _regTreeModel.removeNodeFromParent(docNode);", "+    _changeState.updateButtons();", "+  }"]}], "num": 11488}