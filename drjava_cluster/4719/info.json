{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a732b4675965a0e4398838d2152d0b9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2889eeba1dcffe8a5814f29b3b868d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "a6b0a623369310bca609596a45d42dfc11ddae97", "commitAfterChange": "f0c06f4ecb55d3ad2147a0571c9f9cb7a469ab29", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testBooleanOps() throws ExceptionReturnedException", "signatureAfterChange": "   public void testBooleanOps() throws ExceptionReturnedException", "diff": ["-      Pair.make(\"true && false\", new Boolean(false)), Pair.make(\"true && true\", ", "-          new Boolean(true)), ", "+      Pair.make(\"true && false\", Boolean.FALSE), Pair.make(\"true && true\", ", "+          Boolean.TRUE), ", "-      Pair.make(\"true || true\", new Boolean(true)), Pair.make(\"false || true\", new Boolean(true)), ", "-          Pair.make(\"false || false\", new Boolean(false)), ", "+      Pair.make(\"true || true\", Boolean.TRUE), Pair.make(\"false || true\", Boolean.TRUE), ", "+          Pair.make(\"false || false\", Boolean.FALSE), ", "-      Pair.make(\"!true\", new Boolean(false)), Pair.make(\"!false\", new Boolean(true)), ", "+      Pair.make(\"!true\", Boolean.FALSE), Pair.make(\"!false\", Boolean.TRUE), ", "-      Pair.make(\"true == true\", new Boolean(true)), Pair.make(\"false == true\", new Boolean(false)), ", "-          Pair.make(\"false == false\", new Boolean(true)), ", "+      Pair.make(\"true == true\", Boolean.TRUE), Pair.make(\"false == true\", Boolean.FALSE), ", "+          Pair.make(\"false == false\", Boolean.TRUE), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c11541f5d6d8b05ca4d1ab16d706b14", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaInterpreterTest.java", "commitBeforeChange": "c3a494eaa49a0afdbb5b72550dfe257e772377ca", "commitAfterChange": "3ed3053f161753fc80182783c4ecd7f0d8aa1ae2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testBooleanOps() throws InterpreterException", "signatureAfterChange": "   @SuppressWarnings({\"unchecked\", \"rawtypes\"})   public void testBooleanOps() throws InterpreterException", "diff": ["-      Pair.make(\"true && false\", Boolean.FALSE), Pair.make(\"true && true\",", "-          Boolean.TRUE),", "+      Pair.make(\"true && false\", (Object) Boolean.FALSE), Pair.make(\"true && true\",", "+          (Object) Boolean.TRUE),", "-      Pair.make(\"true || true\", Boolean.TRUE), Pair.make(\"false || true\", Boolean.TRUE),", "-          Pair.make(\"false || false\", Boolean.FALSE),", "+      Pair.make(\"true || true\", (Object) Boolean.TRUE), Pair.make(\"false || true\", (Object) Boolean.TRUE),", "+          Pair.make(\"false || false\", (Object) Boolean.FALSE),", "-      Pair.make(\"!true\", Boolean.FALSE), Pair.make(\"!false\", Boolean.TRUE),", "+      Pair.make(\"!true\", (Object) Boolean.FALSE), Pair.make(\"!false\", (Object) Boolean.TRUE),", "-      Pair.make(\"true == true\", Boolean.TRUE), Pair.make(\"false == true\", Boolean.FALSE),", "-          Pair.make(\"false == false\", Boolean.TRUE),", "+      Pair.make(\"true == true\", (Object) Boolean.TRUE), Pair.make(\"false == true\", (Object) Boolean.FALSE),", "+          Pair.make(\"false == false\", (Object) Boolean.TRUE),", "-      Pair.make(\"false ^ false\", Boolean.valueOf(false ^ false)), Pair.make(\"false ^ true \",", "-          Boolean.valueOf(false ^ true))", "+      Pair.make(\"false ^ false\", (Object) Boolean.valueOf(false ^ false)), Pair.make(\"false ^ true \",", "+          (Object) Boolean.valueOf(false ^ true))"]}], "num": 4719}