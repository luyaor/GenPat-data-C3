{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f0ddb868d6bddcee0c1be511a7bb9b5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a918c4b78706cd8b3469809c142665ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitTestManager.java", "commitBeforeChange": "e8f48651b4fb31b2a1907635fbd654b3f66a98b2", "commitAfterChange": "2499b0018a7f137bb1baaaf2d077c26486e3f12e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "signatureAfterChange": "   private JUnitError _makeJUnitError(TestFailure failure, List<String> classNames,                                      boolean isError, List<File> files)", "diff": ["-    String className = testString.substring(firstIndex, secondIndex);", "+    ", "+    String className1 = testString.substring(firstIndex, secondIndex);", "+    String className2 = testString.substring(0, firstIndex-1);", "+    String className;", "+    if(firstIndex == secondIndex){", "+      className = className2;", "+    }else{", "+      className = className1;", "+    }", "+    ", "+", "+//    for dubugging    ", "+//    try{", "+//      File temp = File.createTempFile(\"asdf\", \"java\", new File(\"/home/awulf\"));", "+//      FileWriter writer = new FileWriter(temp);", "+//      writer.write(\"testString: \" + testString + \"\\n\");", "+//      writer.write(\"old className: \" + className1 + \"\\n\");", "+//      writer.write(\"new className: \" + className2 + \"\\n\");", "+//      writer.write(\"file: \" + file + \"\\n\");", "+//      writer.write(\"lineNum: \" + lineNum + \"\\n\");", "+//      writer.write(\"exception: \" + exception + \"\\n\");", "+//      writer.write(\"!isFailure: \" + !isFailure + \"\\n\");", "+//      writer.write(\"testName: \" + testName + \"\\n\");", "+//      writer.write(\"className: \" + className + \"\\n\");", "+//      writer.write(\"stackTrace: \" + stackTrace + \"\\n\");", "+//      writer.close();", "+//    }catch(IOException e){", "+//      ", "+//    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccc81cd137c4f9482a1c07e7f0c87a41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-windows/edu/rice/cs/drjava/platform/WindowsRegistry.java", "commitBeforeChange": "1c816952b5b8421dc41f789510e8d7ee742c6828", "commitAfterChange": "5d5ee31a35adeb92d7addaffa7abf0c54d001a85", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public static void delKey(int hKey, String subKey) throws RegistryException", "signatureAfterChange": "\r   public static void delKey(int hKey, String subKey) throws RegistryException", "diff": ["-    * @param subKey subkey name */", "-  public static void delKey(int hKey, String subKey) throws RegistryException {", "-    int handle = openKey(hKey, subKey, KEY_ALL_ACCESS);", "-    QueryInfoResult qi = queryInfoKey(handle);", "-    String s;", "-    for(int i=0; i<qi.valueCount; ++i) {", "-      s = enumValue(handle, i, qi.maxValueLength+1);", "-      deleteValue(handle, s);", "-    }", "-    for(int i=0; i<qi.subkeyCount; ++i) {", "-      s = enumKey(handle, i, qi.maxSubkeyLength+1);", "-      delKey(handle, s);", "-    }", "-    closeKey(handle);", "-    deleteKey(hKey, subKey);", "-  }", "+    * @param subKey subkey name */\r", "+  public static void delKey(int hKey, String subKey) throws RegistryException {\r", "+    int handle = openKey(hKey, subKey, KEY_ALL_ACCESS);\r", "+    QueryInfoResult qi = queryInfoKey(handle);\r", "+    String s;\r", "+    for(int i=0; i<qi.valueCount; ++i) {\r", "+      s = enumValue(handle, i, qi.maxValueLength+1);\r", "+      if (s!=null) deleteValue(handle, s);\r", "+    }\r", "+    for(int i=0; i<qi.subkeyCount; ++i) {\r", "+      s = enumKey(handle, i, qi.maxSubkeyLength+1);\r", "+      if (s!=null) delKey(handle, s);\r", "+    }\r", "+    flushKey(handle);\r", "+    closeKey(handle);\r", "+    deleteKey(hKey, subKey);\r", "+  }\r"]}], "num": 21396}