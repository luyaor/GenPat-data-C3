{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c84ffb6fbf9a2a605c3ca13f1b05946", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4419d6c42d401920251576e032e57a9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "bdf0d961e3094e45012183b3b2277f169c5827d7", "commitAfterChange": "8782e19ccfa5357f9b140c38d08e98757ee04270", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "         private void kickOut(boolean isClosing)", "signatureAfterChange": "         private void kickOut(boolean isClosing)", "diff": ["-      if (! isClosing) {", "-        /* virtualize this document */", "+      synchronized(_dmLock) {", "+        if (! isClosing) {", "+          /* virtualize this document */", "-        _rec.saveDocInfo(_doc);", "+          _rec.saveDocInfo(_doc);", "+        }", "+        if (_doc != null) {", "+          _doc.close();  // done elsewhere when isClosing is true?", "+          _doc = null;", "+        }", "+        _stat = NOT_IN_QUEUE;", "-      if (_doc != null) {", "-        _doc.close();  // done elsewhere when isClosing is true?", "-        _doc = null;", "-      }", "-      _stat = NOT_IN_QUEUE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52da706ca77252462646b82672c8d606", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "   public void addFinalizationListener(FinalizationListener<DefinitionsDocument> fl)", "signatureAfterChange": "   public void addFinalizationListener(FinalizationListener<DefinitionsDocument> fl)", "diff": ["-    _finalizationListeners.add(fl);", "+    synchronized (_finalizationListeners) { _finalizationListeners.add(fl); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c7bd84f605d25a28448f89f4839c63e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "76c0b2960b62020d46b810955623e0af759eee20", "commitAfterChange": "936042cad9bfa0086510cc58a96357306371fb07", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 183, "signatureBeforeChange": "          public void logCompileStart()", "signatureAfterChange": "          public void logCompileStart()", "diff": ["-    public void logCompileStart() {  _compileDone = false; }", "+    public void logCompileStart() {", "+      synchronized(_compileLock) { _compileDone = false; }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75665eca18b5ffb751ca81a36b2fd985", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public final void interpret(String toEval)", "signatureAfterChange": "   public final void interpret(String toEval)", "diff": ["-   */", "+   *  @param toEval command to be evaluated. */", "-    _interpreterUsed = true;", "-    _interpret(toEval);", "+    synchronized (_interpreterLock) {", "+      _interpreterUsed = true;", "+      _interpret(toEval);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f04206799b303fb6b1e6191cafeaf20", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6d55d86705248616cac5b324a7c528485ceb6104", "commitAfterChange": "d9483f6c228cd09f3431ad6b50a3d96bdaf83832", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "     public void remAuxFile(File file)", "signatureAfterChange": "     public void remAuxFile(File file)", "diff": ["-      int newLen = _auxFiles.length - 1;", "-      File[] newAuxFiles = new File[newLen];", "-      try {", "-        int j = 0;", "-        for (File f: _auxFiles) {", "-          if (! f.equals(file)) {", "-            newAuxFiles[j] = file;", "-            j++;", "+      synchronized(_auxFiles) {", "+        int newLen = _auxFiles.length - 1;", "+        File[] newAuxFiles = new File[newLen];", "+        try {", "+          int j = 0;", "+          for (File f: _auxFiles) {", "+            if (! f.equals(file)) {", "+              newAuxFiles[j] = file;", "+              j++;", "+            }", "+          if (j < newLen) throw new IllegalStateException(\"auxFiles list contain two copies of \" + file);", "+          _auxFiles = newAuxFiles;", "-        if (j < newLen) throw new IllegalStateException(\"auxFiles list contain two copies of \" + file);", "-        _auxFiles = newAuxFiles;", "-      }", "-      catch(Exception e) { // negative array size or index out of bounds", "-        throw new UnexpectedException(e);", "+        catch(Exception e) { // negative array size or index out of bounds", "+          throw new UnexpectedException(e);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9389bb66545610d24ba754de9702e5e9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void enableRestart()", "signatureAfterChange": "   public void enableRestart()", "diff": ["+  /** Re-enables restarting the slave if it has been turned off by repeated startup failures. */", "+  public void enableRestart() {", "+    synchronized (_startupLock) { _restart = true; }", "+  }", "-  /** ReEnables restarting the slave if it has been turned off by repeated startup failures. */", "-  public void enableRestart() { _restart = true; }"]}], "num": 11700}