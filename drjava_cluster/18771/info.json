{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1aa4f192c043f373b198e7fe0e0ab64c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241d5abc56d46eec37e484b75a0eb68a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "          protected void handleSlaveConnected()", "signatureAfterChange": "          @Override protected void handleSlaveConnected(SlaveRemote slave)", "diff": ["-    protected void handleSlaveConnected() {", "-      TestSlaveRemote slave = (TestSlaveRemote) getSlave();", "-      assertTrue(\"slave is set\", slave != null);", "-      assertTrue(\"startUp not in progress\", ! isStartupInProgress());", "+    @Override protected void handleSlaveConnected(SlaveRemote slave) {", "-      synchronized(_connectedLock) { ", "-        _connected = true;", "-        _connectedLock.notify(); ", "+      synchronized(_slaveLock) {", "+        _slave = (TestSlaveRemote) slave;", "+        _slaveLock.notify();", "-      _log.log(\"_handleSlaveConnected() finished\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6ed4e5ce30c0167b8221dbbc0965e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/HashRelation.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": "      public void clear()", "signatureAfterChange": "      @Override public void clear()", "diff": ["-  ", "-  public void clear() {", "-    _pairs.clear();", "-    if (_firstIndex != null) { _firstIndex.clear(); }", "-    if (_secondIndex != null) { _secondIndex.clear(); }", "-  }", "+  @Override public void clear() {", "+    if (!_firstIndex.isEmpty()) {", "+      _firstIndex.cleared();", "+      _secondIndex.cleared();"]}], "num": 18771}