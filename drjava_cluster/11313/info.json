{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94a8c096c33e2ed842db66bb6abc968e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a79938f456f16bd8ca84e39e4358ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "8d3cdbacfda748aaaf1451c3632bfbbb860b1d39", "commitAfterChange": "69a380647f3d586f130ea02ad1e8381a390045e3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    //DJError[] errors = _model.getCompileErrors();", "-", "-    //StringBuffer buf = new StringBuffer();", "-    //for (int i = 0; i < errors.length; i++) {", "-    //  buf.append(\"\\nerror #\" + i + \": \" + errors[i]);", "-    //}", "-", "-    assertEquals(name + \"compile errors > 0? numErrors =\" + numErrors, b, numErrors > 0);", "+    ", "+    assertEquals(name + \" compile errors > 0 ? numErrors = \" + numErrors, b, numErrors > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a78581614abb281d5dadc8fde6feae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "signatureAfterChange": "    protected void assertCompileErrorsPresent(String name, boolean b)", "diff": ["-    if (name.length() > 0) {", "-      name += \": \";", "-    }", "+    if (name.length() > 0)  name += \": \";", "-    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors,", "-                 b,", "-                 numErrors > 0);", "+    assertEquals(name + \"compile errors > 0? numErrors=\" + numErrors, b, numErrors > 0);"]}], "num": 11313}