{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ce93e313ce44039083665ff90832265", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b167dd2a1d0a75b844949a11445aa3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "   public Expression checkAssignmentStaticRules(Type lc1, Type rc1,                                                Node node, Expression v)", "signatureAfterChange": "   public Expression checkAssignmentStaticRules(Class<?> lc, Class<?> rc,                                                  Node node, Expression v)", "diff": ["-  public Expression checkAssignmentStaticRules(Type lc1, Type rc1,", "-                                               Node node, Expression v) {", "-    Class<?> lc = (Class<?>)lc1;", "-    Class<?> rc = (Class<?>)rc1;", "-    ", "+  public Expression checkAssignmentStaticRules(Class<?> lc, Class<?> rc,", "+                                                 Node node, Expression v) {", "-        if (rc.isPrimitive()) {", "-          Type boxedRc1 = _correspondingRefClass(rc);", "-          Class<?> boxedRc = (Class<?>)boxedRc1;", "-          if (lc.isAssignableFrom(boxedRc)) return _box(v,boxedRc);", "-          if (TigerUtilities.boxesTo(rc, lc)) return _box(v, lc); /* I think this statement is unnecessary.  Corky 6/19/04 */", "-          throw new ExecutionError(\"assignment.types\", node);", "-        }", "+          if (rc.isPrimitive()) {", "+            Class<?> boxedRc = _correspondingRefClass(rc);", "+            if (lc.isAssignableFrom(boxedRc)) return _box(v,boxedRc);", "+            if (TigerUtilities.boxesTo(rc, lc)) return _box(v, lc); /* I think this statement is unnecessary.  Corky 6/19/04 */", "+            throw new ExecutionError(\"assignment.types\", node);", "+          }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376d440f170be683310fdb2f2cbd7da7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "   public Expression checkAssignmentStaticRules(Class<?> lc, Class<?> rc,                                                  Node node, Expression v)", "signatureAfterChange": "   public Expression checkAssignmentStaticRules(Type lc1, Type rc1,                                                Node node, Expression v)", "diff": ["-  public Expression checkAssignmentStaticRules(Class<?> lc, Class<?> rc,", "-                                                 Node node, Expression v) {", "+  public Expression checkAssignmentStaticRules(Type lc1, Type rc1,", "+                                               Node node, Expression v) {", "+    Class<?> lc = (Class<?>)lc1;", "+    Class<?> rc = (Class<?>)rc1;", "+    ", "-          if (rc.isPrimitive()) {", "-            Class<?> boxedRc = _correspondingRefClass(rc);", "-            if (lc.isAssignableFrom(boxedRc)) return _box(v,boxedRc);", "-            if (TigerUtilities.boxesTo(rc, lc)) return _box(v, lc); /* I think this statement is unnecessary.  Corky 6/19/04 */", "-            throw new ExecutionError(\"assignment.types\", node);", "-          }", "+        if (rc.isPrimitive()) {", "+          Type boxedRc1 = _correspondingRefClass(rc);", "+          Class<?> boxedRc = (Class<?>)boxedRc1;", "+          if (lc.isAssignableFrom(boxedRc)) return _box(v,boxedRc);", "+          if (TigerUtilities.boxesTo(rc, lc)) return _box(v, lc); /* I think this statement is unnecessary.  Corky 6/19/04 */", "+          throw new ExecutionError(\"assignment.types\", node);", "+        }"]}], "num": 18679}