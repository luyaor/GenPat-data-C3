{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "408675288ffd4b95f1a5588a07cb171c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6eb544b28c75f7f4417ee97f583e02e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(File[] sourceRoots, File[] files, File buildDir) throws IOException", "diff": ["-    ClasspathVector extraClasspath = new ClasspathVector();", "-    if (_model.getFileGroupingState().isProjectActive()) ", "-      extraClasspath.addAll(_model.getFileGroupingState().getExtraClasspath());", "+    ClassPathVector extraClassPath = new ClassPathVector();", "+    if (_model.isProjectActive()) ", "+      extraClassPath.addAll(_model.getExtraClassPath());", "-    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClasspath.add(f);", "+    for (File f : DrJava.getConfig().getSetting(OptionConstants.EXTRA_CLASSPATH)) extraClassPath.add(f);", "-    compiler.setExtraClassPath(extraClasspath);", "+    compiler.setExtraClassPath(extraClassPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5aa27c8e450a1f2c4ea8efc80072a13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void testDebugSourcepath() throws Exception", "signatureAfterChange": "   public void testDebugSourcepath() throws Exception", "diff": ["-    StepTestListener debugListener = new StepTestListener();", "+    final StepTestListener debugListener = new StepTestListener();", "-    OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\", DEBUG_CLASS);", "-    Vector<File> path = new Vector<File>();", "+    final OpenDefinitionsDocument doc = _startupDebugger(\"DrJavaDebugClass.java\", DEBUG_CLASS);", "+    final Vector<File> path = new Vector<File>();", "-      DrJava.getConfig().setSetting(OptionConstants.DEBUG_SOURCEPATH, path);", "+      Utilities.invokeAndWait(new Runnable() { ", "+        public void run() { ", "+          DrJava.getConfig().setSetting(OptionConstants.DEBUG_SOURCEPATH, path);", "+        }", "+      });"]}], "num": 31087}