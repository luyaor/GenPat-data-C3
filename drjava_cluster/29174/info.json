{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df8439dfaa5d71fed547a38afc524345", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a81a4152e0e24739103b86f11766e4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void runTestSequence() throws Exception", "signatureAfterChange": "          public void runTestSequence() throws Exception", "diff": ["-      ", "-      _justQuit = false;", "-      _connected = false;", "+      _justQuit.reset();", "+      _slave = null;", "-      invokeSlave(new String[0], FileOps.NULL_FILE);           ", "-      ", "-      synchronized(_connectedLock) { while (! _connected) _connectedLock.wait();  }", "-      ", "-      ((TestSlaveRemote)getSlave()).startLetterTest();", "-      ", "-      _log.log(\"letter test started\");", "-      ", "+      invokeSlave(JVMBuilder.DEFAULT);           ", "+      _slave.startLetterTest();", "-      ", "-      _log.log(\"letter test finished\");", "-      ", "-        int value = ((TestSlaveRemote) getSlave()).getNumber();", "+        int value = _slave.getNumber();", "-      _log.log(\"number test finished\");", "-      ", "-      synchronized(_quitLock) { while (! _justQuit) _quitLock.wait(); } // for quit to finish", "+      assertTrue(_justQuit.attemptEnsureSignaled(WAIT_TIMEOUT));", "-      _log.log(\"Ran runTestSequence\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b986bdea93b75d39ffd129a80d7712c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testAnonymousClassIndex() throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testAnonymousClassIndex() throws BadLocationException, ClassNameNotFoundException", "diff": ["-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+      act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+      act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b588d7cdbb9328af7222e324f0961a38", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "fe008ef5062ac4e4b569352517b1df11133d4fdd", "commitAfterChange": "2de653a0c121f420695cbc85c38fd5c41317e81a", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "   private void _switchPaneFocus(boolean next)", "signatureAfterChange": "   private void _switchPaneFocus(boolean next)", "diff": ["-    int selectedIndex = _tabbedPane.indexOfComponent(_lastFocusOwner);", "-    if (next) {", "-      // if the DefinitionsPane has focus or nothing has focus,", "-      // switch to the first pane", "-      if (_currentDefPane == _lastFocusOwner) {", "-        // switch to the first tab if there is one", "-        if (numTabs > 0) _switchToPane(_tabbedPane.getComponentAt(0));", "-      }", "-      else if (numTabs == selectedIndex + 1) {", "-        // we're at the last tab, switch to the current def pane", "-        _switchToPane(_currentDefPane);", "-      }", "-      else {", "-        // switch to the next tab pane", "-        _switchToPane(_tabbedPane.getComponentAt(selectedIndex + 1));", "-      }", "-    }", "-    else {", "-      // if the DefinitionsPane has focus or nothing has focus,", "-      // switch to the last pane", "-      if (_currentDefPane == _lastFocusOwner) {", "-        // switch to the last tab if there is one", "-        if (numTabs > 0) {", "-          _switchToPane(_tabbedPane.getComponentAt(numTabs - 1));", "-        }", "-      }", "-      else if (selectedIndex == 0) {", "-        // we're at the first tab, switch to the current def pane", "-        _switchToPane(_currentDefPane);", "-      }", "-      else {", "-        // switch to the previous tab pane", "-        _switchToPane(_tabbedPane.getComponentAt(selectedIndex - 1));", "-      }", "-    }", "-  }", "+    /* If next, then we go to the next tab */", "+    if (next) _switchToPane(_tabbedPane.getComponentAt((numTabs+_tabbedPane.getSelectedIndex()+1)%numTabs));", "+    else _switchToPane(_tabbedPane.getComponentAt((numTabs+_tabbedPane.getSelectedIndex()-1)%numTabs));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea5d52d2847ceafcacdc970fd7071ea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocumentTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public void testAnonymousClassIndex() throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public void testAnonymousClassIndex() throws BadLocationException, ClassNameNotFoundException", "diff": ["-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+      act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+      act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }", "-    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "-    try { act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); }", "-    finally { _doc.releaseWriteLock(); }", "+//    _doc.acquireWriteLock();  // implicitly locks the _reduced model", "+//    try { ", "+    act = _doc._getAnonymousInnerClassIndex(NESTED_CLASSES_TEXT.indexOf(substr)); ", "+//    }", "+//    finally { _doc.releaseWriteLock(); }"]}], "num": 29174}