{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d5c11f6b5bd9c3903a1d1504be2a46d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8804aa55382803466b7dbf6ce96c6943", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/IntegratedMasterSlaveTest.java", "commitBeforeChange": "25b42c6ab8532332033323c9856bcd81aff002d8", "commitAfterChange": "4e9024f79382344df7a15499ea8826062a420a5f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public synchronized void runTestSequence() throws Exception", "signatureAfterChange": "      public void runTestSequence() throws Exception", "diff": ["-    public synchronized void runTestSequence() throws Exception {", "-      _currentTest = \"runTestSequence\";", "-      _justQuit = false;", "-      _letter = 'a';", "+    public void runTestSequence() throws Exception {", "+      ", "+      synchronized (_testLock) {", "+        _currentTest = \"runTestSequence\";", "+        _justQuit = false;", "+        _connected = false;", "+        _letter = 'a';", "+      }", "+      ", "+      invokeSlave(new String[] {\"-Djava.system.class.loader=edu.rice.cs.util.newjvm.CustomSystemClassLoader\"}, FileOption.NULL_FILE);           ", "-//      long start, end;", "-//      start = System.currentTimeMillis();", "-      invokeSlave(new String[]{\"-Djava.system.class.loader=edu.rice.cs.util.newjvm.CustomSystemClassLoader\"}, FileOption.NULL_FILE);", "-//      invokeSlave();", "-      wait();  // for handleConnected", "-//      end = System.currentTimeMillis();", "-//      System.err.println((end-start) + \"ms waiting for invocation\");", "+      synchronized (_testLock) { while (! _connected) _testLock.wait();  }", "-      // now, wait until five getletter calls passed", "-      // (after fifth call letter is 'f' due to the ++", "-//      start = System.currentTimeMillis();", "-      while (_letter != 'f') {", "-        wait();  // for getLetter()", "-      }", "+      // now, wait until five getletter calls passed; after fifth call letter is 'f' due to the ++", "+      synchronized(_testLock) { while (_letter != 'f') { _testLock.wait(); } }", "-//      end = System.currentTimeMillis();", "-//      System.err.println((end-start) + \"ms waiting for 'f'\");", "-", "-      // now make some slave calls", "-//      start = System.currentTimeMillis();", "-//      end = System.currentTimeMillis();", "-      //System.err.println((end-start) + \"ms calling getNumber\");", "-      // OK, time to kill the slave", "-//      start = System.currentTimeMillis();", "-      wait(); // for quit to finish", "-//      end = System.currentTimeMillis();", "-//      System.err.println((end-start) + \"ms waiting to quit\");", "+      synchronized(_testLock) { while (! _justQuit) _testLock.wait(); } // for quit to finish"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc0a26a6b3f2c0eaecd87f44de1c50db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/HighlightManager.java", "commitBeforeChange": "c700f0baf9132c8d6ae724f82bf91ce8e4038f2f", "commitAfterChange": "da0a29e11c230fab76957a17e5a2991c9ab7978b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "       public boolean equals( Object o)", "signatureAfterChange": "       public boolean equals( Object o)", "diff": ["+        ", "+        if (o == null) return false;", "-          boolean result = ( matchesRegion(obj.getStartOffset(), obj.getEndOffset())", "-                              && _p == obj.getPainter());", "+          boolean result = getStartOffset() == obj.getStartOffset() && ", "+            getEndOffset() == obj.getEndOffset() &&", "+            getPainter() == obj.getPainter();"]}], "num": 4735}