{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "413bba991fbdaf6ecc962663f54fe77a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e9eed9ca574e0946512ec4560a7552", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "a25fe41044d292186863ba8ddd26164fdef4fc59", "commitAfterChange": "682bd0a2b528d852a57206c89ed5bb4a5b484c14", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 230, "signatureBeforeChange": "     public void actionPerformed(ActionEvent e)", "signatureAfterChange": "      private void _junitFolder()", "diff": ["-    public void actionPerformed(ActionEvent e) {", "-      new Thread(\"Running JUnit Tests\") {", "-        public void run() {", "-//          new ScrollableDialog(null, \"_junitAllAction called\", \"\", \"\").show();", "-          try {", "-            hourglassOn();", "-            if (_model.isProjectActive()) _model.getJUnitModel().junitProject();", "-            else _model.getJUnitModel().junitAll();", "-          }", "-          finally {  hourglassOff(); }", "-        }", "-      }.start();", "-    }", "+  ", "+  private void _junitFolder() {", "+    final SwingWorker worker = new SwingWorker() {", "+      public Object construct() {", "+        ", "+        INavigatorItem n;", "+        hourglassOn();  // turned off when JUnitStarted event is fired", "+        Enumeration<INavigatorItem> e = _model.getDocumentNavigator().getDocuments();", "+        final LinkedList<OpenDefinitionsDocument> l = new LinkedList<OpenDefinitionsDocument>();", "+        if (_model.getDocumentNavigator().isGroupSelected()) {", "+          while (e.hasMoreElements()){", "+            n = e.nextElement();", "+            if(_model.getDocumentNavigator().isSelectedInGroup(n)){", "+              l.add((OpenDefinitionsDocument) n);  // FIX THIS CAST!", "+            }", "+          }", "+          _model.getJUnitModel().junitDocs(l);", "+        }", "+        return null;", "+      }", "+    };", "+    worker.start(); ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a5e5f1f57c85edb418e3c54806f1d3b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ff6e7ba398be9a577f63882c7a59f62ba76dc9b6", "commitAfterChange": "ec45520bd7c034fcd5a1e91bf25ccd1d46b70ecf", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "     public void scrollToLineInSource(OpenDefinitionsDocument doc, int lineNumber)", "signatureAfterChange": "     public void scrollToLineInSource(OpenDefinitionsDocument doc, final int lineNumber)", "diff": ["-    public void scrollToLineInSource(OpenDefinitionsDocument doc, int lineNumber) {", "-      _model.setActiveDocument(doc);", "-      _currentDefPane.centerViewOnLine(lineNumber);", "+    public void scrollToLineInSource(OpenDefinitionsDocument doc, final int lineNumber) {", "+      ActionListener setSizeListener = new ActionListener() {", "+        public void actionPerformed(ActionEvent ae) {", "+          _currentDefPane.centerViewOnLine(lineNumber);", "+          _docList.revalidate();", "+          _docList.repaint();", "+          _docSplitPane.revalidate();", "+          _docSplitPane.repaint();", "+        }", "+      };", "+      _currentDefPane.addSetSizeListener(setSizeListener);", "+      if (!_model.getActiveDocument().equals(doc)) {", "+        //DrJava.consoleOut().println(\"Don't need to setActiveDocument here\");", "+        _model.setActiveDocument(doc);", "+      }", "+      ", "+      if (_currentDefPane.getSize().getWidth() > 0 &&", "+          _currentDefPane.getSize().getHeight() > 0) {", "+        _currentDefPane.centerViewOnLine(lineNumber); ", "+        _docList.revalidate();", "+        _docList.repaint();", "+        _docSplitPane.revalidate();", "+        _docSplitPane.repaint();", "+      }", "+        _currentThreadLocationHighlight = null;", "+        _currentDefPane.revalidate();", "+        _currentDefPane.repaint();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5f4ac7d0ea0be0c72963da176fd80e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "d80369d9c3076ba83762fd67d26b865a3f105bab", "commitAfterChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupCompilerPanel(ConfigPanel panel)", "diff": ["+    /*", "+     * The drop down box containing the compiler names", "+     */", "+    final ForcedChoiceOptionComponent CPC = new ForcedChoiceOptionComponent(OptionConstants.COMPILER_PREFERENCE_CONTROL.evaluate(), \"Compiler Preference\", ", "+                         this,", "+                         \"Which compiler is prefered?\");", "+    ", "+    /*", "+     * Action listener that saves the selected compiler name into the DEFAULT_COMPILER_PREFERENCE setting", "+     */", "+    ActionListener CPCActionListener = new ActionListener() {", "+      public void actionPerformed(ActionEvent e) {", "+        if(!edu.rice.cs.drjava.DrJava.getConfig().getSetting(OptionConstants.DEFAULT_COMPILER_PREFERENCE).equals(CPC.getCurrentComboBoxValue())){", "+          edu.rice.cs.drjava.DrJava.getConfig().setSetting(OptionConstants.DEFAULT_COMPILER_PREFERENCE,CPC.getCurrentComboBoxValue());", "+        }", "+      }", "+    };", "+   ", "+    /*", "+     * insures that the change is made only when the apply or ok button is hit", "+     */", "+    _applyButton.addActionListener(CPCActionListener);", "+    _okButton.addActionListener(CPCActionListener);", "+    ", "+    /*", "+     * adds the drop down box to the panel", "+     */", "+    addOptionComponent(panel, ", "+                       CPC.setEntireColumn(false)", "+                      );"]}], "num": 22987}