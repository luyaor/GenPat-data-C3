{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e70b43ab8a1c00aed105741e0ddbfd1f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "300b9433c7e465b7c2828cc491ed0c50", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "14ecd0c683c3a654631edbe7cd556951ec682439", "commitAfterChange": "b4e48852da60211c31b0141438d3f04d6c627263", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 16, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-      ", "-      // Watch", "-      /*", "-      JMenuItem watchItem = new JMenuItem(\"Add Watch\");", "-      watchItem.addActionListener( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae ) {", "-          //Make sure that the watch is set on the *clicked* line, if within a selection block.", "-          setCaretPosition(viewToModel(_popupMenuMA.getLastMouseClick().getPoint()));", "-          _mainFrame.debuggerAddWatch();", "-        }", "-      });", "-      _addWatchMenuItem = _popMenu.add(watchItem);", "-      _addWatchMenuItem.setEnabled(false);", "-      */", "-    /*", "-     * Flag to enable various presets for testing the functionality of highlights", "-     */", "-    boolean functionTest = false;", "-    ", "-    if (functionTest) {", "-      ", "-      JMenuItem highlightItem1 = new JMenuItem(\"Add Error\");", "-      highlightItem1.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest1();", "-        }", "-      });", "-      _popMenu.add(highlightItem1);", "-      ", "-      JMenuItem highlightItem2 = new JMenuItem(\"Add Breakpoint\");", "-      highlightItem2.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest2();", "-        }", "-      });", "-      _popMenu.add(highlightItem2);", "-      ", "-      JMenuItem highlightItem5= new JMenuItem(\"Add Selection\");", "-      highlightItem5.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest5();", "-        }", "-      });", "-      _popMenu.add(highlightItem5);", "-      ", "-      JMenuItem highlightItem3 = new JMenuItem(\"Remove Error\");", "-      highlightItem3.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest3();", "-        }", "-      });", "-      _popMenu.add(highlightItem3);", "-      ", "-      JMenuItem highlightItem4= new JMenuItem(\"Remove Breakpoint\");", "-      highlightItem4.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest4();", "-        }", "-      });", "-      _popMenu.add(highlightItem4);", "-      ", "-      JMenuItem highlightItem6 = new JMenuItem(\"Remove Selection\");", "-      highlightItem6.addActionListener ( new AbstractAction() {", "-        public void actionPerformed( ActionEvent ae) {", "-          _highlightTest6();", "-        }", "-      });", "-      _popMenu.add(highlightItem6);", "-    }", "-    ", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b505624f9a941ad5355ae76270217446", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 5, "signatureBeforeChange": "   private void _setupButtonPanel()", "signatureAfterChange": "   protected JButton[] makeButtons()", "diff": ["-  /** Creates the buttons for controlling the breakpoints. */", "-  private void _setupButtonPanel() {", "-    JPanel mainButtons = new JPanel();", "-    JPanel emptyPanel = new JPanel();", "-    JPanel closeButtonPanel = new JPanel(new BorderLayout());", "-    GridBagLayout gbLayout = new GridBagLayout();", "-    GridBagConstraints c = new GridBagConstraints();", "-    mainButtons.setLayout(gbLayout);", "-    ", "-    Action enableDisableAction = new AbstractAction(\"Disable\") {", "-      public void actionPerformed(ActionEvent ae) {", "-        _enableDisableBreakpoint();", "-      }", "-    };", "-    _enableDisableButton = new JButton(enableDisableAction);", "-    ", "+  /** Creates the buttons for controlling the regions. Should be overridden. */", "+  protected JButton[] makeButtons() {    ", "-        _goToBreakpoint();", "+        goToRegion();", "-    ", "+", "+    Action enableDisableAction = new AbstractAction(\"Disable\") {", "+      public void actionPerformed(ActionEvent ae) {", "+        enableDisableBreakpoint();", "+      }", "+    };", "+    _enableDisableButton = new JButton(enableDisableAction);", "+", "-        _removeBreakpoint();", "+        _model.getBreakpointManager().removeRegion(getSelectedRegion());", "-        try {", "-          _debugger.removeAllBreakpoints();", "-        }", "-        catch (DebugException de) {", "-          _frame._showDebugError(de);", "-        }", "+        _model.getBreakpointManager().clearRegions();", "-    closeButtonPanel.add(_closeButton, BorderLayout.NORTH);", "-    mainButtons.add(_goToButton);", "-    mainButtons.add(_enableDisableButton);", "-    mainButtons.add(_removeButton);", "-    mainButtons.add(_removeAllButton);", "-    mainButtons.add(emptyPanel);", "+    JButton[] buts = new JButton[] { ", "+      _enableDisableButton,", "+        _goToButton, ", "+        _removeButton,", "+        _removeAllButton", "+    };", "-    c.fill = GridBagConstraints.HORIZONTAL;", "-    c.anchor = GridBagConstraints.NORTH;", "-    c.gridwidth = GridBagConstraints.REMAINDER;", "-    c.weightx = 1.0;", "-    ", "-    gbLayout.setConstraints(_goToButton, c);", "-    gbLayout.setConstraints(_enableDisableButton, c);", "-    gbLayout.setConstraints(_removeButton, c);", "-    gbLayout.setConstraints(_removeAllButton, c);", "-    ", "-    c.fill = GridBagConstraints.BOTH;", "-    c.anchor = GridBagConstraints.SOUTH;", "-    c.gridheight = GridBagConstraints.REMAINDER;", "-    c.weighty = 1.0;", "-    ", "-    gbLayout.setConstraints(emptyPanel, c);", "-    ", "-    _buttonPanel.add(mainButtons, BorderLayout.CENTER);", "-    _buttonPanel.add(closeButtonPanel, BorderLayout.EAST);", "+    return buts;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed8fa6578908225e3984532469cfd2c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "21836dcccd81c2207652ee85b319b723ac9ff10b", "commitAfterChange": "18f7005907576031115bfb0859e7ff6d53506e5e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "   private void initComponents()", "signatureAfterChange": "   private void initComponents()", "diff": ["-     _tabbedPane = new JTabbedPane();", "- ", "-    Action runCommandAction = new AbstractAction(\"Run Command Line\") {", "-      public void actionPerformed(ActionEvent e) {", "-        _runCommand();", "-      }", "-    };", "-    _runCommandButton = new JButton(runCommandAction);", "-    Action runJavaAction = new AbstractAction(\"Run Java Class\") {", "-      public void actionPerformed(ActionEvent e) {", "-        _runJava();", "-      }", "-    };", "-    _runJavaButton = new JButton(runJavaAction);", "-", "-    Action saveCommandAction = new AbstractAction(\"Save to Menu...\") {", "-      public void actionPerformed(ActionEvent e) {", "-        _saveCommand();", "-      }", "-    };", "-    _saveCommandButton = new JButton(saveCommandAction);", "-    Action saveJavaAction = new AbstractAction(\"Save to Menu...\") {", "-      public void actionPerformed(ActionEvent e) {", "-        _saveJava();", "-      }", "-    };", "-    _saveJavaButton = new JButton(saveJavaAction);", "-", "+    _tabbedPane = new JTabbedPane();", "+     ", "+    if (_showRunButton) {", "+      Action runCommandAction = new AbstractAction(\"Run Command Line\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _runCommand();", "+        }", "+      };", "+      _runCommandButton = new JButton(runCommandAction);", "+      Action runJavaAction = new AbstractAction(\"Run Java Class\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _runJava();", "+        }", "+      };", "+      _runJavaButton = new JButton(runJavaAction);", "+      ", "+      Action saveCommandAction = new AbstractAction(\"Save to Menu...\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveCommand();", "+        }", "+      };", "+      _saveCommandButton = new JButton(saveCommandAction);", "+      Action saveJavaAction = new AbstractAction(\"Save to Menu...\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveJava();", "+        }", "+      };", "+      _saveJavaButton = new JButton(saveJavaAction);", "+    }", "+    else {", "+      Action saveCommandAction = new AbstractAction(\"Save\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveCommand();", "+        }", "+      };", "+      _saveCommandButton = new JButton(saveCommandAction);", "+      Action saveJavaAction = new AbstractAction(\"Save\") {", "+        public void actionPerformed(ActionEvent e) {", "+          _saveJava();", "+        }", "+      };", "+      _saveJavaButton = new JButton(saveJavaAction);", "+    }", "+    "]}], "num": 2623}