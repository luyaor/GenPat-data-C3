{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "29786f16a4e45f0e176eaa4eaa63b27c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ffea31b5c0400c8e1032ed13269ff8b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void _clipLeft(int offset, ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": "   private void _clipLeft(int offset,                           ModelList<ReducedToken>.Iterator                          copyCursor)", "diff": ["+  */", "+  private void _clipLeft(int offset, ", "+                         ModelList<ReducedToken>.Iterator", "+                         copyCursor)", "+  {", "+    if (copyCursor.atStart()) {", "+      return;", "+    }", "+    else if (offset == 0) {", "+      copyCursor.remove();", "+    }", "+    else if (copyCursor.current().isGap()) {", "+      int size = copyCursor.current().getSize();", "+      copyCursor.current().shrink(size-offset);", "+    }", "+    else if (copyCursor.current().isMultipleCharBrace()) {", "+      if (offset != 1) {", "+        throw new IllegalArgumentException(\"Offset incorrect\");", "+      }", "+      else {", "+        String type = copyCursor.current().getType();", "+        String first = type.substring(0,1);", "+        copyCursor.current().setType(first);", "+      }", "+    }", "+    else {", "+      throw new IllegalArgumentException(\"Cannot clip left.\");", "+    }", "+  }", "-\tprivate void _clipLeft(int offset, ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atStart()){", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == 0){", "-\t\t\t\tcopyCursor.remove();", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isGap()){", "-\t\t\t\tint size = copyCursor.current().getSize();", "-\t\t\t\tcopyCursor.current().shrink(size-offset);", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isMultipleCharBrace()){", "-\t\t\t\tif (offset != 1)", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Offset incorrect\");", "-\t\t\t\telse{", "-\t\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\t\tString first = type.substring(0,1);", "-\t\t\t\t\tcopyCursor.current().setType(first);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tthrow new IllegalArgumentException(\"Cannot clip left.\");", "-\t\t\t}", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf392080e226235dc903493c05403fc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void _clipLeft(int offset, ModelList<ReducedToken>.Iterator \t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "signatureAfterChange": "   private void _clipLeft(int offset,                           ModelList<ReducedToken>.Iterator                          copyCursor)", "diff": ["+  */", "+  private void _clipLeft(int offset, ", "+                         ModelList<ReducedToken>.Iterator", "+                         copyCursor)", "+  {", "+    if (copyCursor.atStart()) {", "+      return;", "+    }", "+    else if (offset == 0) {", "+      copyCursor.remove();", "+    }", "+    else if (copyCursor.current().isGap()) {", "+      int size = copyCursor.current().getSize();", "+      copyCursor.current().shrink(size-offset);", "+    }", "+    else if (copyCursor.current().isMultipleCharBrace()) {", "+      if (offset != 1) {", "+        throw new IllegalArgumentException(\"Offset incorrect\");", "+      }", "+      else {", "+        String type = copyCursor.current().getType();", "+        String first = type.substring(0,1);", "+        copyCursor.current().setType(first);", "+      }", "+    }", "+    else {", "+      throw new IllegalArgumentException(\"Cannot clip left.\");", "+    }", "+  }", "-\tprivate void _clipLeft(int offset, ModelList<ReducedToken>.Iterator", "-\t\t\t\t\t\t\t\t\t\t\t\t copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atStart()){", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\telse if (offset == 0){", "-\t\t\t\tcopyCursor.remove();", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isGap()){", "-\t\t\t\tint size = copyCursor.current().getSize();", "-\t\t\t\tcopyCursor.current().shrink(size-offset);", "-\t\t\t}", "-\t\t\telse if (copyCursor.current().isMultipleCharBrace()){", "-\t\t\t\tif (offset != 1)", "-\t\t\t\t\tthrow new IllegalArgumentException(\"Offset incorrect\");", "-\t\t\t\telse{", "-\t\t\t\t\tString type = copyCursor.current().getType();", "-\t\t\t\t\tString first = type.substring(0,1);", "-\t\t\t\t\tcopyCursor.current().setType(first);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\tthrow new IllegalArgumentException(\"Cannot clip left.\");", "-\t\t\t}", "-\t\t}"]}], "num": 18329}