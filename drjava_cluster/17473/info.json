{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb8a85ac996b42c0dfc124e1c90b48dc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf68b400d3203f0daa10ddfdeef598d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void testQuotesWithGap()", "signatureAfterChange": "  \tpublic void testQuotesWithGap()", "diff": ["-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#0.2\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.move(-2);", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);\t\t\t", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\t", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.move(-4);", "+\t\t\tassertEquals(\"#1.1\", true, model1.currentToken().isGap());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(4);", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\t", "+\t\t\tassertEquals(\"#1.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(2);", "+\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tassertEquals(\"#2.0\", true, model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "+\t\t\t// \"__/__\"", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#2.1\", \"/\", model1.currentToken().getType());", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#2.0\", true, model1.currentToken().isGap());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#2.5\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\t// \"__/#__\"", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t\t\t", "+\t\t}", "-\t\t\tassertEquals(\"#3.0\", true, model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#3.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#3.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\t// \"__#/\"__\"", "-\t\t\tassertEquals(\"#4.0\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#4.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#4.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#4.4\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#4.5\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#4.6\", ReducedToken.FREE,", "-\t\t\tassertEquals(\"#4.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#4.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#4.5\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#4.6\",true,model1.getCursor().current().isGap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80b271772882ef9c7ca456389bbf1921", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "commitAfterChange": "28c4be6b04d5867405916840b451c47e4acad060", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void testQuotesWithGap()", "signatureAfterChange": "  \tpublic void testQuotesWithGap()", "diff": ["-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#0.2\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.move(-2);", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.currentToken().getType());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(1);\t\t\t", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#0.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\t", "-\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#1.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#1.2\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "+\t\t\tmodel1.move(-4);", "+\t\t\tassertEquals(\"#1.1\", true, model1.currentToken().isGap());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "+\t\t\tmodel1.move(4);", "+\t\t\tassertEquals(\"#1.0\", \"\\\"\", model1.currentToken().getType());", "+\t\t\t", "+\t\t\tassertEquals(\"#1.2\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.setBlockOffset(2);", "+\t\t\tmodel1.move(-2);", "-\t\t\tmodel1.setBlockOffset(0);", "-\t\t\tassertEquals(\"#2.0\", true, model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#2.1\", \"/\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "+\t\t\t// \"__/__\"", "+\t\t\tmodel1.move(-1);", "+\t\t\tassertEquals(\"#2.1\", \"/\", model1.currentToken().getType());", "+\t\t\tmodel1.move(1);", "+\t\t\tassertEquals(\"#2.0\", true, model1.currentToken().isGap());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#2.5\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());", "-\t\t\t// \"__/#__\"", "+\t\t\tmodel1.move(2);", "+\t\t\tassertEquals(\"#2.2\", \"\\\"\", model1.currentToken().getType());", "+\t\t\tassertEquals(\"#2.3\", ReducedToken.FREE,", "+\t\t\t\t\t\t\t\t\t model1.currentToken().getState());\t\t\t\t\t", "+\t\t}", "-\t\t\tassertEquals(\"#3.0\", true, model1.getCursor().current().isGap());", "-\t\t\tassertEquals(\"#3.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\tassertEquals(\"#3.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#3.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#3.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\t// \"__#/\"__\"", "-\t\t\tassertEquals(\"#4.0\", \"/\", model1.getCursor().current().getType());", "-\t\t\tassertEquals(\"#4.1\", true, model1.getCursor().prevItem().isGap());", "-\t\t\tassertEquals(\"#4.2\", \"\\\"\", model1.getCursor().nextItem().getType());", "-\t\t\tassertEquals(\"#4.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#4.4\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#4.5\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());", "-\t\t\tassertEquals(\"#4.6\", ReducedToken.FREE,", "-\t\t\tassertEquals(\"#4.3\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().nextItem().getState());", "-\t\t\tassertEquals(\"#4.4\", ReducedToken.FREE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tmodel1.getCursor().prev();", "-\t\t\tassertEquals(\"#4.5\", ReducedToken.INSIDE_QUOTE,", "-\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\tassertEquals(\"#4.6\",true,model1.getCursor().current().isGap());"]}], "num": 17473}