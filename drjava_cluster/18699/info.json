{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f6cffe6cc3f07d31bda5157e3434766", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbdf9034a209423dfa04307db228a44e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException", "signatureAfterChange": "   private void _indentBlock(final int start, final int end, int reason, ProgressMonitor pm)     throws OperationCanceledException", "diff": ["-      // Keep marker at the end. This Position will be the", "-      // correct endpoint no matter how we change the doc", "-      // doing the indentLine calls.", "+      // Keep marker at the end. This Position will be the correct endpoint no matter how we change ", "+      // the doc doing the indentLine calls.", "-          if (pm.isCanceled()) {", "-            throw new OperationCanceledException();", "-          }", "+          if (pm.isCanceled()) throw new OperationCanceledException();", "-    catch (BadLocationException e) {", "-      // Should not happen", "-      throw new UnexpectedException(e);", "-    }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cbd26b32ded8bcecb60f2f456d591c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public int findCharOnLine(final int pos, final char findChar)", "signatureAfterChange": "   public int findCharOnLine(final int pos, final char findChar)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "+//    acquireReadLock();", "-        int lineStart = getLineStartPos(pos);", "-        int lineEnd = getLineEndPos(pos);", "+        int lineStart = _getLineStartPos(pos);", "+        int lineEnd = _getLineEndPos(pos);", "-          if (_reduced.getStateAtCurrent().equals(FREE)) break; // found matching char", "+          if (_reduced._getStateAtCurrent().equals(FREE)) break; // found matching char", "-    catch (Throwable t) { throw new UnexpectedException(t); }", "-    finally { releaseReadLock(); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+//    finally { releaseReadLock(); }"]}], "num": 18699}