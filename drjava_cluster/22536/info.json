{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8357abcf98f253c375d3defcafca4e17", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fae0e428e7c4db5b801387f9d0ebee", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "       public Object forVoidResult(VoidResult that)", "signatureAfterChange": "       public Void forCharValue(Character c)", "diff": ["-    private class TestResultHandler implements InterpretResultVisitor<Object> {", "-      public Object forVoidResult(VoidResult that) {", "-        synchronized(_testLock) {", "-          voidReturnFlag = true;", "-          _log.log(\"NewJVMTest: void returned by interpretResult callback\");", "-          _testLock.notify();", "-          return null;", "-        }", "+      public Void forStringValue(String s) { handleValueResult('\"' + s + '\"'); return null; }", "+      public Void forCharValue(Character c) { handleValueResult(\"'\" + c + \"'\"); return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be87733bfb0bc9167a528d0bdcbffc82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/NewJVMTest.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "       public Object forValueResult(ValueResult that)", "signatureAfterChange": "              private void handleValueResult(String s)", "diff": ["-      public Object forValueResult(ValueResult that) {", "-        synchronized(_testLock) {", "-          returnBuf = that.getValueStr();", "-          _log.log(\"NewJVMTest: \" + returnBuf + \" returned by interpretResult callback\");", "-          _testLock.notify();", "-          return null;", "-        }", "-      }", "+      ", "+      private void handleValueResult(String s) {", "+        debug.log();", "+        returnBuf = s;", "+        _log.log(\"NewJVMTest: \" + returnBuf + \" returned by interpretResult callback\");"]}], "num": 22536}