{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3fbea38d88703c4f005c69ac443eb02", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bdf1f3c7fc57b050aad8c68cc6d5893", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/TigerUtilitiesTest.java", "commitBeforeChange": "43a2124ad4386a02628eedfc537948ebb05ea232", "commitAfterChange": "c904ff4d12a1c03698cae74f161e803cd4959a58", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private void helperWithoutVarArgs(int i, Integer j)", "signatureAfterChange": "   public void testSetAndResetTigerEnabled()", "diff": ["-  ", "-  private void helperWithoutVarArgs(int i, Integer j){  }", "+   */", "+  public void testSetAndResetTigerEnabled() {", "+    TigerUtilities.setTigerEnabled(true);", "+    TigerUtilities.assertTigerEnabled(\"Tiger should be enabled\");", "+    assertEquals(\"Tiger should be enabled\",TigerUtilities.isTigerEnabled(),true);", "+    TigerUtilities.setTigerEnabled(false);", "+    assertEquals(\"Tiger should be disabled\",TigerUtilities.isTigerEnabled(),false);", "+    ", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84eb6f3bc15c70d35fe609179c8711cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtilTest.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void testComputeIncrementalInThread()", "signatureAfterChange": "      public void testComputeIncrementalInThread()", "diff": ["-    CompletionMonitor monitor = new CompletionMonitor();", "+    debug.logStart();", "+    ", "-      new TrivialIncrementalTask<Integer, String>(IterUtil.make(1, 2, 3, 4, 5), \"done\", monitor);", "+      new TrivialIncrementalTask<Integer, String>(IterUtil.make(1, 2, 3, 4, 5), \"done\");", "-    monitor.signal();", "-    assertTrue(IterUtil.isEqual(IterUtil.make(1), c.intermediateValues()));", "+    task.signal();", "+    assertTrue(IterUtil.isEqual(IterUtil.make(1), c.intermediateQueue()));", "-    monitor.signal();", "-    assertTrue(IterUtil.isEqual(IterUtil.make(2), c.intermediateValues()));", "+    task.signal();", "+    assertTrue(IterUtil.isEqual(IterUtil.make(1, 2), c.intermediateQueue()));", "+    sleep(50); // can't *guarantee* that the status will update, but we expect it to be reasonably responsive", "-    sleep(100); // can't *guarantee* that the status will update, but we expect it to be reasonably responsive", "+    assertTrue(IterUtil.isEqual(IterUtil.make(1, 2, 3), c.intermediateQueue()));", "-    assertTrue(IterUtil.isEqual(IterUtil.make(3, 4, 5), c.intermediateValues()));", "-    assertTrue(c.intermediateValues().isEmpty());", "+    assertTrue(IterUtil.isEqual(IterUtil.make(1, 2, 3, 4, 5), c.intermediateQueue()));", "+    ", "+    debug.logEnd();"]}], "num": 23854}