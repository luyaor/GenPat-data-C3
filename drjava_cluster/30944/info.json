{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92c33b50e2df8d22a494afe0ec7ee0b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a1d6515a50064a17821cfe08c73adb0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "   public Object visit(PostIncrement node)", "signatureAfterChange": "   public Object visit(PostIncrement node)", "diff": ["-    mod.modify(context,", "-               InterpreterUtilities.add(NodeProperties.getType(node),", "-                                        v,", "-                                        InterpreterUtilities.ONE));", "+    Class resType = NodeProperties.getType(node);", "+    Class calcType = resType; // always a primitive type", "+    ", "+    // This code facilitates autoboxing/unboxing", "+    if (_isBoxingType(resType)) {", "+      calcType = _correspondingPrimType(resType);", "+    }", "+    ", "+    // Perform the operation", "+    Object result = InterpreterUtilities.add(calcType, v, InterpreterUtilities.ONE);", "+", "+    // Cast the result", "+    mod.modify(context, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79757ab91959712593e7b9e3311488c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/EvaluationVisitor.java", "commitBeforeChange": "520c98c03a1e651efb4dfbf7d7f2a55510c74658", "commitAfterChange": "3f953b8fb783fe3ca1b336468898f35cd9cde7db", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "   public Object visit(PostDecrement node)", "signatureAfterChange": "   public Object visit(PostDecrement node)", "diff": ["-    mod.modify(context,", "-               InterpreterUtilities.subtract(NodeProperties.getType(node),", "-                                             v,", "-                                             InterpreterUtilities.ONE));", "+    Class resType = NodeProperties.getType(node);", "+    Class calcType = resType; // always a primitive type", "+    ", "+    // This code facilitates autoboxing/unboxing", "+    if (_isBoxingType(resType)) {", "+      calcType = _correspondingPrimType(resType);", "+    }", "+    ", "+    // Perform the operation", "+    Object result = InterpreterUtilities.subtract(calcType, v, InterpreterUtilities.ONE);", "+", "+    // Cast the result", "+    mod.modify(context, result);"]}], "num": 30944}