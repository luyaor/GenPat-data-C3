{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "506069c49258880cf7eae26ece9b60fd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d361390d29cf23ee279277dce620ceb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SingleDisplayModel.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void resetInteractions()", "signatureAfterChange": "   private int _getDocumentIndex(OpenDefinitionsDocument doc)", "diff": ["+   */", "+  private int _getDocumentIndex(OpenDefinitionsDocument doc) {", "+    ListModel docs = getDefinitionsDocuments();", "+    int index = -1;", "+    for (int i=0; (i < docs.getSize()) && (index < 0); i++) {", "+      if (docs.getElementAt(i).equals(doc)) {", "+        index = i;", "+      }", "+    }", "+    return index;", "+  }", "-   */", "-  public void resetInteractions() {", "-    super.resetInteractions();", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d97d742725c3c023dd3633d0a4a0d6cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "94495305a8fb1d1ea8c2b8ae2ef82ea7d92dd639", "commitAfterChange": "ae025ece2387b12ae04306fdd94dd1060cdc00c5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 61, "signatureBeforeChange": "   public void saveProject(String filename) throws IOException", "signatureAfterChange": "   public void saveProject(String filename) throws IOException", "diff": ["-    String base = filename.substring(0, filename.lastIndexOf(File.separator));", "+    String base = filename.substring(0, filename.lastIndexOf(File.separator) + 1);", "-    ", "+          ", "+    //Tried to use .toArray and a cast but always seemed to throw a class cast exception", "+    Vector<File> srcFileVector = builder.getSourceFiles();", "+    File [] srcFiles = new File[srcFileVector.size()];", "+    for(int i = 0; i<srcFileVector.size(); i++)", "+      srcFiles[i] = srcFileVector.elementAt(i);", "+    ", "+    setFileGroupingState(_makeProjectFileGroupingState(f, new File(filename), srcFiles));", "+    "]}], "num": 19186}