{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fd818aeb0dc9cc2a8911e09ef6d765f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c5edad6c309cd4068fdf4828f4b4115", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/IndentTest.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 68, "signatureBeforeChange": "         public void testNoParameters() throws BadLocationException", "signatureAfterChange": "         public void testNoParameters() throws BadLocationException", "diff": ["-    doc.insertString(0, _text, null);", "-    assertEquals(\"START has no brace.\", _text.length(), doc.getLength());", "-    doc.indentLines(0, 7); // Does nothing.", "-    assertEquals(\"START has no brace.\", _text.length(), doc.getLength());", "+    _doc.insertString(0, _text, null);", "+    assertEquals(\"START has no brace.\", _text.length(), _doc.getLength());", "+    indentLines(0, 7); // Does nothing.", "+    assertEquals(\"START has no brace.\", _text.length(), _doc.getLength());", "-    doc.indentLines(0, doc.getLength()); // Aligns second line, a second time.", "+    indentLines(0, _doc.getLength()); // Aligns second line, a second time.", "-    _assertContents(_aligned, doc);", "-    assertEquals(\"Line aligned to open paren.\", _aligned.length(), doc.getLength());", "+    _assertContents(_aligned, _doc);", "+    assertEquals(\"Line aligned to open paren.\", _aligned.length(), _doc.getLength());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4fa9438efce190d56c14dfa7095a780", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/ActionBracePlusTest.java", "commitBeforeChange": "11f5b9e7df5eb990bc9eeb3f9e343e54f88d561a", "commitAfterChange": "03fcb19e2e455531cf9f2f73094d7f9c8d5e6255", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public void testSpaceSuffix() throws BadLocationException", "signatureAfterChange": "       public void testSpaceSuffix() throws BadLocationException", "diff": ["-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText(0, _doc.getLength()));", "+    assertEquals(\"Line aligned to open paren.\", _aligned, _doc.getText());", "-    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText(0, _doc.getLength())); ", "+    assertEquals(\"Line aligned to open bracket.\", _aligned, _doc.getText()); "]}], "num": 15463}