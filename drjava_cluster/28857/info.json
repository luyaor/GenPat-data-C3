{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8091fb1112f67c07cacaabcd9b7f6ede", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183e3ce2180c85fd65dc1e7ac51829ac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/BreakpointsPanel.java", "commitBeforeChange": "b9f87cd074abdafacdb2719b29e0803fd0f81cf0", "commitAfterChange": "04d7824a20eb03ad17793ba3198be21442313bdc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r   protected void enableDisableBreakpoint()", "signatureAfterChange": "   protected void enableDisableBreakpoint()", "diff": ["-  /** Toggle breakpoint's enable/disable flag. */\r", "-  protected void enableDisableBreakpoint() {\r", "-    final ArrayList<Breakpoint> bps = getSelectedRegions();\r", "-    if (bps.size()>0) {\r", "-      final boolean newState = !bps.get(0).isEnabled();\r", "-      for (Breakpoint bp: bps) {\r", "-        _model.getBreakpointManager().changeRegion(bp, new Lambda<Object, Breakpoint>() {\r", "-          public Object apply(Breakpoint bp) {\r", "-            bp.setEnabled(newState);\r", "-            return null;\r", "-          }\r", "-        });\r", "-      }\r", "-    }\r", "-  }\r", "+  /** Toggle breakpoint's enable/disable flag. */", "+  protected void enableDisableBreakpoint() {", "+    final ArrayList<Breakpoint> bps = getSelectedRegions();", "+    if (bps.size()>0) {", "+      final boolean newState = !bps.get(0).isEnabled();", "+      for (Breakpoint bp: bps) {", "+        _regionManager.changeRegion(bp, new Lambda<Object, Breakpoint>() {", "+          public Object apply(Breakpoint bp) {", "+            bp.setEnabled(newState);", "+            return null;", "+          }", "+        });", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca4381cdbb1c95c06bfd7149701e801", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "22c18addd3fbd5284d6b10beeea3492ad5e2e35d", "commitAfterChange": "a6eff600a2f1091d06db04a34e4bdfb3aa68fc7b", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "   public static URL toURL(File f) throws MalformedURLException", "signatureAfterChange": "   public static URL toURL(File f) throws MalformedURLException", "diff": ["-  public static URL toURL(File f) throws MalformedURLException { return f.toURI().toURL(); }", "+  public static URL toURL(File f) throws MalformedURLException { return f.toURL(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a711a12efd64f75235bfdee5211b2c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "ea3de3bd50de8d728bdb5d615bd9b8838d2e94b4", "commitAfterChange": "c8bdd45b172c9714aba30b2edf20a9a7463e66ab", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 328, "signatureBeforeChange": "      private void _revert(OpenDefinitionsDocument doc)", "signatureAfterChange": "      private void _revert(OpenDefinitionsDocument doc)", "diff": ["-      _model.getActiveDocument().revertFile();", "+      doc.revertFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc46685c2cd87aaec27136f0391a7a98", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "a452bc1c75053221683fa7723a55972e27a5b54c", "commitAfterChange": "9bce8671af84f7e65989f2592fb3cf5b37102c42", "methodNumberBeforeChange": 365, "methodNumberAfterChange": 366, "signatureBeforeChange": "     public void addDocumentListener(DocumentListener listener)", "signatureAfterChange": "     public void addDocumentListener(DocumentListener listener)", "diff": ["-      else _cacheAdapter.getReconstructor().addDocumentListener(listener);", "+      else _cacheAdapter.addDocumentListener(listener);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f3b190a48f7f83aa2bf6f17e51a0f9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "452210e4b030d3fd06cc11ebd7b6773526fbeddc", "commitAfterChange": "ec1234c8205fc39cf1fac2ca94b073f8a0c191b4", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-    _openRecursiveCheckBox.setSelected(DrJava.getConfig().getSetting(OptionConstants.OPEN_FOLDER_RECURSIVE).booleanValue());", "+    _openRecursiveCheckBox.setSelected(config.getSetting(OptionConstants.OPEN_FOLDER_RECURSIVE).booleanValue());", "-    config.addOptionListener", "-      (FONT_MAIN, new MainFontOptionListener());", "-    config.addOptionListener", "-      (FONT_LINE_NUMBERS, new LineNumbersFontOptionListener());", "-    config.addOptionListener", "-      (FONT_DOCLIST, new DoclistFontOptionListener());", "-    config.addOptionListener", "-      (FONT_TOOLBAR, new ToolbarFontOptionListener());", "-    config.addOptionListener", "-      (TOOLBAR_ICONS_ENABLED, new ToolbarOptionListener());", "-    config.addOptionListener", "-      (TOOLBAR_TEXT_ENABLED, new ToolbarOptionListener());", "-    config.addOptionListener", "-      (TOOLBAR_ENABLED, new ToolbarOptionListener());", "-    config.addOptionListener", "-      (WORKING_DIRECTORY, new WorkingDirOptionListener());", "-    config.addOptionListener", "-      (LINEENUM_ENABLED, new LineEnumOptionListener());", "-    config.addOptionListener", "-      (QUIT_PROMPT, new QuitPromptOptionListener());", "-    config.addOptionListener", "-      (RECENT_FILES_MAX_SIZE, new RecentFilesOptionListener());", "-    config.addOptionListener", "-      (JSR14_LOCATION, new OptionListener<File>() {", "+    config.addOptionListener(FONT_MAIN, new MainFontOptionListener());", "+    config.addOptionListener(FONT_LINE_NUMBERS, new LineNumbersFontOptionListener());", "+    config.addOptionListener(FONT_DOCLIST, new DoclistFontOptionListener());", "+    config.addOptionListener(FONT_TOOLBAR, new ToolbarFontOptionListener());", "+    config.addOptionListener(TOOLBAR_ICONS_ENABLED, new ToolbarOptionListener());", "+    config.addOptionListener(TOOLBAR_TEXT_ENABLED, new ToolbarOptionListener());", "+    config.addOptionListener(TOOLBAR_ENABLED, new ToolbarOptionListener());", "+    config.addOptionListener(WORKING_DIRECTORY, new WorkingDirOptionListener());", "+    config.addOptionListener(LINEENUM_ENABLED, new LineEnumOptionListener());", "+    config.addOptionListener(QUIT_PROMPT, new QuitPromptOptionListener());", "+    config.addOptionListener(RECENT_FILES_MAX_SIZE, new RecentFilesOptionListener());", "+    ", "+    config.addOptionListener(JSR14_LOCATION, new OptionListener<File>() {"]}], "num": 28857}