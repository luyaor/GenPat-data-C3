{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "421aaea08953b7d214636c4cea8cf9ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12289cc250451c507f60f6de19b1cc95", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static String createMethodDescriptor(String rt, String[] pts)", "signatureAfterChange": "   public static String createMethodDescriptor(String rt, String[] pt)", "diff": ["-  public static String createMethodDescriptor(String rt, String[] pts) {", "-    if (pts != null) {", "-      StringBuffer result = new StringBuffer(\"(\");", "-      for (String pt: pts) result.append(pt);", "-      return result.append(')').append(rt).toString();  // Note: append operation modifies the receiver!", "-    } ", "-    return rt;", "+   */", "+  public static String createMethodDescriptor(String rt, String[] pt) {", "+    if (pt != null) {", "+      String result = \"(\";", "+      for (int i = 0; i < pt.length; i++) {", "+        result += pt[i];", "+      }", "+      return result + \")\" + rt;", "+    } else {", "+      return rt;", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "765fb1f73f675a08b99eed6f4e812f32", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/classfile/JVMUtilities.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public static String createMethodDescriptor(String rt, String[] pt)", "signatureAfterChange": "   public static String createMethodDescriptor(String rt, String[] pts)", "diff": ["+  public static String createMethodDescriptor(String rt, String[] pts) {", "+    if (pts != null) {", "+      StringBuffer result = new StringBuffer(\"(\");", "+      for (String pt: pts) result.append(pt);", "+      return result.append(')').append(rt).toString();  // Note: append operation modifies the receiver!", "+    } ", "+    return rt;", "-   */", "-  public static String createMethodDescriptor(String rt, String[] pt) {", "-    if (pt != null) {", "-      String result = \"(\";", "-      for (int i = 0; i < pt.length; i++) {", "-        result += pt[i];", "-      }", "-      return result + \")\" + rt;", "-    } else {", "-      return rt;", "-    }", "-  }"]}], "num": 7880}