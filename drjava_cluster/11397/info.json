{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaf36c9178f0d7ffa00704db6c17e5d4", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0424a27bf0f54789e4b054cd452ab8a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "          public void testForModifiersAndVisibilityDoFirst()", "signatureAfterChange": "          public void testForModifiersAndVisibilityDoFirst()", "diff": ["-      ModifiersAndVisibility mavs = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for private modifier:\", \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(0).getFirst());", "+      assertEquals(\"The error message should be correct for private modifier:\", ", "+                   \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(0).getFirst());", "-      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for 1 bad, 1 good modifier:\", \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(1).getFirst());", "+      assertEquals(\"The error message should be correct for 1 bad, 1 good modifier:\", ", "+                   \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(1).getFirst());", "-      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for 2 bad modifiers:\", \"The keywords \\\"final\\\" \\\"native\\\" cannot be used at the Intermediate level\", errors.get(2).getFirst());", "+      assertEquals(\"The error message should be correct for 2 bad modifiers:\",", "+                   \"The keywords \\\"final\\\" \\\"native\\\" cannot be used at the Intermediate level\", ", "+                   errors.get(2).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b89e14c8c9149c90c65128dbfce760c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "       public void testForBitwiseNotExpressionOnly()", "signatureAfterChange": "       public void testForBitwiseNotExpressionOnly()", "diff": ["-      BitwiseNotExpression bne = new BitwiseNotExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"t\")));", "+      BitwiseNotExpression bne = new BitwiseNotExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"t\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b9c17f91b4f2db3ac475c6cc684006", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void testForInstanceInitializerDoFirst()", "diff": ["-      InstanceInitializer ii = new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                                       new Block(JExprParser.NO_SOURCE_INFO, ", "-                                                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+      InstanceInitializer ii = new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                                       new Block(SourceInfo.NO_INFO, ", "+                                                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a14ea455b2ef86a75c5dca939abfbf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "          public void testForAbstractMethodDefDoFirst()", "signatureAfterChange": "          public void testForAbstractMethodDefDoFirst()", "diff": ["-      AbstractMethodDef amd2 = new AbstractMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      AbstractMethodDef amd2 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "-                                                     new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                                     new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                                     new Word(SourceInfo.NO_INFO, \"methodName\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c30ff08499d7906ba42db1927dac64f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "      public void xtestForConstructorDef()", "signatureAfterChange": "      public void xtestForConstructorDef()", "diff": ["-        new ConstructorDef(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"),", "+        new ConstructorDef(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"MyClass\"),", "-                            new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                            new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37614bcb5e2fdb93b98b5a57e9078129", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "          public void testForUninitializedVariableDeclaratorOnly()", "signatureAfterChange": "          public void testForUninitializedVariableDeclaratorOnly()", "diff": ["-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                                                new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                                                new Word(JExprParser.NO_SOURCE_INFO, \"Mojo\"));", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                                                new Word(SourceInfo.NO_INFO, \"Mojo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c59e8c1e32e522ef1f4e873b0b47135", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueWithValueTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void testForIncrementExpression()", "signatureAfterChange": "          public void testForIncrementExpression()", "diff": ["-      PositivePrefixIncrementExpression p = new PositivePrefixIncrementExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"bob\")));", "+      PositivePrefixIncrementExpression p = new PositivePrefixIncrementExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"bob\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f995487e90070011240aced1b9b9e4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": "          public void testHandleMethodInvocation()", "signatureAfterChange": "          public void testHandleMethodInvocation()", "diff": ["-      NullLiteral nl = new NullLiteral(JExprParser.NO_SOURCE_INFO);", "+      NullLiteral nl = new NullLiteral(SourceInfo.NO_INFO);", "-      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", JExprParser.NO_SOURCE_INFO, true);", "-      SymbolData ioe = llv.getSymbolData(\"java.io.IOException\", JExprParser.NO_SOURCE_INFO, true);", "+      SymbolData re = llv.getSymbolData(\"java.lang.RuntimeException\", SourceInfo.NO_INFO, true);", "+      SymbolData ioe = llv.getSymbolData(\"java.io.IOException\", SourceInfo.NO_INFO, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f7406d470ab15b916ea2242eaf86233", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "                public void testForConstructorDef()", "signatureAfterChange": "                public void testForConstructorDef()", "diff": ["-      ConstructorDef cd = new ConstructorDef(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"), _publicMav, new FormalParameter[0], new ReferenceType[0], ", "-                                             new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ConstructorDef cd = new ConstructorDef(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, new FormalParameter[0], new ReferenceType[0], ", "+                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce211e3408040d1d538e70a075f3aac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public void testForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void testForInstanceInitializerDoFirst()", "diff": ["-      InstanceInitializer ii = new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                                       new Block(JExprParser.NO_SOURCE_INFO, ", "-                                                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+      InstanceInitializer ii = new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                                       new Block(SourceInfo.NO_INFO, ", "+                                                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5a646a7c310de01c8734d2c58199cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "       public void testForBooleanExpressionOnly()", "signatureAfterChange": "       public void testForBooleanExpressionOnly()", "diff": ["-      BooleanExpression be = new OrExpression(JExprParser.NO_SOURCE_INFO, new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true), new BooleanLiteral(JExprParser.NO_SOURCE_INFO, false));", "+      BooleanExpression be = new OrExpression(SourceInfo.NO_INFO, new BooleanLiteral(SourceInfo.NO_INFO, true), new BooleanLiteral(SourceInfo.NO_INFO, false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f946d179f55b7c612c8cc51a414325", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LValueTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "                public void testForIncrementExpression()", "signatureAfterChange": "                public void testForIncrementExpression()", "diff": ["-      PositivePrefixIncrementExpression p = new PositivePrefixIncrementExpression(JExprParser.NO_SOURCE_INFO, new SimpleNameReference(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"bob\")));", "+      PositivePrefixIncrementExpression p = new PositivePrefixIncrementExpression(SourceInfo.NO_INFO, new SimpleNameReference(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"bob\")));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d07bbb81546ff1dd374ac292012a70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void xtestForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void xtestForInstanceInitializerDoFirst()", "diff": ["-      InstanceInitializer ii = new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                                       new Block(JExprParser.NO_SOURCE_INFO, ", "-                                                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+      InstanceInitializer ii = new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                                       new Block(SourceInfo.NO_INFO, ", "+                                                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb99503ecbb9cd019c260aa7f864642", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "          public void xtestForInnerInterfaceDef()", "signatureAfterChange": "          public void xtestForInnerInterfaceDef()", "diff": ["-      InnerInterfaceDef iid = new InnerInterfaceDef(JExprParser.NO_SOURCE_INFO, _packageMav, new Word(JExprParser.NO_SOURCE_INFO, \"Broken\"),", "+      InnerInterfaceDef iid = new InnerInterfaceDef(SourceInfo.NO_INFO, _packageMav, new Word(SourceInfo.NO_INFO, \"Broken\"),", "-                                                    new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+                                                    new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e9c0ab9cd058bcc2a74f92c9d448512", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "         public void testforValueReturnStatementOnly()", "signatureAfterChange": "         public void testforValueReturnStatementOnly()", "diff": ["-      BracedBody bb1 = new BracedBody(JExprParser.NO_SOURCE_INFO,", "-                                      new BodyItemI[] { new ValueReturnStatement(JExprParser.NO_SOURCE_INFO,", "-                                                                                 new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true))});", "+      BracedBody bb1 = new BracedBody(SourceInfo.NO_INFO,", "+                                      new BodyItemI[] { new ValueReturnStatement(SourceInfo.NO_INFO,", "+                                                                                 new BooleanLiteral(SourceInfo.NO_INFO, true))});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ec8b6bc662255045ff1e1b4d98d8c9c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "               public void testForConstructorDef()", "signatureAfterChange": "               public void testForConstructorDef()", "diff": ["-      ConstructorDef cd = new ConstructorDef(JExprParser.NO_SOURCE_INFO, new Word(JExprParser.NO_SOURCE_INFO, \"MyClass\"), _publicMav, new FormalParameter[0], new ReferenceType[0], ", "-                                             new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0]));", "+      ConstructorDef cd = new ConstructorDef(SourceInfo.NO_INFO, new Word(SourceInfo.NO_INFO, \"MyClass\"), _publicMav, new FormalParameter[0], new ReferenceType[0], ", "+                                             new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8144ad142d83314b06c2a6d102c63bad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyIntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "      public void testForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void testForInstanceInitializerDoFirst()", "diff": ["-      InstanceInitializer ii = new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                                       new Block(JExprParser.NO_SOURCE_INFO, ", "-                                                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+      InstanceInitializer ii = new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                                       new Block(SourceInfo.NO_INFO, ", "+                                                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83aca48672cfb02361bcb9037da1e159", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyElementaryVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "          public void testForInstanceInitializerDoFirst()", "signatureAfterChange": "          public void testForInstanceInitializerDoFirst()", "diff": ["-      InstanceInitializer ii = new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                                       new Block(JExprParser.NO_SOURCE_INFO, ", "-                                                                 new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+      InstanceInitializer ii = new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                                       new Block(SourceInfo.NO_INFO, ", "+                                                                 new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86dcdefdfcaf5b117a6036741bde3b04", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/VoidMethodsNotAllowedClassBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public void testForAbstractMethodDef()", "signatureAfterChange": "          public void testForAbstractMethodDef()", "diff": ["-      AbstractMethodDef amd = new AbstractMethodDef(JExprParser.NO_SOURCE_INFO, _publicAbstractMav, new TypeParameter[0], ", "-                                                     new VoidReturn(JExprParser.NO_SOURCE_INFO, \"void\"), new Word(JExprParser.NO_SOURCE_INFO, \"myMethod\"), new FormalParameter[0], ", "+      AbstractMethodDef amd = new AbstractMethodDef(SourceInfo.NO_INFO, _publicAbstractMav, new TypeParameter[0], ", "+                                                     new VoidReturn(SourceInfo.NO_INFO, \"void\"), new Word(SourceInfo.NO_INFO, \"myMethod\"), new FormalParameter[0], "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9490cfb94c07f161bebe1001f5552e3c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "               public void testEquals()", "signatureAfterChange": "               public void testEquals()", "diff": ["-                            new TypeParameter[] { new TypeParameter(JExprParser.NO_SOURCE_INFO, new TypeVariable(JExprParser.NO_SOURCE_INFO,\"tv\"), ", "-                                                                    new TypeVariable(JExprParser.NO_SOURCE_INFO,\"i\")) }, ", "+                            new TypeParameter[] { new TypeParameter(SourceInfo.NO_INFO, new TypeVariable(SourceInfo.NO_INFO,\"tv\"), ", "+                                                                    new TypeVariable(SourceInfo.NO_INFO,\"i\")) }, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d87c94590d952ca17bbbf5d5f0ae6b6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "         public void testForInstanceOfExpressionOnly()", "signatureAfterChange": "         public void testForInstanceOfExpressionOnly()", "diff": ["-      InstanceofExpression ioe = new InstanceofExpression(JExprParser.NO_SOURCE_INFO, ", "-                                                           new BooleanLiteral(JExprParser.NO_SOURCE_INFO, true),", "-                                                          new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"));", "+      InstanceofExpression ioe = new InstanceofExpression(SourceInfo.NO_INFO, ", "+                                                           new BooleanLiteral(SourceInfo.NO_INFO, true),", "+                                                          new PrimitiveType(SourceInfo.NO_INFO, \"int\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40f8a9608b12642e1cbacd3a023bc4a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void testForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void testForInstanceInitializerDoFirst()", "diff": ["-        new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                new Block(JExprParser.NO_SOURCE_INFO, ", "-                                          new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+        new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                new Block(SourceInfo.NO_INFO, ", "+                                          new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b14f43ce034057ff47a335ec189af990", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "           public void testComplexThisConstructorInvocationNotAllowed()", "signatureAfterChange": "           public void testComplexThisConstructorInvocationNotAllowed()", "diff": ["-      ComplexThisConstructorInvocation constr = new ComplexThisConstructorInvocation(JExprParser.NO_SOURCE_INFO, new NullLiteral(JExprParser.NO_SOURCE_INFO), new ParenthesizedExpressionList(JExprParser.NO_SOURCE_INFO, new Expression[0]));", "+      ComplexThisConstructorInvocation constr = new ComplexThisConstructorInvocation(SourceInfo.NO_INFO, new NullLiteral(SourceInfo.NO_INFO), new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b359fd2a19d221549c7441e18d520b59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "      public void xtestForInstanceInitializerDoFirst()", "signatureAfterChange": "      public void xtestForInstanceInitializerDoFirst()", "diff": ["-        new InstanceInitializer(JExprParser.NO_SOURCE_INFO, ", "-                                new Block(JExprParser.NO_SOURCE_INFO, ", "-                                          new BracedBody(JExprParser.NO_SOURCE_INFO, new BodyItemI[0])));", "+        new InstanceInitializer(SourceInfo.NO_INFO, ", "+                                new Block(SourceInfo.NO_INFO, ", "+                                          new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b648e2ef55d7d5087ebddcd72c060277", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "          public void testForIfThenStatementOnly()", "signatureAfterChange": "          public void testForIfThenStatementOnly()", "diff": ["-      IfThenStatement its = new IfThenStatement(JExprParser.NO_SOURCE_INFO, ", "-                                                new NullLiteral(JExprParser.NO_SOURCE_INFO), ", "-                                                new EmptyStatement(JExprParser.NO_SOURCE_INFO));", "+      IfThenStatement its = new IfThenStatement(SourceInfo.NO_INFO, ", "+                                                new NullLiteral(SourceInfo.NO_INFO), ", "+                                                new EmptyStatement(SourceInfo.NO_INFO));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8fc6b22edf9dc265d76bf489a1ef55d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "          public void xtestForModifiersAndVisibilityDoFirst()", "signatureAfterChange": "          public void xtestForModifiersAndVisibilityDoFirst()", "diff": ["-      ModifiersAndVisibility mavs = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(SourceInfo.NO_INFO, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddb1ccbde81a3ef1b7ca81b226f32e3e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyFullJavaVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void xtestForAbstractMethodDefDoFirst()", "signatureAfterChange": "          public void xtestForAbstractMethodDefDoFirst()", "diff": ["-      AbstractMethodDef amd2 = new AbstractMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      AbstractMethodDef amd2 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "-                                                     new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                                     new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                                     new Word(SourceInfo.NO_INFO, \"methodName\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4943475e6540cdeff82f539e3556226", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyAdvancedVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "          public void testForAbstractMethodDefDoFirst()", "signatureAfterChange": "          public void testForAbstractMethodDefDoFirst()", "diff": ["-      AbstractMethodDef amd2 = new AbstractMethodDef(JExprParser.NO_SOURCE_INFO, ", "+      AbstractMethodDef amd2 = new AbstractMethodDef(SourceInfo.NO_INFO, ", "-                                                     new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"double\"), ", "-                                                     new Word(JExprParser.NO_SOURCE_INFO, \"methodName\"),", "+                                                     new PrimitiveType(SourceInfo.NO_INFO, \"double\"), ", "+                                                     new Word(SourceInfo.NO_INFO, \"methodName\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9c194268071610f5663105e59d59a1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/InterfaceBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public void testForUninitializedVariableDeclaratorOnly()", "signatureAfterChange": "          public void testForUninitializedVariableDeclaratorOnly()", "diff": ["-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                                                new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                                                new Word(JExprParser.NO_SOURCE_INFO, \"Mojo\"));", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                                                new Word(SourceInfo.NO_INFO, \"Mojo\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fab9b45bb9222934941d0db9943749cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ClassBodyTypeChecker.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "          public void testForUninitializedVariableDeclaratorOnly()", "signatureAfterChange": "          public void testForUninitializedVariableDeclaratorOnly()", "diff": ["-      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(JExprParser.NO_SOURCE_INFO, ", "-                                                                                new PrimitiveType(JExprParser.NO_SOURCE_INFO, \"int\"), ", "-                                                                                new Word(JExprParser.NO_SOURCE_INFO, \"Mojo\"));", "+      UninitializedVariableDeclarator uvd = new UninitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                                                                new PrimitiveType(SourceInfo.NO_INFO, \"int\"), ", "+                                                                                new Word(SourceInfo.NO_INFO, \"Mojo\"));"]}], "num": 11397}