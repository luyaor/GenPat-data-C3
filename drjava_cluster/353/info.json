{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06a02462fb978167dcc179889f703566", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33bdab1900e876a1d2526f697ba2dba3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "6236813a6f58eec3e36be85e8a5e99497df15f88", "commitAfterChange": "825069fc03df2485e176e08ad1eabca6952fc09c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<ParseException> pes)", "signatureAfterChange": "   private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes)", "diff": ["-  private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<ParseException> pes) {", "+  private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes) {", "-    Iterator<ParseException> iter = pes.iterator();", "+    Iterator<JExprParseException> iter = pes.iterator();", "-      ParseException pe = iter.next();", "-      errors.addLast(new CompilerError(pe.file, pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, pe.getMessage(), false));", "+      JExprParseException pe = iter.next();", "+      errors.addLast(new CompilerError(pe.getFile(), pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, pe.getMessage(), false));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5289dc1326f1722f8f0a1e6d0b6f86", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "   private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes)", "signatureAfterChange": "   private LinkedList<DJError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes)", "diff": ["-  private LinkedList<CompilerError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes) {", "-    final LinkedList<CompilerError> errors = new LinkedList<CompilerError>();", "+  private LinkedList<DJError> _parseExceptions2CompilerErrors(LinkedList<JExprParseException> pes) {", "+    final LinkedList<DJError> errors = new LinkedList<DJError>();", "-      errors.addLast(new CompilerError(pe.getFile(), pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, ", "+      errors.addLast(new DJError(pe.getFile(), pe.currentToken.beginLine-1, pe.currentToken.beginColumn-1, "]}], "num": 353}