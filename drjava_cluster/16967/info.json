{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92ec7d0dc60230d94ee3c429360f91f4", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae16dddabcc0e80eec3b87b7b4aa1b73", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "diff": ["-    List classes;  ", "+    List<ReferenceType> classes;  ", "-      classes = _vm.classesByName(className);  // Add parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "+      classes = _vm.classesByName(className);  // Added parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "-      ref = (ReferenceType) classes.get(i);", "+      ref = classes.get(i);", "-        List lines = new LinkedList();", "+        List<Location> lines = new LinkedList();   // Added parameterization <Location> to lines", "-          lines = ref.locationsOfLine(lineNumber); // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "+          lines = ref.locationsOfLine(lineNumber); // JDK 1.5 will eliminate this type warning", "-          List innerRefs = ref.nestedTypes();  // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "+          List<ReferenceType> innerRefs = ref.nestedTypes();  // Added parameterization <ReferenceType>. JDK 1.5 will eliminate this type warning", "-              ReferenceType currRef = (ReferenceType) innerRefs.get(j);", "-              lines = currRef.locationsOfLine(lineNumber);  // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "+              ReferenceType currRef = innerRefs.get(j);", "+              lines = currRef.locationsOfLine(lineNumber);  // JDK 1.5 will eliminate this type warning"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3f1e7cd4dc543226e41c3aee2f18795", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "signatureAfterChange": "   synchronized Vector<ReferenceType> getReferenceTypes(String className,                                                        int lineNumber)", "diff": ["-    List classes;  ", "+    List<ReferenceType> classes;  ", "-      classes = _vm.classesByName(className);  // Add parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "+      classes = _vm.classesByName(className);  // Added parameterization <ReferenceType> to classes. JDK 1.5 will eliminate this type warning", "-      ref = (ReferenceType) classes.get(i);", "+      ref = classes.get(i);", "-        List lines = new LinkedList();", "+        List<Location> lines = new LinkedList();   // Added parameterization <Location> to lines", "-          lines = ref.locationsOfLine(lineNumber); // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "+          lines = ref.locationsOfLine(lineNumber); // JDK 1.5 will eliminate this type warning", "-          List innerRefs = ref.nestedTypes();  // Add parameterization <ThreadReference>. JDK 1.5 will eliminate this type warning", "+          List<ReferenceType> innerRefs = ref.nestedTypes();  // Added parameterization <ReferenceType>. JDK 1.5 will eliminate this type warning", "-              ReferenceType currRef = (ReferenceType) innerRefs.get(j);", "-              lines = currRef.locationsOfLine(lineNumber);  // Add parameterization <Location> to lines. JDK 1.5 will eliminate this type warning", "+              ReferenceType currRef = innerRefs.get(j);", "+              lines = currRef.locationsOfLine(lineNumber);  // JDK 1.5 will eliminate this type warning"]}], "num": 16967}