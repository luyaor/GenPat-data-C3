{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e2dc33945b5828e9d31a7bf5a8c7a12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b4903cd365d17fffeb3bcd1cad0b11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "b1a58702f65a80a9143f66e5aa5d25b7a5e79ac6", "commitAfterChange": "953692cfe4661f9adf09381b834b1831bae5e30c", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "signatureAfterChange": "     public boolean shouldRevertFile(OpenDefinitionsDocument doc)", "diff": ["-     switch (rc) {", "-     case JOptionPane.YES_OPTION:", "-       return true;", "-     case JOptionPane.NO_OPTION:", "-       return false;", "-     case JOptionPane.CLOSED_OPTION:", "-       return false;", "-     default:", "-       throw new RuntimeException(\"Invalid rc: \" + rc);", "-     }", "-   }", "+      switch (rc) {", "+        case JOptionPane.YES_OPTION:", "+          return true;", "+        case JOptionPane.NO_OPTION:", "+          return false;", "+        case JOptionPane.CLOSED_OPTION:", "+        case JOptionPane.CANCEL_OPTION:", "+          return false;", "+        default:", "+          throw new RuntimeException(\"Invalid rc: \" + rc);", "+      }", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c23e37db77d1d983c6bd34e5566feb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/BooleanOption.java", "commitBeforeChange": "8f8a64864bd9c3c9658401188aaec5c9c0dfe4f7", "commitAfterChange": "9e1a29777c7e5973840e817aca59ceea66af7a9c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Boolean parse(String s)", "signatureAfterChange": "   public Boolean parse(String s)", "diff": ["-  public Boolean parse(String s)", "-  {", "+  public Boolean parse(String s) {", "-    if (s.equals(\"true\")) {", "-      return Boolean.TRUE;", "-    }", "-    if (s.equals(\"false\")) {", "-      return Boolean.FALSE;", "-    }", "-    else {", "-      throw new OptionParseException(name, s,", "-                                     \"Must be a String representing\" +", "-                                     \"a boolean value.\");", "-    }", "+    if (s.equals(\"true\")) return Boolean.TRUE;", "+    if (s.equals(\"false\")) return Boolean.FALSE;", "+    else throw new OptionParseException(name, s, \"Must be a String representing a boolean value.\");"]}], "num": 19107}