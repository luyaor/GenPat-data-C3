{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c20e8194431fd6c7988857c6503e4ac", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00e15e4b957c7afce752b3bfb3c9e931", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "3138149e59af557581689e53b212f79d04dd8105", "commitAfterChange": "2fc1b48ae47904f12ff70a4157426a6f949b079b", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "      public int getCurrentLine()", "signatureAfterChange": "      public int getCurrentLine()", "diff": ["-  public int getCurrentLine() {", "-    try {", "-      int pos = getCaretPosition();", "-      FontMetrics metrics = getFontMetrics(getFont());", "-      Rectangle startRect = modelToView(pos);", "-      if (startRect == null) return 1;", "-      //top left position is (3,3), so font size<=6 will be off", "-      return (new Double (startRect.getY() / metrics.getHeight()).intValue() + 1);", "-    } catch (BadLocationException e) {", "-      // This shouldnt happen b/c we retrieve the caret pos before calling modelToView", "-      throw new UnexpectedException(e);", "-    }", "-  }", "+  public int getCurrentLine() { return _doc.getLineOfOffset(getCaretPosition()); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04238b822a7fbc22bcb5df442d2d64a9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 14, "signatureBeforeChange": "      public int replaceAll(ContinueCommand startFromTop)", "signatureAfterChange": "      public int replaceAll()", "diff": ["-  public int replaceAll(ContinueCommand startFromTop) {", "+  public int replaceAll() {", "-    try {", "-      Position midpoint = _doc.createPosition(_current.getOffset());", "-      count += _replaceAllWithinBounds(_current, _doc.getEndPosition());", "-      if (startFromTop.shouldContinue()) {", "-        _current = _doc.getStartPosition();", "-        count += _replaceAllWithinBounds(_current, midpoint);", "-      }", "-      return count;", "-    }", "-    catch (BadLocationException e) {", "-      throw new UnexpectedException(e);", "-    }", "-  }", "+    int found = findNext().getFoundOffset();", "+      found = findNext().getFoundOffset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c69d558a139ee3063e11616dec79367", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachine.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public int findNext(ContinueCommand startFromTop)", "signatureAfterChange": "   public FindResult findNext()", "diff": ["-  public int findNext(ContinueCommand startFromTop) {", "+  public FindResult findNext() {", "+        _found = true;", "-      else if ((getStartOffset() > 0) && (startFromTop.shouldContinue())) { ", "+      else {", "+        _wrapped = true;", "+      // flag the return value so that they can tell that we had to wrap the file to determine the info.", "+    ", "+      if(foundOffset == -1 && _found) {", "+        _current = _start;", "+        _found = false;", "+        return findNext();", "+      } ", "-        foundOffset = -1;", "+        FindResult fr = new FindResult(foundOffset, _wrapped);", "+        _wrapped = false;", "+        return fr;", "-      return foundOffset;"]}], "num": 25434}