{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3d7869ca489171816df0e1709f9b4f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c34c412a7e434e8670b62252da14988", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public String getNextTopLevelClassName(int startPos, int endPos)     throws ClassNameNotFoundException", "signatureAfterChange": "   public String getNextTopLevelClassName(int startPos, int endPos)     throws ClassNameNotFoundException", "diff": ["-      if(indexOfClass > -1 ", "+      if( (indexOfClass > -1) ", "-      else if(indexOfInterface > -1 ", "+      else if( (indexOfInterface > -1) ", "-      else if(indexOfEnum > -1", "+      else if( (indexOfEnum > -1)", "-      if (index == -1) {", "-        throw new ClassNameNotFoundException(\"No top level class name found\");", "-      }", "+      if (index == -1) throw new ClassNameNotFoundException(\"No top level class name found\");", "-      done = false;", "-      for (int i=index; i < textLength && !done; i++) {", "+      for (int i = index; i < textLength; i++) {", "-          done = true;", "+          break;", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "-    finally {", "-      setCurrentLocation(oldLocation);", "-    }", "+    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "+    finally { setCurrentLocation(oldLocation); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8b35d0072df80364f53f596be746a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "fa78ee7a06602f123abf33b8aef0005c93bb3efa", "commitAfterChange": "f26f93ad5e4b158c960a6cefd64cf99f7137ecbc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "    public void appendSyntaxErrorResult(String message, String interaction, int startRow, int startCol,                                       int endRow, int endCol, String styleName)", "signatureAfterChange": "    public void appendSyntaxErrorResult(String message, String interaction, int startRow, int startCol,                                       int endRow, int endCol, String styleName)", "diff": ["-    //writeLock();", "-      if (null == message || \"null\".equals(message)) {", "-        message = \"\";", "-      }", "+      if (null == message || \"null\".equals(message))  message = \"\";", "-      if(message.indexOf(\"Lexical error\") != -1) {", "+      if (message.indexOf(\"Lexical error\") != -1) {", "-        if(i != -1)", "-          message = \"Syntax Error:\" + message.substring(i+2,message.length());                                ", "+        if (i != -1) message = \"Syntax Error:\" + message.substring(i+2,message.length());                                ", "-      if(message.indexOf(\"Error\") == -1) ", "-        message = \"Error: \" + message;", "+      if (message.indexOf(\"Error\") == -1) message = \"Error: \" + message;", "-    catch (DocumentAdapterException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "-//    finally {", "-//      writeUnlock();", "-//    }", "+    catch (DocumentAdapterException ble) { throw new UnexpectedException(ble); }"]}], "num": 27825}