{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c13b8864075582bbfac07dce77c5f5ae", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86753a11ac448db6dd3d8dd2a1e223aa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testSingleEclipsesDouble()", "signatureAfterChange": "   public void testSingleEclipsesDouble()", "diff": ["-    model.insertChar('\\\"');", "-    assertEquals(\"#0.0\", INSIDE_DOUBLE_QUOTE, model.getStateAtCurrent());", "-    model.move(-1);", "-    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    model.move(1);", "-    model.insertChar('A');    ", "-    model.move(-1);", "-    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, model.getStateAtCurrent());    ", "-    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertTrue(\"#1.2\", model.currentToken().isGap());", "-    model.move(-1);", "-    model.insertChar('\\'');", "-    assertEquals(\"#2.0\", INSIDE_SINGLE_QUOTE, model.getStateAtCurrent());", "-    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.2\", \"\\\"\", model.currentToken().getType());", "-    model.move(1);", "-    assertEquals(\"#3.0\", INSIDE_SINGLE_QUOTE, model.getStateAtCurrent());", "-    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertTrue(\"#3.2\", model.currentToken().isGap());    ", "+    _model.insertChar('\\\"');", "+    assertEquals(\"#0.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "+    _model.move(-1);", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(_model));", "+    _model.move(1);", "+    _model.insertChar('A');", "+    _model.move(-1);", "+    assertEquals(\"#1.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#1.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(_model));", "+    assertTrue(\"#1.2\", _model.currentToken().isGap());", "+    _model.move(-1);", "+    _model.insertChar('\\'');", "+    assertEquals(\"#2.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#2.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(_model));", "+    assertEquals(\"#2.2\", \"\\\"\", _model.currentToken().getType());", "+    _model.move(1);", "+    assertEquals(\"#3.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(_model));", "+    assertTrue(\"#3.2\", _model.currentToken().isGap());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7233acedbf975edb39a39be91cdbfba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/MixedQuoteTest.java", "commitBeforeChange": "9aa0c6bec51662a685ea4b86bc02a52c9e593d8a", "commitAfterChange": "691bffe1c74bde71a4cf5e7ed44b9a42c3c86fd0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void testDoubleEclipsesSingle()", "signatureAfterChange": "   public void testDoubleEclipsesSingle()", "diff": ["-    model.insertChar('\\'');", "-    assertEquals(\"#0.0\", INSIDE_SINGLE_QUOTE, model.getStateAtCurrent());", "-    model.move(-1);", "-    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(model));", "-    model.move(1);", "-    model.insertChar('A');    ", "-    model.move(-1);", "-    assertEquals(\"#1.0\", INSIDE_SINGLE_QUOTE, model.getStateAtCurrent());    ", "-    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(model));", "-    assertTrue(\"#1.2\", model.currentToken().isGap());", "-    model.move(-1);", "-    model.insertChar('\\\"');", "-    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, model.getStateAtCurrent());", "-    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertEquals(\"#2.2\", \"\\'\", model.currentToken().getType());", "-    model.move(1);", "-    assertEquals(\"#3.0\", INSIDE_DOUBLE_QUOTE, model.getStateAtCurrent());", "-    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(model));", "-    assertTrue(\"#3.2\", model.currentToken().isGap());    ", "-  }  ", "+    _model.insertChar('\\'');", "+    assertEquals(\"#0.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "+    _model.move(-1);", "+    assertEquals(\"#0.1\", FREE, stateOfCurrentToken(_model));", "+    _model.move(1);", "+    _model.insertChar('A');", "+    _model.move(-1);", "+    assertEquals(\"#1.0\", INSIDE_SINGLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#1.1\", INSIDE_SINGLE_QUOTE, stateOfCurrentToken(_model));", "+    assertTrue(\"#1.2\", _model.currentToken().isGap());", "+    _model.move(-1);", "+    _model.insertChar('\\\"');", "+    assertEquals(\"#2.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#2.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(_model));", "+    assertEquals(\"#2.2\", \"\\'\", _model.currentToken().getType());", "+    _model.move(1);", "+    assertEquals(\"#3.0\", INSIDE_DOUBLE_QUOTE, _model.getStateAtCurrent());", "+    assertEquals(\"#3.1\", INSIDE_DOUBLE_QUOTE, stateOfCurrentToken(_model));", "+    assertTrue(\"#3.2\", _model.currentToken().isGap());", "+  }"]}], "num": 3467}