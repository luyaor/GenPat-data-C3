{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aaa6a06d669c681fab4ee7537d3b0ea0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbdec95a4abfa01a0f7ca4add329d38b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "9252a1853f289706bd8613c5b3a7e1dae6638ae1", "commitAfterChange": "eaf9387d90b9ce749cafaa91a98fe5e7c77f98e0", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 161, "signatureBeforeChange": "     public void activeDocumentChanged(OpenDefinitionsDocument active)", "signatureAfterChange": "     public void activeDocumentChanged(final OpenDefinitionsDocument active)", "diff": ["-    public void activeDocumentChanged(OpenDefinitionsDocument active) {", "-      _switchDefScrollPane();", "-", "-      boolean isModified = active.isModifiedSinceSave();", "-      boolean canCompile = (!isModified && !active.isUntitled());", "-      _saveAction.setEnabled(isModified);", "-      _revertAction.setEnabled(!active.isUntitled());", "-", "-      // Update error highlights", "-      _errorPanel.getErrorListPane().selectNothing();", "-      _junitPanel.getJUnitErrorListPane().selectNothing();", "-      ", "-      int pos = _currentDefPane.getCaretPosition();", "-      _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "-      _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "-     ", "-      // Update FileChoosers' directory", "-      _setCurrentDirectory(active);", "-", "-      // Update title and position", "-      updateFileTitle();", "-      _currentDefPane.requestFocus();", "-      _posListener.updateLocation();", "-      ", "-      // Check if modified (but only if we're not closing all files)", "-      if (!_model.isClosingAllFiles()) {", "-        try {", "-          active.revertIfModifiedOnDisk();", "-        } catch (IOException e) {", "-          _showIOError(e);", "-        }", "-      }", "-      ", "-      // Change Find/Replace to the new defpane", "-      if (_findReplace.isDisplayed()) {", "-        _findReplace.stopListening();", "-        _findReplace.beginListeningTo(_currentDefPane);", "-        //uninstallFindReplaceDialog(_findReplace);", "-        //installFindReplaceDialog(_findReplace);", "-      }", "+    public void activeDocumentChanged(final OpenDefinitionsDocument active) {", "+      // Only change GUI from event-dispatching thread", "+      // (This can be called from other threads...)", "+      //Runnable doCommand = new Runnable() {", "+      // public void run() {", "+          _switchDefScrollPane();", "+          ", "+          boolean isModified = active.isModifiedSinceSave();", "+          boolean canCompile = (!isModified && !active.isUntitled());", "+          _saveAction.setEnabled(isModified);", "+          _revertAction.setEnabled(!active.isUntitled());", "+          ", "+          // Update error highlights", "+          _errorPanel.getErrorListPane().selectNothing();", "+          _junitPanel.getJUnitErrorListPane().selectNothing();", "+          ", "+          int pos = _currentDefPane.getCaretPosition();", "+          _currentDefPane.getErrorCaretListener().updateHighlight(pos);", "+          _currentDefPane.getJUnitErrorCaretListener().updateHighlight(pos);", "+          ", "+          // Update FileChoosers' directory", "+          _setCurrentDirectory(active);", "+          ", "+          // Update title and position", "+          updateFileTitle();", "+          _currentDefPane.requestFocus();", "+          _posListener.updateLocation();", "+          ", "+          // Check if modified (but only if we're not closing all files)", "+          if (!_model.isClosingAllFiles()) {", "+            try {", "+              active.revertIfModifiedOnDisk();", "+            } catch (IOException e) {", "+              _showIOError(e);", "+            }", "+          }", "+          ", "+          // Change Find/Replace to the new defpane", "+          if (_findReplace.isDisplayed()) {", "+            _findReplace.stopListening();", "+            _findReplace.beginListeningTo(_currentDefPane);", "+            //uninstallFindReplaceDialog(_findReplace);", "+            //installFindReplaceDialog(_findReplace);", "+          }", "+      //  }", "+      //};", "+      //SwingUtilities.invokeLater(doCommand);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57c4f365732f3050966082c94967f59", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/Log.java", "commitBeforeChange": "7933cc364884763a44a085994870596faa04b316", "commitAfterChange": "b978cac1d85997e83464382e4a499c19d736223c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public synchronized void log(String s, StackTraceElement[] trace)", "signatureAfterChange": "   public synchronized void log(String s, StackTraceElement[] trace)", "diff": ["-      StringBuilder traceImage = new StringBuilder();", "+      final StringBuilder traceImage = new StringBuilder();"]}], "num": 30362}