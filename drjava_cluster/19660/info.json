{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4defc1a85ff625c6f6603c810e34ca6d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c7d4ff738bd00f6d100a20a973a3bf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public Node visit(ForStatement node)", "signatureAfterChange": "   public Object visit(ForStatement node)", "diff": ["-  public Node visit(ForStatement node) {", "-    LinkedList<Node> init = null; // Add parameterization <Node>. ", "+  public Object visit(ForStatement node) {", "+    LinkedList init = null; // Add parameterization <Node>. ", "-      init = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getInitialization().iterator();", "+      init = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getInitialization().iterator();", "-        init.add(it.next().acceptVisitor(this));", "+        init.add((Node)((Node)it.next()).acceptVisitor(this));", "-    LinkedList<Node> updt = null; // Add parameterization <Node>.", "+    LinkedList updt = null; // Add parameterization <Node>.", "-      updt = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it = node.getUpdate().iterator();", "+      updt = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getUpdate().iterator();", "-        updt.add(it.next().acceptVisitor(this));", "+        updt.add((Node)((Node)it.next()).acceptVisitor(this));", "-    node.setBody(node.getBody().acceptVisitor(this));", "+    node.setBody((Node)node.getBody().acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9ef477ae28d6cb7625c68812e541a4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "     public Node visit(ConstructorDeclaration node)", "signatureAfterChange": "     public Object visit(ConstructorDeclaration node)", "diff": ["-    public Node visit(ConstructorDeclaration node) {", "-      LinkedList<FormalParameter> parameters = new LinkedList<FormalParameter>(); // Add parameterization <Node>.", "-      Iterator<FormalParameter> it1 = node.getParameters().iterator();", "-      while (it1.hasNext()) {", "-        parameters.add((FormalParameter)it1.next().acceptVisitor(this));", "+    public Object visit(ConstructorDeclaration node) {", "+      LinkedList parameters = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getParameters().iterator();", "+      while (it.hasNext()) {", "+        parameters.add((Node)((Node)it.next()).acceptVisitor(this));", "-      LinkedList<Node> statements = new LinkedList<Node>(); // Add parameterization <Node>.", "-      Iterator<Node> it2 = node.getStatements().iterator();", "-      while (it2.hasNext()) {", "-        statements.add(it2.next().acceptVisitor(this));", "+      LinkedList statements = new LinkedList(); // Add parameterization <Node>.", "+      it = node.getStatements().iterator();", "+      while (it.hasNext()) {", "+        statements.add((Node)((Node)it.next()).acceptVisitor(this));"]}], "num": 19660}