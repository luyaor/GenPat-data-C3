{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ff53c8b309b5748593e3cbc60612a3d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23553181d868713f19e3d478be529304", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "diff": ["-    TestInteractionsModel model = (TestInteractionsModel)_model;", "+    final TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "+    final InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "-    InteractionsDocument doc = model.getDocument();", "+    final InteractionsDocument doc = model.getDocument();", "-    ism.executeInteraction();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "+    Utilities.clearEventQueue();", "-    model.replReturnedVoid();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "+    Utilities.clearEventQueue();", "-    ism.executeInteraction();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "+    Utilities.clearEventQueue();", "-    model.replReturnedVoid();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d4c1c42e67699eed0b79b85ee3a3fea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "diff": ["-    TestInteractionsModel model = (TestInteractionsModel)_model;", "+    final TestInteractionsModel model = (TestInteractionsModel)_model;", "-    InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "+    final InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "-    InteractionsDocument doc = model.getDocument();", "+    final InteractionsDocument doc = model.getDocument();", "-    ism.executeInteraction();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "+    Utilities.clearEventQueue();", "-    model.replReturnedVoid();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "+    Utilities.clearEventQueue();", "-    ism.executeInteraction();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "+    Utilities.clearEventQueue();", "-    model.replReturnedVoid();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "+    Utilities.clearEventQueue();", "+    Utilities.clearEventQueue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec59e2ab78993e25788aef3c958f17d8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModelTest.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "signatureAfterChange": "   public void testScriptLoading() throws IOException, OperationCanceledException", "diff": ["-    final TestInteractionsModel model = (TestInteractionsModel)_model;", "+    TestInteractionsModel model = (TestInteractionsModel)_model;", "-    final InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "+    InteractionsScriptModel ism = model.loadHistoryAsScript(new FileOpenSelector() {", "-    final InteractionsDocument doc = model.getDocument();", "+    InteractionsDocument doc = model.getDocument();", "-    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "-    Utilities.clearEventQueue();", "+    ism.executeInteraction();", "-    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "-    Utilities.clearEventQueue();", "+    model.replReturnedVoid();", "-    Utilities.invokeAndWait(new Runnable() { public void run() { ism.executeInteraction(); } });", "-    Utilities.clearEventQueue();", "+    ism.executeInteraction();", "-    Utilities.invokeAndWait(new Runnable() { public void run() { model.replReturnedVoid(); } });", "-    Utilities.clearEventQueue();", "+    model.replReturnedVoid();", "-    Utilities.clearEventQueue();"]}], "num": 17227}