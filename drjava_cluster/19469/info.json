{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76695b3a21823651538c4fc22e16dc5a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f3949498794e047b5866f74b15538c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "bd2e852d4b09497531ae79af49475815d01d70b1", "commitAfterChange": "85b72c50d3f809a70141774d731cbef2c25b2f7f", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 33, "signatureBeforeChange": "          public boolean isNew()", "signatureAfterChange": "       public void valueChanged(TreeSelectionEvent e)", "diff": ["+    TreeSelectionListener tsl = new TreeSelectionListener() {", "+      public void valueChanged(TreeSelectionEvent e) {", "+        int n = e.getPaths().length;", "+        File[] changed = new File[n];", "+        boolean[] areNew = new boolean[n];", "+        for (int i=0; i < n; i++) {", "+          changed[i] = getFileForTreePath(e.getPaths()[i]);", "+          areNew[i] = e.isAddedPath(i);", "+        }", "+        File newLead = getFileForTreePath(e.getNewLeadSelectionPath());", "+        File oldLead = getFileForTreePath(e.getOldLeadSelectionPath());", "+        FileSelectionEvent fse = new FileSelectionEvent(DirectoryChooser.this,", "+                                                        changed, areNew,", "+                                                        newLead, oldLead);", "+        //File[] changed, boolean[] areNew, File newLead, File oldLead", "+        l.valueChanged(fse);", "+      }", "-    ", "-    public boolean isNew() { return _isNew; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb858e7d928e0618cc79bbe0cca15700", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/SingleDisplayModel.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public File[] getSourceRootSet() throws InvalidPackageException", "signatureAfterChange": "     public void valueChanged(ListSelectionEvent e)", "diff": ["+  private class SelectionModelListener implements ListSelectionListener {", "+    public void valueChanged(ListSelectionEvent e) {", "+      if (!e.getValueIsAdjusting()) {", "+        int index = _selectionModel.getMinSelectionIndex();", "+        ListModel docs = getDefinitionsDocuments();", "+        if ((index < 0) || (index > docs.getSize())) {", "+          throw new RuntimeException(\"Document index out of bounds: \" + index);", "+        }", "+        _activeDocument = (OpenDefinitionsDocument) docs.getElementAt(index);", "+", "+        // notify listeners", "+        notifyListeners(new EventNotifier() {", "+          public void notifyListener(GlobalModelListener l) {", "+            SingleDisplayModelListener sl = (SingleDisplayModelListener) l;", "+            sl.activeDocumentChanged(_activeDocument);", "+          }", "+        });", "+      }", "+    }", "-   */", "-  public File[] getSourceRootSet() throws InvalidPackageException {", "-    return super.getSourceRootSet();", "-  }"]}], "num": 19469}