{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53aa3f02aa94d2f932ce79ede6402716", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd1b65d50b746fce289e72692ba89ba", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public void testSimpleReplace() throws BadLocationException", "signatureAfterChange": "     public void testSimpleReplace() throws BadLocationException", "diff": ["- ", "-  public void testSimpleReplace() throws BadLocationException {", "-    doc.insertString(0,EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\");", "-    frm.setReplaceWord(\"monkey\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "-    frm.replaceCurrent();", "-    assertEquals(\"new replaced text\",", "-                 \"Hear no monkey, see no evil, speak no evil.\",", "-                 doc.getText(0, doc.getLength()));", "-  }", "+  public void testSimpleReplace() throws BadLocationException { ", "+    doc.insertString(0,EVIL_TEXT, null); ", "+    _initFrm(0);", "+    _assertOffsets(frm, 0, 0); ", "+    frm.setFindWord(\"evil\"); ", "+    frm.setReplaceWord(\"monkey\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+    frm.replaceCurrent(); ", "+    assertEquals(\"new replaced text\", ", "+                 \"Hear no monkey, see no evil, speak no evil.\", ", "+                 doc.getText(0, doc.getLength())); ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e19318d52f30cda322fc674d67e0cbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void testStartFromTopContinue() throws BadLocationException", "signatureAfterChange": "       public void testStartFromTopContinue() throws BadLocationException", "diff": ["-  public void testStartFromTopContinue() throws BadLocationException {", "+  public void testStartFromTopContinue() throws BadLocationException { ", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 5);", "-    _assertOffsets(frm, 5, 5);", "-    frm.setFindWord(\"Hear\");", "-    _testFindNextSucceeds(frm, CONTINUE, 5, 4);", "-  }", "+    _initFrm(5);", "+    _assertOffsets(frm, 5, 5); ", "+    frm.setFindWord(\"Hear\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 5, 4); ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f33b5d20da50209348f7bfbe64340b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public void testFindNextUpdatesCurrent() throws BadLocationException", "signatureAfterChange": "    public void testFindNextUpdatesCurrent() throws BadLocationException", "diff": ["-  ", "-  public void testFindNextUpdatesCurrent() throws BadLocationException {", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "+", "+  public void testFindNextUpdatesCurrent() throws BadLocationException { ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(0);", "+    _assertOffsets(frm, 0, 0); ", "+    frm.setFindWord(\"evil\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31cfa322632393577a6d387e27fb5d09", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "signatureAfterChange": "    public void testMultipleCallsToFindNext() throws BadLocationException", "diff": ["-  public void testMultipleCallsToFindNext() throws BadLocationException {    ", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "+  public void testMultipleCallsToFindNext() throws BadLocationException {     ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(0);", "-    frm.setFindWord(\"evil\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 25);", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 40);", "-  }", "+    frm.setFindWord(\"evil\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 25); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 40); ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b950125e8c5b9ef93c1dd7f56884c01f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "    public void testFindNextAndFailIsOnMatch() throws BadLocationException", "signatureAfterChange": "    public void testFindNextAndFailIsOnMatch() throws BadLocationException", "diff": ["-  public void testFindNextAndFailIsOnMatch() throws BadLocationException {", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 0);", "-    _assertOffsets(frm, 0, 0);", "-    frm.setFindWord(\"evil\");", "-    _testFindNextSucceeds(frm, CONTINUE, 0, 12);", "-    doc.insertString(9, \"-\", null);", "-    assertTrue(\"no longer on find text\", !frm.isOnMatch());", "+  public void testFindNextAndFailIsOnMatch() throws BadLocationException { ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(0);", "+    _assertOffsets(frm, 0, 0); ", "+    frm.setFindWord(\"evil\"); ", "+    _testFindNextSucceeds(frm, CONTINUE, 0, 12); ", "+    doc.insertString(9, \"-\", null); ", "+    assertTrue(\"no longer on find text\", !frm.isOnMatch()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e227ff05fa0218d995162fd57875a61e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "      public void testReplaceAllContinue() throws BadLocationException", "signatureAfterChange": "       public void testReplaceAllContinue() throws BadLocationException", "diff": ["-  public void testReplaceAllContinue() throws BadLocationException{", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 15);", "-    _assertOffsets(frm, 15, 15);", "-    frm.setFindWord(\"evil\");", "-    frm.setReplaceWord(\"monkey\");", "-    frm.replaceAll(CONTINUE);", "-    assertEquals(\"revised text\",", "-                 \"Hear no monkey, see no monkey, speak no monkey.\",", "-                 doc.getText(0, doc.getLength()));    ", "-  }", "+  public void testReplaceAllContinue() throws BadLocationException{ ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(15); ", "+    _assertOffsets(frm, 15, 15); ", "+    frm.setFindWord(\"evil\"); ", "+    frm.setReplaceWord(\"monkey\"); ", "+    frm.replaceAll();", "+    assertEquals(\"revised text\", ", "+                 \"Hear no monkey, see no monkey, speak no monkey.\", ", "+                 doc.getText(0, doc.getLength()));     ", "+  } "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe4ae525b45058738beabd259c67d9f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public void testNotInDocument() throws BadLocationException", "signatureAfterChange": "    public void testNotInDocument() throws BadLocationException", "diff": ["+", "+  public void testNotInDocument() throws BadLocationException { ", "+    doc.insertString(0, EVIL_TEXT, null); ", "+    _initFrm(5);", "+    frm.setFindWord(\"monkey\"); ", "+    _testFindNextFails(frm, CONTINUE, 5, 5); ", "-  public void testNotInDocument() throws BadLocationException {", "-    doc.insertString(0, EVIL_TEXT, null);", "-    FindReplaceMachine frm = new FindReplaceMachine(doc, 5);    ", "-    _assertOffsets(frm, 5, 5);", "-    frm.setFindWord(\"monkey\");", "-    _testFindNextFails(frm, CONTINUE, 5, 5);", "-    ", "-  }"]}], "num": 20566}