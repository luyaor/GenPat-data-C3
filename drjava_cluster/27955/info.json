{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7db2d647c7229b308235bdcc59afea1a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b7e632eb25b32a905ceaf016d2041a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void _updateBasedOnCurrentStateHelper( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateBasedOnCurrentStateHelper     (ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t */", "-\tprivate void _updateBasedOnCurrentStateHelper(", "-\t\tModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\t{", "-\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t}", "-\t\t ", "-\t\t\t// If there's no text after here, nothing to update!", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn;", "-", "-\t\t\tint curState = _getStateAtCurrentHelper(copyCursor);", "-\t\t\t// Free if at the beginning     ", "-\t\t\twhile (!copyCursor.atEnd())", "-\t\t\t\t{", "-\t\t\t\t\tswitch (curState)", "-\t\t\t\t\t\t{", "-\t\t\t\t\t\tcase Brace.FREE:", "-\t\t\t\t\t\t\tcurState = _updateFree(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_QUOTE:", "-\t\t\t\t\t\t\tcurState = _updateInsideQuote(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_BLOCK_COMMENT:", "-\t\t\t\t\t\t\tcurState = _updateInsideBlockComment(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_LINE_COMMENT:", "-\t\t\t\t\t\t\tcurState = _updateInsideLineComment(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tif (copyCursor.atStart())", "-\t\t\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\t\tif (copyCursor.atEnd())", "-\t\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t\tcurState = _getStateAtCurrentHelper(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t}", "+  */", "+  private void _updateBasedOnCurrentStateHelper", "+    (ModelList<ReducedToken>.Iterator copyCursor)", "+  {", "+    if (copyCursor.atStart()) {", "+      copyCursor.next();", "+    }", "+    ", "+    // If there's no text after here, nothing to update!", "+    if (copyCursor.atEnd()) {", "+      return;", "+    }", "+    ", "+    int curState = _getStateAtCurrentHelper(copyCursor);", "+    // Free if at the beginning     ", "+    while (!copyCursor.atEnd()) {", "+      switch (curState) {", "+        case Brace.FREE:", "+          curState = _updateFree(copyCursor);", "+        break;", "+        case Brace.INSIDE_QUOTE:", "+          curState = _updateInsideQuote(copyCursor);", "+        break;", "+        case Brace.INSIDE_BLOCK_COMMENT:", "+          curState = _updateInsideBlockComment(copyCursor);", "+        break;", "+        case Brace.INSIDE_LINE_COMMENT:", "+          curState = _updateInsideLineComment(copyCursor);", "+        break;", "+        default:", "+          if (copyCursor.atStart()) {", "+            copyCursor.next();", "+          }", "+        if (copyCursor.atEnd()) {", "+          return;", "+        }", "+        curState = _getStateAtCurrentHelper(copyCursor);", "+        break;", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56e6c38701bf737a1d8060290b47769", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprivate void _updateBasedOnCurrentStateHelper( \t\tModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private void _updateBasedOnCurrentStateHelper     (ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-\t */", "-\tprivate void _updateBasedOnCurrentStateHelper(", "-\t\tModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atStart())", "-\t\t\t\t{", "-\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t}", "-\t\t ", "-\t\t\t// If there's no text after here, nothing to update!", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn;", "-", "-\t\t\tint curState = _getStateAtCurrentHelper(copyCursor);", "-\t\t\t// Free if at the beginning     ", "-\t\t\twhile (!copyCursor.atEnd())", "-\t\t\t\t{", "-\t\t\t\t\tswitch (curState)", "-\t\t\t\t\t\t{", "-\t\t\t\t\t\tcase Brace.FREE:", "-\t\t\t\t\t\t\tcurState = _updateFree(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_QUOTE:", "-\t\t\t\t\t\t\tcurState = _updateInsideQuote(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_BLOCK_COMMENT:", "-\t\t\t\t\t\t\tcurState = _updateInsideBlockComment(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase Brace.INSIDE_LINE_COMMENT:", "-\t\t\t\t\t\t\tcurState = _updateInsideLineComment(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tif (copyCursor.atStart())", "-\t\t\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\t\tif (copyCursor.atEnd())", "-\t\t\t\t\t\t\t\treturn;", "-\t\t\t\t\t\t\tcurState = _getStateAtCurrentHelper(copyCursor);", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t}", "+  */", "+  private void _updateBasedOnCurrentStateHelper", "+    (ModelList<ReducedToken>.Iterator copyCursor)", "+  {", "+    if (copyCursor.atStart()) {", "+      copyCursor.next();", "+    }", "+    ", "+    // If there's no text after here, nothing to update!", "+    if (copyCursor.atEnd()) {", "+      return;", "+    }", "+    ", "+    int curState = _getStateAtCurrentHelper(copyCursor);", "+    // Free if at the beginning     ", "+    while (!copyCursor.atEnd()) {", "+      switch (curState) {", "+        case Brace.FREE:", "+          curState = _updateFree(copyCursor);", "+        break;", "+        case Brace.INSIDE_QUOTE:", "+          curState = _updateInsideQuote(copyCursor);", "+        break;", "+        case Brace.INSIDE_BLOCK_COMMENT:", "+          curState = _updateInsideBlockComment(copyCursor);", "+        break;", "+        case Brace.INSIDE_LINE_COMMENT:", "+          curState = _updateInsideLineComment(copyCursor);", "+        break;", "+        default:", "+          if (copyCursor.atStart()) {", "+            copyCursor.next();", "+          }", "+        if (copyCursor.atEnd()) {", "+          return;", "+        }", "+        curState = _getStateAtCurrentHelper(copyCursor);", "+        break;", "+      }", "+    }", "+  }"]}], "num": 27955}