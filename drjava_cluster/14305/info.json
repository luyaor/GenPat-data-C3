{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8cdb85360f7c0b44a492b3a689ee6795", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58b603b4cbdc8486b6f8492a96bee8e6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man)", "signatureAfterChange": "   private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man)", "diff": ["+  // Only used in DocumentCacheTest; must be synchronous for test to succeed.", "-    Utilities.invokeAndWait(new Runnable() {", "-      public void run() { for (RegistrationListener list : _regListeners) { list.registered(odd, man); } }", "-    });", "+    synchronized(_regListeners) {", "+      if (_regListeners.isEmpty()) return; ", "+      Utilities.invokeAndWait(new Runnable() {", "+        public void run() { for (RegistrationListener list : _regListeners) { list.registered(odd, man); } }", "+      });", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5ba17a3f997cfe1ead8539d31327fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "46cea5a7a0c855a8fea823abed0517765efa40d7", "commitAfterChange": "db91dcc7aa4674cfe5508cd82ff717a758a32bca", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void notifyRegistrationListeners(OpenDefinitionsDocument odd, DocManager man)", "signatureAfterChange": "   private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man)", "diff": ["-  private void notifyRegistrationListeners(OpenDefinitionsDocument odd, DocManager man) {", "-    for (RegistrationListener list : _regListeners) { list.registered(odd,man); }", "+  private void notifyRegistrationListeners(final OpenDefinitionsDocument odd, final DocManager man) {", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() { for (RegistrationListener list : _regListeners) { list.registered(odd, man); } }", "+    });"]}], "num": 14305}