{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "17a332278e914b51013606996566bc53", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c94ee29f786163933a93105146267b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "0cceb29d64fbac1b4be36f5a87cc236bf2407364", "commitAfterChange": "516755fb1bc3cdf62239f31eeb5aaa4ca6ac65ed", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["-    if (CodeStatus.DEVELOPMENT) {", "-      if (k == NULL_KEYSTROKE)", "-        return \"<none>\";", "-      String s = KeyEvent.getKeyModifiersText(k.getModifiers()).toLowerCase();", "-      s = s.replace('+', ' ');", "-      if (!s.equals(\"\"))", "-        s += \" \";", "-      // If the key code is undefined, this is a \"typed\" unicode character", "-      if (k.getKeyCode() == KeyEvent.VK_UNDEFINED) {", "-        s += \"typed \";", "-        s += k.getKeyChar();", "-      }", "-      // else this corresponds to a static KeyEvent constant", "-      else {", "-        // defaults to pressed", "-        if (k.isOnKeyRelease())", "-          s += \"released \";", "-        String key = (String) keys.get(new Integer(k.getKeyCode()));", "-        if (key == null)", "-          throw new IllegalArgumentException(\"Invalid keystroke\");", "-        if (key.equals(\"CONTROL\") || key.equals(\"ALT\") || key.equals(\"META\") ||", "-            key.equals(\"SHIFT\") || key.equals(\"ALT_GRAPH\"))", "-          return s;", "-        s += key;", "-        return s;", "-      }", "-      return s; ", "+    if (k == NULL_KEYSTROKE)", "+      return \"<none>\";", "+    String s = KeyEvent.getKeyModifiersText(k.getModifiers()).toLowerCase();", "+    s = s.replace('+', ' ');", "+    if (!s.equals(\"\"))", "+      s += \" \";", "+    // If the key code is undefined, this is a \"typed\" unicode character", "+    if (k.getKeyCode() == KeyEvent.VK_UNDEFINED) {", "+      s += \"typed \";", "+      s += k.getKeyChar();", "-    else return \"\";", "+    // else this corresponds to a static KeyEvent constant", "+    else {", "+      // defaults to pressed", "+      if (k.isOnKeyRelease())", "+        s += \"released \";", "+      String key = (String) keys.get(new Integer(k.getKeyCode()));", "+      if (key == null)", "+        throw new IllegalArgumentException(\"Invalid keystroke\");", "+      if (key.equals(\"CONTROL\") || key.equals(\"ALT\") || key.equals(\"META\") ||", "+          key.equals(\"SHIFT\") || key.equals(\"ALT_GRAPH\"))", "+        return s;", "+      s += key;", "+      return s;", "+    }", "+    return s; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485e0e1316b209e8bd91c72febf136e5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/config/KeyStrokeOption.java", "commitBeforeChange": "1fded97fdeda420f1a00832b34fbad92ca8d6567", "commitAfterChange": "91eaa89d34afca6f9535645fe8bc2e7298ec779c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public String format(KeyStroke k)", "signatureAfterChange": "   public String format(KeyStroke k)", "diff": ["-    if (k == NULL_KEYSTROKE)", "+    if (k == NULL_KEYSTROKE) {", "-    String s = KeyEvent.getKeyModifiersText(k.getModifiers()).toLowerCase();", "-    s = s.replace('+', ' ');", "-    if (!s.equals(\"\"))", "-      s += \" \";", "+    }", "+", "+    //String s = KeyEvent.getKeyModifiersText(k.getModifiers()).toLowerCase();", "+    //s = s.replace('+', ' ');", "+    //if (!s.equals(\"\"))", "+    //  s += \" \";", "+", "+    // Generate modifiers text on our own, since getKeyStroke can't parse", "+    //  locale-specific modifiers.", "+    int modifiers = k.getModifiers();", "+    boolean isMac = _isMacPlatform();", "+    StringBuffer buf = new StringBuffer();", "+    if ((modifiers & Event.META_MASK) > 0) {", "+      String meta = (!isMac) ? \"meta \" : \"command \";", "+      buf.append(meta);", "+    }", "+    if ((modifiers & Event.CTRL_MASK) > 0) {", "+      buf.append(\"ctrl \");", "+    }", "+    if ((modifiers & Event.ALT_MASK) > 0) {", "+      String alt = (!isMac) ? \"alt \" : \"option \";", "+      buf.append(alt);", "+    }", "+    if ((modifiers & Event.SHIFT_MASK) > 0) {", "+      buf.append(\"shift \");", "+    }", "+", "-      s += \"typed \";", "-      s += k.getKeyChar();", "+      buf.append(\"typed \");", "+      buf.append(k.getKeyChar());", "-      if (k.isOnKeyRelease())", "-        s += \"released \";", "+      if (k.isOnKeyRelease()) {", "+        buf.append(\"released \");", "+      }", "-      if (key == null)", "+      if (key == null) {", "+      }", "-          key.equals(\"SHIFT\") || key.equals(\"ALT_GRAPH\"))", "-        return s;", "-      s += key;", "-      return s;", "+          key.equals(\"SHIFT\") || key.equals(\"ALT_GRAPH\")) {", "+        return buf.toString();", "+      }", "+      else {", "+        buf.append(key);", "+        return buf.toString();", "+      }", "-    return s; ", "+    return buf.toString();", "+  }"]}], "num": 20596}