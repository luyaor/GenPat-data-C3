{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "71b0dec33aa10f9f1b668d1d27b7d17c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f04ec46a4bde398dd1cf504ffc3b8cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void insertSpecial(String special)", "signatureAfterChange": "   private void insertSpecial(String special)", "diff": ["-    if (_cursor.atStart()) {", "-      _cursor.next();", "-    }", "+    if (_cursor.atStart()) _cursor.next();", "+    ", "-    if (_cursor.atEnd()) {", "-      _checkPreviousInsertSpecial(special);", "-    }", "+    if (_cursor.atEnd()) _checkPreviousInsertSpecial(special);", "+    ", "-    else if ((_cursor.getBlockOffset() > 0) && _cursor.current().isMultipleCharBrace()) {", "+    else if (_cursor.getBlockOffset() > 0 && _cursor.current().isMultipleCharBrace()) {", "-    else if ((_cursor.getBlockOffset() > 0) && (_cursor.current().isGap())) {", "+    else if (_cursor.getBlockOffset() > 0 && _cursor.current().isGap()) {", "-    else {", "-      _checkPreviousInsertSpecial(special);", "-    }", "+    else _checkPreviousInsertSpecial(special);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff34c1da1e2a8f47324027b3698ce5fa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/AbstractReducedModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void _insertGap( int length )", "signatureAfterChange": "   public void _insertGap( int length )", "diff": ["-      else {", "-        _insertNewGap(length);//inserts gap and goes to next item", "-      }", "+      else _insertNewGap(length);//inserts gap and goes to next item", "-      else {", "-        _insertNewGap(length); //inserts gap and moves to next item", "-      }", "+      else _insertNewGap(length); //inserts gap and moves to next item", "-    else if ((_cursor.getBlockOffset() > 0) && _cursor.current().isMultipleCharBrace()) {", "+    else if ((_cursor.getBlockOffset() > 0) && _cursor.current().isMultipleCharBrace())", "-    }", "-    else if (!_cursor.atFirstItem() && _cursor.prevItem().isGap()) {", "+    else if (!_cursor.atFirstItem() && _cursor.prevItem().isGap())", "-    }", "-    else { //between two braces", "+    else  //between two braces", "-    }"]}], "num": 4177}