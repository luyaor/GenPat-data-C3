{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3ea6db8c7f967fb92d3cb8ddda6d835d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "056f80535e3a052adf58c6c4e28222af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void interpret(final String s)", "signatureAfterChange": "   public boolean interpret(final String s)", "diff": ["-  public void interpret(final String s) {", "-    // silently fail if disabled. see killInterpreter docs for details.", "-    if (! _restart) return;", "-    ", "-    InterpreterJVMRemoteI slave = ensureInterpreterConnected();", "-    ", "-    // Spawn thread on InterpreterJVM side", "+  public boolean interpret(final String s) {", "+    InterpreterJVMRemoteI remote = _accessInterpreterJVM();", "+    if (remote == null) { return false; }", "-      _interactionsModel.slaveJVMUsed();", "-      InterpretResult result = slave.interpret(s);", "-      debug.logEnd();", "-      debug.logValue(\"result\", result);", "-      result.apply(getResultHandler());", "+      InterpretResult result = remote.interpret(s);", "+      result.apply(resultHandler());", "+      debug.logEnd(\"result\", result);", "+      return true;", "-    catch (UnmarshalException ume) {", "-      debug.logEnd();", "-", "-      if (Utilities.TEST_MODE) { ", "-//        Utilities.show(\"Unmarshalling exception found!\");", "-//        System.err.println(\"Exception is: \" + ume);", "-//        ume.printStackTrace();", "-        throw new UnexpectedException(ume);", "-      }", "-        ", "-      Throwable cause = ume.getCause(); ", "-      if (cause != null && cause instanceof EOFException) {", "-        // Interpreter JVM has disappeared (perhaps reset); just ignore error and wait", "-        // for reset.", "-      }", "-      else { _threwException(ume); }", "-    }", "-    catch (RemoteException re) { debug.logEnd(); _threwException(re); }", "+    catch (RemoteException e) { debug.logEnd(); _handleRemoteException(e); return false; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44286b6f8128a85d171532f6fe8a922d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void interpret(final String s)", "signatureAfterChange": "   public void interpret(final String s)", "diff": ["-    //  (will receive result in the interpretResult(...) method)", "-      _log.log(this + \".interpret(\" + s + \")\");", "+      debug.logStart(\"Interpreting \" + s);", "-      slave.interpret(s);", "+      InterpretResult result = slave.interpret(s);", "+      debug.logEnd();", "+      debug.logValue(\"result\", result);", "+      result.apply(getResultHandler());", "-    catch (java.rmi.UnmarshalException ume) {", "-      // Could not receive result from interpret; system probably exited.", "-      // We will silently fail and let the interpreter restart.", "-      _log.log(this + \".interpret threw UnmarshalException, so interpreter is dead:\\n\" + ume);", "+    catch (UnmarshalException ume) {", "+      debug.logEnd();", "+      Throwable cause = ume.getCause();", "+      if (cause != null && cause instanceof EOFException) {", "+        // Interpreter JVM has disappeared (perhaps reset); just ignore error and wait", "+        // for reset.", "+      }", "+      else { _threwException(ume); }", "-    catch (RemoteException re) { _threwException(re); }", "+    catch (RemoteException re) { debug.logEnd(); _threwException(re); }"]}], "num": 15798}