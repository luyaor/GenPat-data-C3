{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2523b63c8a395c61774a9495c4e53591", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48116866bb67bd5454040f08cf0e11b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "25d973a9f45bdba84ad4514eba518ee94f041daf", "commitAfterChange": "fa5a46f3cc65ec85b9fa37599dc6542e75cee25e", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 139, "signatureBeforeChange": "   public void dispose()", "signatureAfterChange": "   public void dispose()", "diff": ["-    // centgraf: I justify casting here because it is implementation-specific", "-    //           and doc'ed as such.", "-    ((DefaultSingleDisplayModel) _model).dispose();", "-    super.dispose();", "+    _model.dispose();", "+    Utilities.invokeAndWait(new Runnable() { public void run() { disposeHelp(); }});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a0e02acdbb79a8776f8adebc92927f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "diff": ["-  /** Interprets some statements, saves the history, clears the history, then loads  the history. */", "+  /** Interprets some statements, saves the history, clears the history, then loads the history. */", "-    InteractionListener listener = new InteractionListener();", "+    final InteractionListener listener = new InteractionListener();", "-    _model.saveHistory(fs);", "+    safeSaveHistory(fs);", "-    assertEquals(\"contents of saved file\",", "-                 History.HISTORY_FORMAT_VERSION_2 +", "-                 s1 + delim + s2 + delim + s3 + delim,", "+    assertEquals(\"contents of saved file\", History.HISTORY_FORMAT_VERSION_2 + s1 + delim + s2 + delim + s3 + delim,", "-    _model.resetInteractions(_model.getWorkingDirectory());", "-    _model.resetConsole();", "+    Utilities.invokeLater(new Runnable() { ", "+      public void run() { ", "+        _model.resetInteractions(_model.getWorkingDirectory());", "+        _model.resetConsole();", "+      }", "+    });", "-    _model.loadHistory(fs);", "+    safeLoadHistory(fs);", "-//    Utilities.clearEventQueue();", "-    assertEquals(\"Output of loaded history is not correct\",", "-                 \"x = 5\",", "-                 con.getDocText(0, con.getLength()).trim());", "+    assertEquals(\"Output of loaded history is not correct\", \"x = 5\", con.getDocText(0, con.getLength()).trim());", "-    ", "+"]}], "num": 26054}