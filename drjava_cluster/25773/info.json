{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4bd26fba0115600cfb0349844f9bf45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a602ad5f1c8b112d82ee2a5accc8006", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "dc96b8e17de1b9fbcfb0683311d7e482b6fcfcf3", "commitAfterChange": "270c6e5f741c371e9536c93af7f5525dbf67eeee", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      private void checkBodies(Iterable<? extends Node> members)", "signatureAfterChange": "      private void checkBodies(Iterable<? extends Node> members)", "diff": ["-    TypeContext bodyContext = new ClassContext(sigContext, _c); ", "-    MemberBodyVisitor bod = new MemberBodyVisitor(bodyContext);", "-    for (Node n : members) {", "-      debug.logStart();", "-      try { n.acceptVisitor(bod); }", "-      finally { debug.logEnd(); }", "-    }", "+    TypeContext bodyContext = new ClassContext(sigContext, _c);", "+    visitMembers(members, new MemberBodyVisitor(bodyContext));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5a932729f6515b2ae9980d74bbccc4", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/ClassChecker.java", "commitBeforeChange": "dc96b8e17de1b9fbcfb0683311d7e482b6fcfcf3", "commitAfterChange": "270c6e5f741c371e9536c93af7f5525dbf67eeee", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "    private void checkInterfaceMemberSignatures(Iterable<? extends Node> members, TypeContext sigContext)", "signatureAfterChange": "    private void checkInterfaceMemberSignatures(Iterable<? extends Node> members, TypeContext sigContext)", "diff": ["-    TypeContext bodyContext = new ClassContext(sigContext, _c); ", "-    Visitor<Void> v = new InterfaceMemberSignatureVisitor(bodyContext);", "-    for (Node n : members) {", "-      debug.logStart();", "-      try { n.acceptVisitor(v); }", "-      finally { debug.logEnd(); }", "-    }", "+    TypeContext bodyContext = new ClassContext(sigContext, _c);", "+    visitMembers(members, new InterfaceMemberSignatureVisitor(bodyContext));"]}], "num": 25773}