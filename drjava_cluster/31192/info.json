{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d09a22cb70bdc6dbf7d1f414852ba60b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0758bde8bdb26d7b56f7d7829f258d12", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 263, "signatureBeforeChange": "   public static <T1, T2, T3, T4>      Predicate4<T1, T2, T3, T4> or4(final Iterable<? extends Predicate4<? super T1, ? super T2,                                                                         ? super T3, ? super T4>> preds)", "signatureAfterChange": "   public static <T1, T2, T3, T4>      Predicate4<T1, T2, T3, T4> or(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p1,                                   Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p2)", "diff": ["-  /** @return  The disjunction ({@code ||}) of the given predicates */", "-  public static <T1, T2, T3, T4> ", "-    Predicate4<T1, T2, T3, T4> or4(final Iterable<? extends Predicate4<? super T1, ? super T2, ", "-                                                                       ? super T3, ? super T4>> preds) {", "-    return new Predicate4<T1, T2, T3, T4>() {", "-      public Boolean value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) {", "-        for (Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p : preds) { ", "-          if (p.value(arg1, arg2, arg3, arg4)) { return true; }", "-        }", "-        return false;", "-      }", "-    };", "-  }", "+  /** Produce the disjunction ({@code ||}) of {@code p1} and {@code p2}. */", "+  public static <T1, T2, T3, T4> ", "+    Predicate4<T1, T2, T3, T4> or(Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p1,", "+                                  Predicate4<? super T1, ? super T2, ? super T3, ? super T4> p2) {", "+    return new OrPredicate4<T1, T2, T3, T4>(IterUtil.<Predicate4<? super T1, ? super T2, ? super T3, ? super T4>>", "+                                            make(p1, p2));", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0dca180c4bd1b4af7e98ae91a62c5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 258, "signatureBeforeChange": "   public static <T1, T2, T3>      Predicate3<T1, T2, T3> or3(final Iterable<? extends Predicate3<? super T1, ? super T2,                                                                     ? super T3>> preds)", "signatureAfterChange": "   public static <T1, T2, T3> Predicate3<T1, T2, T3> or(Predicate3<? super T1, ? super T2, ? super T3> p1,                                                         Predicate3<? super T1, ? super T2, ? super T3> p2)", "diff": ["-  /** @return  The disjunction ({@code ||}) of the given predicates */", "-    Predicate3<T1, T2, T3> or3(final Iterable<? extends Predicate3<? super T1, ? super T2, ", "-                                                                   ? super T3>> preds) {", "-    return new Predicate3<T1, T2, T3>() {", "-      public Boolean value(T1 arg1, T2 arg2, T3 arg3) {", "-        for (Predicate3<? super T1, ? super T2, ? super T3> p : preds) { ", "-          if (p.value(arg1, arg2, arg3)) { return true; }", "-        }", "-        return false;", "-    };", "+  /** Produce the disjunction ({@code ||}) of {@code p1} and {@code p2}. */", "+  public static <T1, T2, T3> Predicate3<T1, T2, T3> or(Predicate3<? super T1, ? super T2, ? super T3> p1, ", "+                                                       Predicate3<? super T1, ? super T2, ? super T3> p2) {", "+    return new OrPredicate3<T1, T2, T3>(IterUtil.<Predicate3<? super T1, ? super T2, ? super T3>>", "+                                        make(p1, p2));", "+  }"]}], "num": 31192}