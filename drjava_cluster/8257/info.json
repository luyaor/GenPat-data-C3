{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3e134d28a07e59b0bf0ffd09c15ecca", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ea9b222e7a458487fcf62f7647964d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "add4ca7a51e78cf47efc30384ae6f244b7e78f21", "commitAfterChange": "bd6440967d1d2ae8c864e064182d820c7f6849ce", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 80, "signatureBeforeChange": "   public void resetInteractionsClassPath()", "signatureAfterChange": "   public void resetInteractionsClassPath()", "diff": ["-    ClassPathVector projectExtras = getExtraClassPath();", "+    Iterable<File> projectExtras = getExtraClassPath();", "-    if (projectExtras != null)  for (URL cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }", "+    if (projectExtras != null)  for (File cpE : projectExtras) { _interactionsModel.addProjectClassPath(cpE); }", "-      for (File f : cp) {", "-        try { _interactionsModel.addExtraClassPath(FileOps.toURL(f)); }", "-        catch(MalformedURLException murle) {", "-          System.out.println(\"File \" + f + \" in your extra classpath could not be parsed to a URL; \" +", "-                             \"it may contain un-URL-encodable characters.\");", "-        }", "-      }", "+      for (File f : cp) { _interactionsModel.addExtraClassPath(f); }", "-      try { _interactionsModel.addProjectFilesClassPath(FileOps.toURL(odd.getSourceRoot())); }", "-      catch(MalformedURLException murle) { /* fail silently */ }", "+      try { _interactionsModel.addProjectFilesClassPath(odd.getSourceRoot()); }", "-        if (sourceRoot != null) _interactionsModel.addExternalFilesClassPath(FileOps.toURL(sourceRoot)); ", "+        if (sourceRoot != null) _interactionsModel.addExternalFilesClassPath(sourceRoot); ", "-      catch(MalformedURLException murle) { /* ignore it */ }", "-    try { _interactionsModel.addProjectFilesClassPath(FileOps.toURL(getProjectRoot())); }", "-    catch(MalformedURLException murle) { /* fail silently */ } ", "+    _interactionsModel.addProjectFilesClassPath(getProjectRoot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66dac2dcc5c2b7cbf37e6c0049204d77", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": "   public void resetInteractionsClasspath()", "signatureAfterChange": "   public void resetInteractionsClasspath()", "diff": ["-    //  Ideally, we'd like to put the open docs before the config option,", "-    //  but this is inconsistent with how the classpath was defined", "-    //  as it was built up.  (The config option is inserted on startup,", "-    //  and docs are added as they are opened.  It shouldn't switch after", "-    //  a reset.)", "-", "-    // switch the order of the two code segments", "-    // also put build directory", "-    ", "-        _interactionsModel.addToClassPath(en.nextElement().getAbsolutePath());", "+        // this forwards directly to InterpreterJVM.addClassPath(String)", "+        try{", "+          _interactionsModel.addExtraClassPath(en.nextElement().toURL());", "+        }catch(MalformedURLException murle){", "+          // fail silently", "+        }", "-    File[] sourceRoots = getSourceRootSet();", "-    for (int i = 0; i < sourceRoots.length; i++) {", "-      _interactionsModel.addToClassPath(sourceRoots[i].getAbsolutePath());", "+    List<OpenDefinitionsDocument> odds = getProjectDocuments();", "+    for (OpenDefinitionsDocument odd: odds) {", "+      // this forwards directly to InterpreterJVM.addClassPath(String)", "+      try{", "+        _interactionsModel.addProjectFilesClassPath(odd.getSourceRoot().toURL());", "+      }catch(MalformedURLException murle){", "+        // fail silently", "+      }catch(InvalidPackageException e){", "+        // oh well, who cares", "+      }", "-  }", "+", "+    odds = getNonProjectDocuments();", "+    for (OpenDefinitionsDocument odd: odds) {", "+      // this forwards directly to InterpreterJVM.addClassPath(String)", "+      try{", "+        _interactionsModel.addExternalFilesClassPath(odd.getSourceRoot().toURL());", "+      }catch(MalformedURLException murle){", "+        // fail silently", "+      }catch(InvalidPackageException e){", "+        // oh well, who cares", "+      }", "+    }", "+}"]}], "num": 8257}