{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8b0a9ed6f5f8c67eb8b6e2e812e6839", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261645b2aab164e45e05bb335ebe1182", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectoryChooser.java", "commitBeforeChange": "55ffd5d461fa009444744f2527631191c6f9decc", "commitAfterChange": "0fed03351fa05790a48229380b62c5e4589b0332", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "          public CustomCellEditor(final FileTextField textField)", "signatureAfterChange": "          public CustomCellEditor(final FileTextField textField)", "diff": ["+      ", "+      // remove the default editor delegate in order to replace it", "+      textField.removeActionListener(delegate); ", "+      ", "+      // redefine the delegate (protected field)", "+                ", "-          ", "-            if (fd.isNew())", "-              _currentFile = null;", "-            else ", "-              _currentFile = fd.getFile();", "-            ", "-            textField.setFile(fd);", "+            _originalDisplay = fd;", "+            textField.setFileDisplay(fd);", "-            _currentFile = null;", "+            _originalDisplay = null;", "-          File f = textField.getFile();", "-          if (f == null)", "+          FileDisplay fd = textField.getFileDisplay();", "+          if (fd == null)", "-            return _fdManager.makeFileDisplay(f);", "+            return fd;", "+        ", "+        public String toString() { return \"CustomCellEditor.[anonymous].EditorDelegate\"; }", "+      ", "+      // add the new delegate as the action listener"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddded838ae8225db2affd59616bafc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "a757cd8e27c11c0cc6bf4ab20e64c2d65c2b4076", "commitAfterChange": "0fb45818396fd0f22d5caa4d32dda7936589092c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "       public void printBreakpoints()", "signatureAfterChange": "       public void printBreakpoints()", "diff": ["-    writeToLog(\"current breakpoints:  \");", "-    if (!i.hasNext())", "-\twriteToLog(\"none\\n\");", "-    else", "-\twriteToLog(\"\\n\\n\");", "+    if (!i.hasNext()) {", "+      writeToLog(\"No Breakpoints Set.\\n\");", "+    }", "+    else {", "+      writeToLog(\"Current Breakpoints:\\n\");", "+    }", "+    ", "-\tlbp = (LineBreakpoint)o;  ", "-\twriteToLog(\" \" + lbp.getClassName() +", "-\t\t   \":\" + lbp.getLineNumber() +", "-\t\t   \"\\n\");", "+        lbp = (LineBreakpoint)o;  ", "+        writeToLog(\" \" + lbp.getClassName() +", "+                   \":\" + lbp.getLineNumber() +", "+                   \"\\n\");", "-\tmbp = (MethodBreakpoint)o;", "-\twriteToLog(\" \" + mbp.getClassName() +", "-\t\t   \":\" + mbp.getMethodName() +", "-\t\t   \":\" + mbp.getLineNumber() +", "-\t\t   \"\\n\");\t\t\t \t", "+        mbp = (MethodBreakpoint)o;", "+        writeToLog(\" \" + mbp.getClassName() +", "+                   \":\" + mbp.getMethodName() +", "+                   \":\" + mbp.getLineNumber() +", "+                   \"\\n\");     ", "-    writeToLog(\"\\n\");"]}], "num": 24963}