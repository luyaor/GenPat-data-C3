{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c95c7fda660b5e4d6cad357f922aabe", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a4325c96d9d801e9f0cfe939440c0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "   public Void visit(AnonymousAllocation node)", "signatureAfterChange": "   public Void visit(AnonymousAllocation node)", "diff": ["-      Iterator it = node.getArguments().iterator();", "-      while (it.hasNext()) {", "-        ((Expression)it.next()).acceptVisitor(this);", "+      for (Node n : node.getArguments()) {", "+        n.acceptVisitor(this);", "-    Iterator it = node.getMembers().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getMembers()) {", "+      n.acceptVisitor(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f06fb80c87aebc766328c92c8e8dadd0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/DisplayVisitor.java", "commitBeforeChange": "5cb9931cd4d17d4bcf0e028e2763a314647f8344", "commitAfterChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "   public Void visit(AnonymousInnerAllocation node)", "signatureAfterChange": "   public Void visit(AnonymousInnerAllocation node)", "diff": ["-      Iterator it = node.getArguments().iterator();", "-      while (it.hasNext()) {", "-        ((Expression)it.next()).acceptVisitor(this);", "+      for (Node n : node.getArguments()) {", "+        n.acceptVisitor(this);", "-    Iterator it = node.getMembers().iterator();", "-    while (it.hasNext()) {", "-      ((Node)it.next()).acceptVisitor(this);", "+    for (Node n : node.getMembers()) {", "+      n.acceptVisitor(this);"]}], "num": 12613}