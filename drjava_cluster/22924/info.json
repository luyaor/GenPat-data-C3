{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43cd831a7f37f8dd770933056f23c6d1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f766d332493245b90a3674f35b2f857", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/reflect/PathClassLoaderTest.java", "commitBeforeChange": "c600519b6859da4af01c52410f91013b1bbd745a", "commitAfterChange": "7f9f9a0527fe13a3dbec8283aa5b08139cfc594b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public void testNestedLoaders() throws Exception", "signatureAfterChange": "      public void testNestedLoaders() throws Exception", "diff": ["-    assertLoadsClassAsLoader(l, \"IntBox\");", "-    assertDoesNotLoadClass(l, \"A\");", "-    assertDoesNotLoadClass(l, \"B\");", "-    assertDoesNotLoadClass(l, \"C\");", "+    assertLoadsClassAsLoader(l, \"pkg.IntBox\");", "+    assertDoesNotLoadClass(l, \"pkg.A\");", "+    assertDoesNotLoadClass(l, \"bpkg.B\");", "+    assertDoesNotLoadClass(l, \"pkg.C\");", "-    assertLoadsSameClass(l, lA, \"IntBox\");", "-    assertLoadsClassAsLoader(lA, \"A\");", "-    assertDoesNotLoadClass(lA, \"B\");", "-    assertDoesNotLoadClass(lA, \"C\");", "+    assertLoadsSameClass(l, lA, \"pkg.IntBox\");", "+    assertLoadsClassAsLoader(lA, \"pkg.A\");", "+    assertDoesNotLoadClass(lA, \"bpkg.B\");", "+    assertDoesNotLoadClass(lA, \"pkg.C\");", "-    assertLoadsSameClass(l, lB, \"IntBox\");", "-    assertLoadsSameClass(lA, lB, \"A\");", "-    assertLoadsClassAsLoader(lB, \"B\");", "-    assertDoesNotLoadClass(lB, \"C\");", "+    assertLoadsSameClass(l, lB, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lB, \"pkg.A\");", "+    assertLoadsClassAsLoader(lB, \"bpkg.B\");", "+    assertDoesNotLoadClass(lB, \"pkg.C\");", "-    assertLoadsSameClass(l, lC, \"IntBox\");", "-    assertLoadsSameClass(lA, lC, \"A\");", "-    assertLoadsSameClass(lB, lC, \"B\");", "-    assertLoadsClassAsLoader(lC, \"C\");", "+    assertLoadsSameClass(l, lC, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lC, \"pkg.A\");", "+    assertLoadsSameClass(lB, lC, \"bpkg.B\");", "+    assertLoadsClassAsLoader(lC, \"pkg.C\");", "-    assertLoadsSameClass(l, lD, \"IntBox\");", "-    assertLoadsSameClass(lA, lD, \"A\");", "-    assertLoadsSameClass(lB, lD, \"B\");", "-    assertLoadsSameClass(lC, lD, \"C\");", "+    assertLoadsSameClass(l, lD, \"pkg.IntBox\");", "+    assertLoadsSameClass(lA, lD, \"pkg.A\");", "+    assertLoadsSameClass(lB, lD, \"bpkg.B\");", "+    assertLoadsSameClass(lC, lD, \"pkg.C\");", "-    assertCanGet(lD, \"A\", 1);", "+    assertCanGet(lD, \"pkg.A\", 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6d8ac2b412f40ca70212e44d545db6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "92c70c9dcd73c9ac6d6524ac0c7a19c34e304d93", "commitAfterChange": "e878d558a99af8934972e8a59e74d6047540f2bd", "methodNumberBeforeChange": 746, "methodNumberAfterChange": 746, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-    kbm.put(KEY_BACKWARD, actionMap.get(DefaultEditorKit.backwardAction), null, \"Backward\");", "-    kbm.put(KEY_BACKWARD_SELECT, actionMap.get(DefaultEditorKit.selectionBackwardAction), null, \"Backward (Select)\");", "+    kbm.put(KEY_BACKWARD, actionMap.get(DefaultEditorKit.backwardAction), null, \"Cursor Backward\");", "+    kbm.put(KEY_BACKWARD_SELECT, actionMap.get(DefaultEditorKit.selectionBackwardAction), null, \"Cursor Backward (Select)\");", "-    kbm.put(KEY_BEGIN_DOCUMENT, actionMap.get(DefaultEditorKit.beginAction), null, \"Begin Document\");", "-    kbm.put(KEY_BEGIN_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionBeginAction), null, \"Begin Document (Select)\");", "+    kbm.put(KEY_BEGIN_DOCUMENT, actionMap.get(DefaultEditorKit.beginAction), null, \"Cursor Begin Document\");", "+    kbm.put(KEY_BEGIN_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionBeginAction), null, \"Cursor Begin Document (Select)\");", "-    kbm.put(KEY_BEGIN_LINE, _beginLineAction, null, \"Begin Line\");", "-    kbm.put(KEY_BEGIN_LINE_SELECT, _selectionBeginLineAction, null, \"Begin Line (Select)\");", "+    kbm.put(KEY_BEGIN_LINE, _beginLineAction, null, \"Cursor Begin Line\");", "+    kbm.put(KEY_BEGIN_LINE_SELECT, _selectionBeginLineAction, null, \"Cursor Begin Line (Select)\");", "-    kbm.put(KEY_PREVIOUS_WORD, actionMap.get(_currentDefDoc.getEditor().previousWordAction), null, \"Previous Word\");", "-    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionPreviousWordAction), null, \"Previous Word (Select)\");", "+    kbm.put(KEY_PREVIOUS_WORD, actionMap.get(_currentDefDoc.getEditor().previousWordAction), null, \"Cursor Previous Word\");", "+    kbm.put(KEY_PREVIOUS_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionPreviousWordAction), null, \"Cursor Previous Word (Select)\");", "-    kbm.put(KEY_DOWN, actionMap.get(DefaultEditorKit.downAction), null, \"Down\");", "-    kbm.put(KEY_DOWN_SELECT, actionMap.get(DefaultEditorKit.selectionDownAction), null, \"Down (Select)\");", "+    kbm.put(KEY_DOWN, actionMap.get(DefaultEditorKit.downAction), null, \"Cursor Down\");", "+    kbm.put(KEY_DOWN_SELECT, actionMap.get(DefaultEditorKit.selectionDownAction), null, \"Cursor Down (Select)\");", "-    kbm.put(KEY_END_DOCUMENT, actionMap.get(DefaultEditorKit.endAction), null, \"End Document\");", "-    kbm.put(KEY_END_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionEndAction), null, \"End Document (Select)\");", "+    kbm.put(KEY_END_DOCUMENT, actionMap.get(DefaultEditorKit.endAction), null, \"Cursor End Document\");", "+    kbm.put(KEY_END_DOCUMENT_SELECT, actionMap.get(DefaultEditorKit.selectionEndAction), null, \"Cursor End Document (Select)\");", "-    kbm.put(KEY_END_LINE, actionMap.get(DefaultEditorKit.endLineAction), null, \"End Line\"); // ?", "-    kbm.put(KEY_END_LINE_SELECT, actionMap.get(DefaultEditorKit.selectionEndLineAction), null, \"End Line (Select)\");", "+    kbm.put(KEY_END_LINE, actionMap.get(DefaultEditorKit.endLineAction), null, \"Cursor End Line\");", "+    kbm.put(KEY_END_LINE_SELECT, actionMap.get(DefaultEditorKit.selectionEndLineAction), null, \"Cursor End Line (Select)\");", "-    kbm.put(KEY_NEXT_WORD, actionMap.get(_currentDefDoc.getEditor().nextWordAction), null, \"Next Word\");", "-    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionNextWordAction), null, \"Next Word (Select)\");", "+    kbm.put(KEY_NEXT_WORD, actionMap.get(_currentDefDoc.getEditor().nextWordAction), null, \"Cursor Next Word\");", "+    kbm.put(KEY_NEXT_WORD_SELECT, actionMap.get(_currentDefDoc.getEditor().selectionNextWordAction), null, \"Cursor Next Word (Select)\");", "-    kbm.put(KEY_FORWARD, actionMap.get(DefaultEditorKit.forwardAction), null, \"Forward\");", "-    kbm.put(KEY_FORWARD_SELECT, actionMap.get(DefaultEditorKit.selectionForwardAction), null, \"Forward (Select)\");", "+    kbm.put(KEY_FORWARD, actionMap.get(DefaultEditorKit.forwardAction), null, \"Cursor Forward\");", "+    kbm.put(KEY_FORWARD_SELECT, actionMap.get(DefaultEditorKit.selectionForwardAction), null, \"Cursor Forward (Select)\");", "-    kbm.put(KEY_UP, actionMap.get(DefaultEditorKit.upAction), null, \"Up\");", "-    kbm.put(KEY_UP_SELECT, actionMap.get(DefaultEditorKit.selectionUpAction), null, \"Select Up\");", "+    kbm.put(KEY_UP, actionMap.get(DefaultEditorKit.upAction), null, \"Cursor Up\");", "+    kbm.put(KEY_UP_SELECT, actionMap.get(DefaultEditorKit.selectionUpAction), null, \"Cursor Up (Select)\");", "-    kbm.put(KEY_PAGE_DOWN, actionMap.get(DefaultEditorKit.pageDownAction), null, \"Page Down\");", "-    kbm.put(KEY_PAGE_UP, actionMap.get(DefaultEditorKit.pageUpAction), null, \"Page Up\");", "+    kbm.put(KEY_PAGE_DOWN, actionMap.get(DefaultEditorKit.pageDownAction), null, \"Cursor Page Down\");", "+    kbm.put(KEY_PAGE_UP, actionMap.get(DefaultEditorKit.pageUpAction), null, \"Cursor Page Up\");"]}], "num": 22924}