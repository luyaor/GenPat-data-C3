{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d70bc6506bc381067448032b06240470", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b3ec7b1ce1196ec9f530a412846293d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "7abad9d4d237e1759bd098868c3fc80eb6e4365f", "commitAfterChange": "dcd05db97717868f3a1bba07cb5b1b9106d93c65", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private void createPopupMenu()", "signatureAfterChange": "   private void createPopupMenu()", "diff": ["-          _doc.setCurrentLocation(getCaretPosition());", "+          updateCurrentLocationInDoc();", "-        _doc.setCurrentLocation(getCaretPosition());", "+        updateCurrentLocationInDoc();", "-        _doc.setCurrentLocation(getCaretPosition());", "+        updateCurrentLocationInDoc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14bffd0e1b38c9dde4847979a9a8409e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "7cfeeaf9345ca550653b259e08abe84024ba9934", "commitAfterChange": "193d12982052662ec0e78a136e3a67b8a2ade2e4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   private int _getRelativeLine()", "signatureAfterChange": "   private int _getRelativeLine()", "diff": ["-  /** This method returns the relative offset of line number from the previous location in the document. */", "+    */", "-        // temporary performance optimization", "-        setCurrentLocation(prevLineLoc);", "-        // temporary performance optimization", "-        setCurrentLocation(nextLineLoc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7620a502f61e613e10cbe350f03bb8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public int commentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int commentLines(int selStart, int selEnd)", "diff": ["-      acquireWriteLock();", "-      try {     ", "+      acquireWriteLock(); ", "+      try {", "-          setCurrentLocation(selStart);", "-          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "-          _commentLine();   ", "+          setCurrentLocation(getLineStartPos(selStart));", "+//          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "+          _commentLine();", "-          //int caretPos = getCaretPosition();", "-          //_doc().setCurrentLocation(caretPos);", "-      catch (BadLocationException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3bf5059193aedc7a22e2651073dbb5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/indent/QuestionStartAfterOpenBrace.java", "commitBeforeChange": "b552f36a1d45e65c0515c4425e1954dc75014315", "commitAfterChange": "4f7118cfc181d6dc991cba376f6e7b8942d8b8fc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "signatureAfterChange": "   boolean applyRule(AbstractDJDocument doc, Indenter.IndentReason reason)", "diff": ["-    doc._setCurrentLocation(lineStart);", "+    doc.setCurrentLocation(lineStart);", "-    doc._setCurrentLocation(origin);    ", "+    doc.setCurrentLocation(origin);    ", "-    try { nextNonWS = doc._getFirstNonWSCharPos(braceEndLinePos /* bracePos + 1*/); }", "+    try { nextNonWS = doc.getFirstNonWSCharPos(braceEndLinePos /* bracePos + 1*/); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5746566511968a7de2e0801ca7a527b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public void notifyInactive()", "signatureAfterChange": "   public void notifyInactive()", "diff": ["-      getOpenDocument().syncCurrentLocationWithDefinitions(getCaretPosition());", "+      getOpenDefDocument().setCurrentLocation(getCaretPosition());", "-      _position = _doc.getCurrentDefinitionsLocation();", "+      _position = _doc.getCurrentLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a750fb86ba31af3b082d8372adaec5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/predictive/PredictiveInputFrame.java", "commitBeforeChange": "8453dc6c4207f1842ab4bcab6f7b87a3005d0d74", "commitAfterChange": "644415ee5b045cc76c72314df29caa18c58fb7dc", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "   private void updateInfo()", "signatureAfterChange": "   private void updateInfo()", "diff": ["-      _infoArea.setText(_info.apply(_pim.getCurrentItem()));", "+      _infoLabel.setText(\"Path:   \" + _info.apply(_pim.getCurrentItem()));", "-      _infoArea.setText(\"\");", "+      _infoLabel.setText(\"No file selected\");", "-    _infoArea.setCaretPosition(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "620468bd994a22a3f580555585e047af", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/FindReplaceDialog.java", "commitBeforeChange": "acb61ff7586f62b61a15637f6576fc3aff67ead1", "commitAfterChange": "7f6caafd37c000cec49c11321ed7ed1199924a0b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 21, "signatureBeforeChange": "   private void _updateMachine()", "signatureAfterChange": "   private void _updateMachine()", "diff": ["-      _machine.setStart(doc.getDocument().getCurrentLocation());", "-      _machine.setPosition(doc.getDocument().getCurrentLocation());", "+      _machine.setStart(_defPane.getCaretPosition());", "+      _machine.setPosition(_defPane.getCaretPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6548e7becce8805bee833f11a6415af8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "b67b386ec3a2a01e9ef8abb8bbfbea131babb210", "commitAfterChange": "fc9d4200845727184242c133d120c70c9cdacfec", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "   public void indent(final int reason)", "signatureAfterChange": "   public void indent(final int reason)", "diff": ["-    _doc.syncCurrentLocationWithDefinitions(getCaretPosition());", "+    _doc.setCurrentLocation(getCaretPosition());", "-      //_doc.syncCurrentLocationWithDefinitions(caretPos);", "-      setCaretPosition(_doc.getCurrentDefinitionsLocation());", "+      //_doc.setCurrentLocation(caretPos);", "+      setCaretPosition(_doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cebbd19808b52f2ea9d02088a0e3ff7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/AbstractDJPane.java", "commitBeforeChange": "34d03e4ba66c612a034017381b72d822fe9c84d0", "commitAfterChange": "c85becb760bfba1d758f97ed5b638fcefd6f6350", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public void indent(final int reason)", "signatureAfterChange": "   public void indent(final int reason)", "diff": ["-     *  old: _doc().setCurrentLocation(getCaretPosition());", "-     *  new:", "-    // Is this action still necessary?  ", "-//    getDJDocument().setCurrentLocation(getCaretPosition());", "+    // Is this action still necessary?  Answer: yes!  Without this line, the caret often moves when the user hits \"tab\"", "+    getDJDocument().setCurrentLocation(getCaretPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5789409ad2301ff540ae914b79d160", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "a33dd9cdb6eaad3925dbd0230d8fd4013b8f8126", "commitAfterChange": "345a82c54e3e67af4bf9681fbb22f96d3e1754eb", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public int uncommentLines(int selStart, int selEnd)", "signatureAfterChange": "   public int uncommentLines(int selStart, int selEnd)", "diff": ["-          setCurrentLocation(selStart);", "-          Position oldCurrentPosition = createUnwrappedPosition(_currentLocation);", "+          setCurrentLocation(getLineStartPos(selStart));", "-          //int caretPos = getCaretPosition();", "-          //_doc().setCurrentLocation(caretPos);", "-          //setCurrentLocation(oldCurrentPosition.getOffset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8d5c38f74b436085e9650d11a64e76", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "b5c5207541d6b51d1a0355eaf7cbf64875cccd1f", "commitAfterChange": "9d3a5a43d320b76bd0a861fd1445a502e23c0797", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public int getCurrentCol()", "signatureAfterChange": "   public int getCurrentCol()", "diff": ["-  /** return the current column of the cursor position */", "+   */", "-    int dist = getLineStartPos( getCurrentLocation() );", "-    return getCurrentLocation() - dist + 1;", "+    int here = getCurrentLocation();", "+    int startOfLine = getLineStartPos(here);", "+    return here - startOfLine + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea0f6711d4475b26ba39422b4d48c1ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "9ab3c647e4bf2cceb929c5db766abfe1f2993d4e", "commitAfterChange": "0047e2d5991ef20f74452ac3c21bd6d7ee99b408", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "    public int getCurrentCol()", "signatureAfterChange": "   public int getCurrentCol()", "diff": ["-  /** passes simple included test cases, not really working. */ ", "-    int dist = _reduced.getDistToPreviousNewline( _currentLocation );", "-    if( dist==-1 ){dist = _currentLocation+1;}", "-    if( dist==0 ){ dist = 1; }", "-    else{ dist = dist++;}", "-    return dist;", "+    int dist = getLineStartPos( getCurrentLocation() );", "+    return getCurrentLocation() - dist + 1;"]}], "num": 18745}