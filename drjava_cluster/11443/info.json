{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9f731a087bf7374133dae758477af8b4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6682ff314a31609d19791f13f809e63d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "f8db0c631984f399cc3dc69f63db7cc67ab9e242", "commitAfterChange": "aff4ca7a048d3be1e2f863c90bf8f2bfe09306fd", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": "   public void toggleBookmark()", "signatureAfterChange": "   public void toggleBookmark()", "diff": ["-    final OpenDefinitionsDocument doc = _model.getActiveDocument();", "-    ", "-    int startSel = _currentDefPane.getSelectionStart();", "-    int endSel = _currentDefPane.getSelectionEnd();", "-    doc.acquireReadLock();  // Must follow readers/writers protocol even in event thread", "-    try {", "-      if (startSel > endSel) { int temp = startSel; startSel = endSel; endSel = temp; }", "-      else if (startSel == endSel) {", "-        // nothing selected", "-        endSel = doc.getLineEndPos(startSel);", "-        startSel = doc.getLineStartPos(startSel);", "-      }", "-      final Position startPos = doc.createPosition(startSel);", "-      final Position endPos = doc.createPosition(endSel);", "-      final RegionManager<DocumentRegion> rm = _model.getBookmarkManager();", "-      SimpleDocumentRegion r = new SimpleDocumentRegion(doc, doc.getFile(), startPos.getOffset(), endPos.getOffset());", "-      if (! rm.contains(r)) rm.addRegion(r);", "-      else rm.removeRegion(r);               // bookmark is toggled", "-    }", "-    catch (FileMovedException fme) { throw new UnexpectedException(fme); }", "-    catch (BadLocationException ble) { throw new UnexpectedException(ble); }", "-    finally { doc.releaseReadLock(); }", "+    _model.toggleBookmark(_currentDefPane.getSelectionStart(),", "+                          _currentDefPane.getSelectionEnd());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccad2833ad3405e04b62c750b1f397e3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ErrorPanel.java", "commitBeforeChange": "1313de8815d48e0a1c60eb5bee6900b6b7af3993", "commitAfterChange": "802c4acbf71daa5d149dbcd67d1f360241574951", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "     protected void _updateWithErrors(String failureName, String failureMeaning, DefaultStyledDocument doc)       throws BadLocationException", "signatureAfterChange": "     protected void _updateWithErrors(String failureName, String failureMeaning,                                      DefaultStyledDocument doc)       throws BadLocationException", "diff": ["-    protected void _updateWithErrors(String failureName, String failureMeaning, DefaultStyledDocument doc)", "-      throws BadLocationException {", "-", "-      // Print how many errors", "-      doc.insertString(doc.getLength(), numErrMsg.toString(), BOLD_ATTRIBUTES);", "-      int errorNum = 0;", "-      CompilerErrorModel cem = getErrorModel();", "-      int numErrors = cem.getNumErrors();", "-      // Show errors", "-      for (int i = 0; i < numErrors; i++, errorNum++) {", "-        int startPos = doc.getLength();", "-        CompilerError err = cem.getError(i);", "-        ", "-        _insertErrorText(err, doc);", "+     */", "+    protected void _updateWithErrors(String failureName, String failureMeaning,", "+                                     DefaultStyledDocument doc)", "+      throws BadLocationException", "+    {", "+      // Print how many errors", "+      String numErrsMsg = _getNumErrorsMessage(failureName, failureMeaning);", "+      doc.insertString(doc.getLength(), numErrsMsg, BOLD_ATTRIBUTES);", "-        Position pos = doc.createPosition(startPos);", "-        _errorListPositions[errorNum] = pos;", "-        _errorTable.put(pos, err);", "-      }", "-", "+      _insertErrors(doc);"]}], "num": 11443}