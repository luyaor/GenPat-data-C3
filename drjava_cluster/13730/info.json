{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1b405f74afbc2509f7f0e01666128d3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37eafd5506a7aad1da7a9b5236e34b33", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "a6c0afbadc103bc26f8a5c30f4735e1c0d62a541", "commitAfterChange": "f77d59d2a07360ad309276a41936f8bee75e9ad9", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": "   final public Expression allocationExpression() throws ParseException", "signatureAfterChange": "   final public Expression allocationExpression() throws ParseException", "diff": ["-    List<Type>  typeArgs = null;", "-    if (jj_2_41(2)) {", "+    List<Type> typeArgs = new LinkedList<Type>();", "+    if (jj_2_45(2)) {", "+        if (jj_2_44(2147483647)) {", "+          typeArgs = TypeArguments();", "+        } else {", "+          ;", "+        }", "-          as = arguments();", "+          as = arguments(typeArgs);", "-            jj_la1[124] = jj_gen;", "+            jj_la1[125] = jj_gen;", "-          jj_la1[125] = jj_gen;", "+          jj_la1[126] = jj_gen;", "-        jj_la1[126] = jj_gen;", "+        jj_la1[127] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4967f64f385baa89e78c1693bb079b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": "   final public ForSlashEachStatement forStatement() throws ParseException", "signatureAfterChange": "   final public ForSlashEachStatement forStatement() throws ParseException", "diff": ["-      jj_consume_token(LPAREN);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        break;", "+      default:", "+        jj_la1[75] = jj_gen;", "+        _errorChar('(');", "+      }", "-            jj_la1[69] = jj_gen;", "+            jj_la1[76] = jj_gen;", "-            jj_la1[70] = jj_gen;", "+            jj_la1[77] = jj_gen;", "-            jj_la1[71] = jj_gen;", "+            jj_la1[78] = jj_gen;", "-          jj_la1[72] = jj_gen;", "+          jj_la1[79] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb76e57b30fa64b457f07360de205f9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/autocomplete/parser/ACParser.java", "commitBeforeChange": "aa287bbb1c9881659edc121fbb5e7531149b5808", "commitAfterChange": "31b9f8dbee4928a805aac8571a8f70b93337e1d8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "    final public ImportStatement ImportStatement() throws ParseException", "signatureAfterChange": "    final public ImportStatement ImportStatement() throws ParseException", "diff": ["+    cw = CompoundWord();", "-      cw = CompoundWord();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        default:", "-          jj_la1[10] = jj_gen;", "-          ;", "-        }", "-        jj_la1[12] = jj_gen;", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        default:", "-          jj_la1[11] = jj_gen;", "-          ;", "-        }", "+        jj_la1[8] = jj_gen;"]}], "num": 13730}