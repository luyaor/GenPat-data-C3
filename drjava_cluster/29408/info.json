{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5a0ee2fdf0b247e8d63f258971c0f626", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e4b5fe621f28fd2f991fba3d4c7335", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public File getSourceFile(String filename);", "signatureAfterChange": "   public File getSourceFile(String fileName);", "diff": ["-  public File getSourceFile(String filename);", "+  public File getSourceFile(String fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2867b439867b3f6dfa8c5c22778e1db3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "    public TypeData forLabeledStatementOnly(LabeledStatement that, TypeData statement_result)", "signatureAfterChange": "    public TypeData forLabeledStatementOnly(LabeledStatement that, TypeData statementRes)", "diff": ["-  public TypeData forLabeledStatementOnly(LabeledStatement that, TypeData statement_result) {", "+  public TypeData forLabeledStatementOnly(LabeledStatement that, TypeData statementRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c6b407f4f4f4a696b17a39003bfa1c1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "   public TypeData forSimpleUninitializedArrayInstantiation(SimpleUninitializedArrayInstantiation that)", "signatureAfterChange": "   public TypeData forSimpleUninitializedArrayInstantiation(SimpleUninitializedArrayInstantiation that)", "diff": ["-    final SymbolData type_result = getSymbolData(that.getType().getName(), _data.getSymbolData(), that.getType());", "+    final SymbolData typeRes = getSymbolData(that.getType().getName(), _data.getSymbolData(), that.getType());", "-    return forUninitializedArrayInstantiationOnly(that, type_result, dimensions_result);", "+    return forUninitializedArrayInstantiationOnly(that, typeRes, dimensions_result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c26a8e826092eedbe92c78bcdc5a762", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerModel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException;", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> doc) throws IOException;", "diff": ["-  public void compile(List<OpenDefinitionsDocument> defDocs) throws IOException;", "+  public void compile(List<OpenDefinitionsDocument> doc) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d20c7baa0ebcb40adc9744615eeb2f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerModel.java", "commitBeforeChange": "7ea53a2dfdcfb14d60683d433ef09ceeb7c764d3", "commitAfterChange": "e656613109a12add4ad6c51f7040ce36731c0f8b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void compile(List<OpenDefinitionsDocument> doc) throws IOException;", "signatureAfterChange": "   public void compile(List<OpenDefinitionsDocument> docs) throws IOException;", "diff": ["+  public void compile(List<OpenDefinitionsDocument> docs) throws IOException;", "-   */", "-  public void compile(List<OpenDefinitionsDocument> doc) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4089f43aac175d57fd04888c8f5110cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/text/AbstractDocumentInterface.java", "commitBeforeChange": "1502cfa27280e1c7a53d8bd6dee788f17c33dc23", "commitAfterChange": "f3485582e7c13f9ae164de3e45280fa4f5c05b3e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      void remove(int offs, int len) throws BadLocationException;", "signatureAfterChange": "   void remove(int offset, int length) throws BadLocationException;", "diff": ["-  void remove(int offs, int len) throws BadLocationException;", "+  /* Removes the substring of specified length at the specified offset. */", "+  void remove(int offset, int length) throws BadLocationException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409ed86d13ede012e3676b71e97ada82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public TypeData forBitwiseNotExpressionOnly(BitwiseNotExpression that, TypeData value_result)", "signatureAfterChange": "   public TypeData forBitwiseNotExpressionOnly(BitwiseNotExpression that, TypeData valueRes)", "diff": ["-  public TypeData forBitwiseNotExpressionOnly(BitwiseNotExpression that, TypeData value_result) {", "+  public TypeData forBitwiseNotExpressionOnly(BitwiseNotExpression that, TypeData valueRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510bc7b929227bbf7933a1ed534fd28d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "5d8a3bdb2b4d5525535575f357c7961c2851e09a", "commitAfterChange": "2d393792d3779835588c185ebb45db67c3e34dc4", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public Position createPosition(int offs) throws BadLocationException", "signatureAfterChange": "   public Position createPosition(final int offset) throws BadLocationException", "diff": ["-  public Position createPosition(int offs) throws BadLocationException {", "-    WrappedPosition wp = new WrappedPosition(createUnwrappedPosition(offs));", "+  public Position createPosition(final int offset) throws BadLocationException {", "+    /* The following attempt to defer document loading did not work because offset became stale.  Postions must be", "+     * created eagerly. */", "+//    WrappedPosition wp = new WrappedPosition(new LazyPosition(new Suspension<Position>() {", "+//      public Position eval() {", "+//        try { return createUnwrappedPosition(offset); }", "+//        catch(BadLocationException e) { throw new UnexpectedException(e); }", "+//      }", "+//    }));", "+    WrappedPosition wp = new WrappedPosition(createUnwrappedPosition(offset));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56793be42ef1790dc2f70e9446040706", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DCacheAdapter.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void documentSaved(String filename);", "signatureAfterChange": "   public void documentSaved(String fileName);", "diff": ["-  public void documentSaved(String filename);", "+  public void documentSaved(String fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59f7d3abaf0ed6573084a4085427bb92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/NodeDataVisitor.java", "commitBeforeChange": "f5e6f060cad653c11888e30b69842047d7693a32", "commitAfterChange": "dba0ccac56f5e3245b525afd7781147d259a9d94", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Ret itemCase(INavigatorItem ini);", "signatureAfterChange": "   public Ret itemCase(INavigatorItem i);", "diff": ["-  ", "-  public Ret itemCase(INavigatorItem ini);", "+  public Ret itemCase(INavigatorItem i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c76d9e43d5e092cf4bc4d73224f1f85", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JListNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "   public void requestSelectionUpdate(INavigatorItem ini)", "signatureAfterChange": "   public void requestSelectionUpdate(INavigatorItem doc)", "diff": ["-  public void requestSelectionUpdate(INavigatorItem ini) { /* nothing */ }", "+  public void requestSelectionUpdate(INavigatorItem doc) { /* nothing */ }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ccbb93cdd231a04e7eef80264ce72e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DocumentIterator.java", "commitBeforeChange": "3144efa2bdaef7eb118336f3bc431cce43bf0ac2", "commitAfterChange": "f3137148a923ab22d0c3b3413619e702ec846448", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "    OpenDefinitionsDocument getNextDocument(OpenDefinitionsDocument d, java.awt.Component frame);", "signatureAfterChange": "    OpenDefinitionsDocument getNextDocument(OpenDefinitionsDocument doc, java.awt.Component frame);", "diff": ["-   OpenDefinitionsDocument getNextDocument(OpenDefinitionsDocument d, java.awt.Component frame);", "+   OpenDefinitionsDocument getNextDocument(OpenDefinitionsDocument doc, java.awt.Component frame);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be21e6b56be1a77971d5b12d4e90e91", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/RegionManager.java", "commitBeforeChange": "4fb080a38871d6561e99bfdfdb664ff987fb15c5", "commitAfterChange": "d8298bba22e8675e12094f851d61d88ab6c6f68a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public boolean contains(R r);", "signatureAfterChange": "   public boolean contains(R region);", "diff": ["+    * @return true if region is found */", "+  public boolean contains(R region);", "-      */", "-  public boolean contains(R r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "751474d4477ea5447476994147bf016c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/OpenDefinitionsDocument.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException;", "signatureAfterChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException;", "diff": ["-   */", "-  public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException;", "+   */", "+  public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773875c32c6b7a400c238df0adba87cb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public TypeData forForStatementOnly(ForStatement that, TypeData init_result, TypeData condition_result,                                        TypeData update_result, TypeData code_result)", "signatureAfterChange": "   public TypeData forForStatementOnly(ForStatement that, TypeData init_result, TypeData condition_result,                                        TypeData update_result, TypeData codeRes)", "diff": ["-                                      TypeData update_result, TypeData code_result) {", "+                                      TypeData update_result, TypeData codeRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81bacb61e1c4ffb68fc40f8107bb670f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "    public TypeData forExpressionStatementOnly(ExpressionStatement that, TypeData expression_result)", "signatureAfterChange": "    public TypeData forExpressionStatementOnly(ExpressionStatement that, TypeData exprRes)", "diff": ["-  public TypeData forExpressionStatementOnly(ExpressionStatement that, TypeData expression_result) {", "+  public TypeData forExpressionStatementOnly(ExpressionStatement that, TypeData exprRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824fc6343352399aec9245cc030e5ff9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelTestCase.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "        public void javadocEnded(boolean success, File destDir, boolean showFrames)", "signatureAfterChange": "        public void javadocEnded(boolean success, File destDir, boolean allDocs)", "diff": ["-    public void javadocEnded(boolean success, File destDir, boolean showFrames) {", "+    public void javadocEnded(boolean success, File destDir, boolean allDocs) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a5e843624ee3f446ab71c56d75f833", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "    public TypeData forTryCatchStatementOnly(TryCatchStatement that, TypeData tryBlock_result,                                             TypeData[] catchBlocks_result)", "signatureAfterChange": "    public TypeData forTryCatchStatementOnly(TryCatchStatement that, TypeData tryBlockRes,                                             TypeData[] catchBlocksRes)", "diff": ["-  public TypeData forTryCatchStatementOnly(TryCatchStatement that, TypeData tryBlock_result, ", "-                                           TypeData[] catchBlocks_result) {", "+  public TypeData forTryCatchStatementOnly(TryCatchStatement that, TypeData tryBlockRes, ", "+                                           TypeData[] catchBlocksRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca1b3818430dbec8bb18bcd468b4d6c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitListener.java", "commitBeforeChange": "506c5d6a5606459c5317089961c227d94f8d45b9", "commitAfterChange": "c46bb3730e5e9806be895b69d7883311c35ca984", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void junitTestEnded(String name, boolean wasSuccesful, boolean causedError);", "signatureAfterChange": "   public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError);", "diff": ["-  public void junitTestEnded(String name, boolean wasSuccesful, boolean causedError);", "+  public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "935872eb91eb64e8f8d1493c4ad118c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ConstructorBodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public TypeData forValueReturnStatementOnly(ValueReturnStatement that, TypeData value_result)", "signatureAfterChange": "   public TypeData forValueReturnStatementOnly(ValueReturnStatement that, TypeData valueRes)", "diff": ["-   */", "-  public TypeData forValueReturnStatementOnly(ValueReturnStatement that, TypeData value_result) {", "+  /** Throw an error and return null, becuase constructors cannot have value return statements in their bodies. */", "+  public TypeData forValueReturnStatementOnly(ValueReturnStatement that, TypeData valueRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9889eb409b097bc7bdb969eb5384cdc1", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "    public TypeData forStaticInitializerOnly(StaticInitializer that, TypeData code_result)", "signatureAfterChange": "    public TypeData forStaticInitializerOnly(StaticInitializer that, TypeData codeRes)", "diff": ["-  public TypeData forStaticInitializerOnly(StaticInitializer that, TypeData code_result) {", "-    return forJExpressionOnly(that);//InitializerOnly(that, code_result);", "+  public TypeData forStaticInitializerOnly(StaticInitializer that, TypeData codeRes) {", "+    return forJExpressionOnly(that);//InitializerOnly(that, codeRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca5529171747113e0e51fe06a35927c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result,                                            boolean sawDefault)", "signatureAfterChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData testRes, TypeData[] cases_result,                                            boolean sawDefault)", "diff": ["-   public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result, ", "+   public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData testRes, TypeData[] cases_result, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeca24001a42be585f42c3bb2163ed52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummySingleDisplayModelListener.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "   public void javadocEnded(boolean success, File destDir, boolean showFrames)", "signatureAfterChange": "   public void javadocEnded(boolean success, File destDir, boolean allDocs)", "diff": ["-  public void javadocEnded(boolean success, File destDir, boolean showFrames) { }", "+  public void javadocEnded(boolean success, File destDir, boolean allDocs) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af93cfee1e141b6c0b9a529f345868f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummySingleDisplayModelListener.java", "commitBeforeChange": "fc9d4200845727184242c133d120c70c9cdacfec", "commitAfterChange": "4128354c8729a4a5df76a578d72103228145ae8d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void junitTestEnded(String name, boolean wasSuccesful, boolean causedError)", "signatureAfterChange": "   public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError)", "diff": ["-  public void junitTestEnded(String name, boolean wasSuccesful, boolean causedError) { }", "+  public void junitTestEnded(String name, boolean wasSuccessful, boolean causedError) { }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26e3d5d9fcaeda971c98236fd0b97cc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyGlobalModel.java", "commitBeforeChange": "b555b0cfcc7bbb9f082899ce815305f8a985343e", "commitAfterChange": "aafaf7b848d738e58eee48a6cbc4b800c8027685", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "      public File getSourceFile(String filename)", "signatureAfterChange": "      public File getSourceFile(String fileName)", "diff": ["-  public File getSourceFile(String filename) {", "+  public File getSourceFile(String fileName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31fd722ffa03204fbf6ce2498677946", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/RegionManager.java", "commitBeforeChange": "d884ae55e9471d604870827048329b58394dd950", "commitAfterChange": "28bca5adabaaf178bdf954808155389f93ed51fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public boolean contains(R region);", "signatureAfterChange": "   public boolean contains(R r);", "diff": ["-    * @return true if region is found */", "-  public boolean contains(R region);", "+      */", "+  public boolean contains(R r);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d318c0a90b37df0ed55c1c863b6b7ece", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "    public TypeData forInstanceInitializerOnly(InstanceInitializer that, TypeData code_result)", "signatureAfterChange": "    public TypeData forInstanceInitializerOnly(InstanceInitializer that, TypeData codeRes)", "diff": ["-  public TypeData forInstanceInitializerOnly(InstanceInitializer that, TypeData code_result) {", "-    return forJExpressionOnly(that);//forInitializerOnly(that, code_result);", "+  public TypeData forInstanceInitializerOnly(InstanceInitializer that, TypeData codeRes) {", "+    return forJExpressionOnly(that);//forInitializerOnly(that, codeRes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d36cb3c7f9c0707e3b85a37f031a5c16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result)", "signatureAfterChange": "    public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData testRes, TypeData[] casesRes)", "diff": ["-  public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData test_result, TypeData[] cases_result) {", "+  public TypeData forSwitchStatementOnly(SwitchStatement that, TypeData testRes, TypeData[] casesRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d83a31510d20f9192bdf87d32c0f3028", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DummyOpenDefDoc.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "   public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "      public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "diff": ["+  ", "+  public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException {", "-   */", "-  public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException {", "-    throw new UnsupportedOperationException(\"Dummy method\");", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdfdb00f798c0166e7ba92ae3f0b690", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/IDocumentNavigator.java", "commitBeforeChange": "16144456daecd1d566a6e5089e1ddd2764aafb21", "commitAfterChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void requestSelectionUpdate(INavigatorItem ini);", "signatureAfterChange": "       public void requestSelectionUpdate(INavigatorItem i);", "diff": ["-  public void requestSelectionUpdate(INavigatorItem ini);", "+   public void requestSelectionUpdate(INavigatorItem i);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e270089141c4de90f1622f893d3f8f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/JavadocListener.java", "commitBeforeChange": "b35d99a8e8e746835cbe1475be92c2916e38764d", "commitAfterChange": "e52c8e82d0acb8aa5662b1f25d8012dda6d02b06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void javadocEnded(boolean success, File destDir, boolean showFrames);", "signatureAfterChange": "   public void javadocEnded(boolean success, File destDir, boolean allDocs);", "diff": ["-  public void javadocEnded(boolean success, File destDir, boolean showFrames);", "+  public void javadocEnded(boolean success, File destDir, boolean allDocs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6a0f12be97d00853609080cdfa6850", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyTypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "   public TypeData forWhileStatementOnly(WhileStatement that, TypeData condition_result, TypeData code_result)", "signatureAfterChange": "   public TypeData forWhileStatementOnly(WhileStatement that, TypeData condition_result, TypeData codeRes)", "diff": ["-  public TypeData forWhileStatementOnly(WhileStatement that, TypeData condition_result, TypeData code_result) {", "+  public TypeData forWhileStatementOnly(WhileStatement that, TypeData condition_result, TypeData codeRes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4a9376d1d9bc1a458838584c361f93a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModel.java", "commitBeforeChange": "fc9d4200845727184242c133d120c70c9cdacfec", "commitAfterChange": "4128354c8729a4a5df76a578d72103228145ae8d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public DocFile[] openProject(File fine) throws IOException, MalformedProjectFileException;", "signatureAfterChange": "   public DocFile[] openProject(File file) throws IOException, MalformedProjectFileException;", "diff": ["-  public DocFile[] openProject(File fine) throws IOException, MalformedProjectFileException;", "+  public DocFile[] openProject(File file) throws IOException, MalformedProjectFileException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86c4deefff76956afa7734120bef907", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/TypeChecker.java", "commitBeforeChange": "f2098dc3df82d0fc4c7e17fd5e93823851356d75", "commitAfterChange": "02bb605d31bd77f6715d3d33be9295c5381484e0", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "    public TypeData forBlockOnly(Block that, TypeData[] statements_result)", "signatureAfterChange": "    public TypeData forBlockOnly(Block that, TypeData[] statementsRes)", "diff": ["-  public TypeData forBlockOnly(Block that, TypeData[] statements_result) {", "+  public TypeData forBlockOnly(Block that, TypeData[] statementsRes) {"]}], "num": 29408}