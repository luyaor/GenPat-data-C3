{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24050c97d616b8776f721b28cd480c41", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "078fa6aa5199973f3810d6d2cd4ba056", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "d0676f5bb147afbea8208cddab28a86ea8a71ce1", "commitAfterChange": "554902896b1f96c3839ea73c44260e0ca63ab535", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public ClassPathVector getClassPath()", "signatureAfterChange": "   public ClassPathVector getClassPath()", "diff": ["-//        ClassPathVector classPath = new ClassPathVector(strClassPath.size() + _startupClassPathVector.size());", "-        ", "-        classPath.addAll(_startupClassPathVector);", "-        //        for(int i = 0; i < _startupClasspathVector.size(); i++) {", "-        //          classpath.addElement(_startupClasspathVector.elementAt(i));", "-        //        }", "-        //        Vector<String> augmentedClasspath = _interpreterJVM().getAugmentedClasspath();", "-        //        for(int i = 0; i < augmentedClasspath.size(); i++) {", "-        //          classpdElement(augmentedClasspath.ementAt(i));", "-        //        }", "+        for (File f : _startupClassPath) {", "+          try { classPath.add(FileOps.toURL(f)); }", "+          catch (MalformedURLException e) { /* just ignore bad classpath entry */ }", "+        }", "-      catch (RemoteException re) { _threwException(re); }", "+      catch (RemoteException re) { _threwException(re); return new ClassPathVector(); }", "-    return new ClassPathVector();", "+    else { return new ClassPathVector(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d481e2159beb5e029083a77e254f0c0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "66cf5c18c85c49dd4268e6eb5e205df7e4243a71", "commitAfterChange": "f6fc0c2918885b86d7588893e1a025f2fac926cd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public ClasspathVector getClasspath()", "signatureAfterChange": "   public ClassPathVector getClassPath()", "diff": ["-  public ClasspathVector getClasspath() {", "+  public ClassPathVector getClassPath() {", "-        Vector<String> strClasspath = new Vector<String>(_interpreterJVM().getAugmentedClasspath());", "-        ClasspathVector classpath = new ClasspathVector(strClasspath.size()+_startupClasspathVector.size());", "+        Vector<String> strClassPath = new Vector<String>(_interpreterJVM().getAugmentedClassPath());", "+        ClassPathVector classPath = new ClassPathVector(strClassPath.size()+_startupClassPathVector.size());", "-        for(String s : strClasspath) { ", "-          classpath.add(s); // automatically converted to URL", "+        for(String s : strClassPath) { ", "+          classPath.add(s); // automatically converted to URL", "-        classpath.addAll(_startupClasspathVector);", "+        classPath.addAll(_startupClassPathVector);", "-        return classpath;", "+        return classPath;", "-    return new ClasspathVector();", "+    return new ClassPathVector();"]}], "num": 20494}