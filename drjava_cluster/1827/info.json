{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1db7a566e296bb05dab90577ec716050", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e54994c1527d9721e8962e939d2c1577", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "97a825e752ef3da28458a0080f0990b0f0659788", "commitAfterChange": "3f50a00dbfaba534529de5a114a9d7c30612e9a7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testShiftBackspace() throws BadLocationException", "signatureAfterChange": "   public void testShiftBackspace() throws BadLocationException", "diff": ["-    final char undefined = KeyEvent.CHAR_UNDEFINED;", "-    final int pressed = KeyEvent.KEY_PRESSED;", "-    final int released = KeyEvent.KEY_RELEASED;", "-    final int shift = InputEvent.SHIFT_MASK;", "-    ", "+  ", "-    ", "-        int shiftBksp = OptionConstants.KEY_DELETE_PREVIOUS.getDefault().getKeyCode();", "-        defPane.processKeyEvent(new KeyEvent(defPane, pressed, (new Date()).getTime(), shift, shiftBksp, undefined));", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), SHIFT, DEL_PREV, UNDEFINED));", "-        defPane.processKeyEvent(new KeyEvent(defPane, released, (new Date()).getTime(), shift, shiftBksp, undefined));", "-        _log.log(\"second key event processed\");", "-        _assertDocumentContents(doc, \"tes\", \"Did not delete on shift+backspace\");", "-        _log.log(\"Halfway through testShiftBackspace\");", "- ", "-        int shiftDel = OptionConstants.KEY_DELETE_NEXT.getDefault().getKeyCode();", "-        defPane.setCaretPosition(1);", "-        // The following is the sequence of key events for shift+delete", "-        defPane.processKeyEvent(new KeyEvent(defPane, pressed, (new Date()).getTime(), shift, shiftDel, undefined));", "-        defPane.processKeyEvent(new KeyEvent(defPane, released, (new Date()).getTime(), shift, shiftDel, undefined));", "-        _assertDocumentContents(doc, \"ts\", \"Did not delete on shift+delete\");", "-        _log.log(\"testShiftBackSpace completed\");", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), SHIFT, DEL_PREV, UNDEFINED));", "+        _frame.validate();", "+    Utilities.clearEventQueue();", "-", "+    _log.log(\"second key event processed\");", "+    _assertDocumentContents(doc, \"tes\", \"Did not delete on shift+backspace\");", "+    _log.log(\"Halfway through testShiftBackspace\");", "+    ", "+     ", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        ", "+        defPane.setCaretPosition(1);", "+        // The following is the sequence of key events for shift+delete", "+        defPane.processKeyEvent(new KeyEvent(defPane, PRESSED, (new Date()).getTime(), SHIFT, DEL_NEXT, UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, RELEASED, (new Date()).getTime(), SHIFT, DEL_NEXT, UNDEFINED));", "+        _frame.validate();", "+      }", "+    });", "+    Utilities.clearEventQueue();", "+    _assertDocumentContents(doc, \"ts\", \"Did not delete on shift+delete\");", "+    _log.log(\"testShiftBackSpace completed\");", "+   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92c64fe461b17deed4b26cccb694522", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "bf2319a0fd4ff0da05d171cf995d395154267897", "commitAfterChange": "ce944bab12f670cf565ac442d0f81c8cbf5e4ad0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testShiftBackspace() throws BadLocationException", "signatureAfterChange": "   public void testShiftBackspace() throws BadLocationException", "diff": ["-   */", "+    */", "-    final DefinitionsPane definitions = _frame.getCurrentDefPane();", "-    final OpenDefinitionsDocument doc = definitions.getOpenDefDocument();", "+    final DefinitionsPane defPane = _frame.getCurrentDefPane();", "+    final OpenDefinitionsDocument doc = defPane.getOpenDefDocument();", "+    final char undefined = KeyEvent.CHAR_UNDEFINED;", "+    final int pressed = KeyEvent.KEY_PRESSED;", "+    final int released = KeyEvent.KEY_RELEASED;", "+    final int shift = InputEvent.SHIFT_MASK;", "+    ", "-        definitions.setCaretPosition(4);", "+        defPane.setCaretPosition(4);", "-        int shiftBackspaceCode = OptionConstants.KEY_DELETE_PREVIOUS.getDefault().getKeyCode();", "+        int shiftBksp = OptionConstants.KEY_DELETE_PREVIOUS.getDefault().getKeyCode();", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(),", "-                                                 InputEvent.SHIFT_MASK, shiftBackspaceCode, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, pressed, (new Date()).getTime(), shift, shiftBksp, undefined));", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(),", "-                                                 InputEvent.SHIFT_MASK, shiftBackspaceCode, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, released, (new Date()).getTime(), shift, shiftBksp, undefined));", "-      }", "-    });", "-    _assertDocumentContents(doc, \"tes\", \"Did not delete on shift+backspace\");", "-    ", "-    _log.log(\"Halfway through testShiftBackspace\");", "-    ", "-    Utilities.invokeAndWait(new Runnable() { ", "-      public void run() { ", "-        int shiftDeleteCode =", "-          OptionConstants.KEY_DELETE_NEXT.getDefault().getKeyCode();", "-        definitions.setCaretPosition(1);", "+        _assertDocumentContents(doc, \"tes\", \"Did not delete on shift+backspace\");", "+        _log.log(\"Halfway through testShiftBackspace\");", "+ ", "+        int shiftDel = OptionConstants.KEY_DELETE_NEXT.getDefault().getKeyCode();", "+        defPane.setCaretPosition(1);", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_PRESSED, (new Date()).getTime(), InputEvent.SHIFT_MASK,", "-                                                 shiftDeleteCode, KeyEvent.CHAR_UNDEFINED));", "-        definitions.processKeyEvent(new KeyEvent(definitions, KeyEvent.KEY_RELEASED, (new Date()).getTime(), InputEvent.SHIFT_MASK,", "-                                                 shiftDeleteCode, KeyEvent.CHAR_UNDEFINED));", "+        defPane.processKeyEvent(new KeyEvent(defPane, pressed, (new Date()).getTime(), shift, shiftDel, undefined));", "+        defPane.processKeyEvent(new KeyEvent(defPane, released, (new Date()).getTime(), shift, shiftDel, undefined));", "+        _assertDocumentContents(doc, \"ts\", \"Did not delete on shift+delete\");", "+        _log.log(\"testShiftBackSpace completed\");", "-    _assertDocumentContents(doc, \"ts\", \"Did not delete on shift+delete\");", "-    _log.log(\"testShiftBackSpace completed\");", "+"]}], "num": 1827}