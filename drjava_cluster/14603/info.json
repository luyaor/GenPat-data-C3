{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "357d710d3459aa5b2980835003a754b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "145270b573dd75be4f49b7199a85f416", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 8, "signatureBeforeChange": "          protected void authorizeContinue() throws InterruptedException", "signatureAfterChange": "   public static void waitUntilNanos(Object obj, long futureTime) throws InterruptedException, TimeoutException", "diff": ["+   */", "+  public static void waitUntilNanos(Object obj, long futureTime) throws InterruptedException, TimeoutException {", "+    long delta = futureTime - System.nanoTime();", "+    if (delta > 0) { TimeUnit.NANOSECONDS.timedWait(obj, delta); }", "+    else { throw new TimeoutException(); }", "+  }", "-    ", "-    protected void authorizeContinue() throws InterruptedException {", "-      if (!_continueMonitor.isSignaled()) {", "-        _status = Status.PAUSED;", "-        debug.log(\"Waiting for signal to continue\");", "-        _continueMonitor.ensureSignaled();", "-        debug.log(\"Received signal to continue\");", "-        _status = Status.RUNNING;", "-      }", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd592d11437a37def5d5e40805baedea", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/CompilerErrorPanel.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model)", "signatureAfterChange": "   public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame)", "diff": ["-  public CompilerErrorPanel(DefinitionsPane defPane, GlobalModel model) {", "-    _definitionsPane = defPane;", "+  public CompilerErrorPanel(SingleDisplayModel model, MainFrame frame) {", "-", "-    _listener = new DefinitionsCaretListener();", "-    _definitionsPane.addCaretListener(_listener);", "+    _frame = frame;", "-          _switchToError(_errorListPane.getSelectedIndex() + 1);", "+          int index = _errorListPane.getSelectedIndex() + 1;", "+          if (index < _numErrors) {", "+            _errorListPane.switchToError(index);", "+          }", "-          _switchToError(_errorListPane.getSelectedIndex() - 1);", "+          int index = _errorListPane.getSelectedIndex() -1 ;", "+          if (index >= 0) {", "+            _errorListPane.switchToError(index);", "+          }", "-    ", "+", "+", "-    // If we don't, when it pops up it cuts away the right edge of the ", "+    // If we don't, when it pops up it cuts away the right edge of the", "-", "-    resetErrors(new CompilerError[0]);"]}], "num": 14603}