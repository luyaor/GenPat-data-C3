{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "480d8ae5a6bdcbbb478abea79e85880f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c521df70c5f1d684fdb674c4c74ed497", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 302, "signatureBeforeChange": "   public static <T1, T2, R> Lambda<T2, Lambda<T1, R>>      currySecond(final Lambda2<? super T1, ? super T2, ? extends R> lambda)", "signatureAfterChange": "     public R value(T1 arg1, T2 arg2, T3 arg3, T4 arg4)", "diff": ["-  public static <T1, T2, R> Lambda<T2, Lambda<T1, R>> ", "-    currySecond(final Lambda2<? super T1, ? super T2, ? extends R> lambda) {", "-    return new Lambda<T2, Lambda<T1, R>>() {", "-      public Lambda<T1, R> value(final T2 arg2) {", "-        return new Lambda<T1, R>() {", "-          public R value(T1 arg1) { return lambda.value(arg1, arg2); }", "-        };", "-      }", "-    };", "+    }", "+    public R value(T1 arg1, T2 arg2, T3 arg3, T4 arg4) { _r.run(arg1, arg2, arg3, arg4); return _result; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9756d1feac8b3fee4447dcee8183597", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LambdaUtil.java", "commitBeforeChange": "274f7defc49003e66c942e814c9ce22958b3814c", "commitAfterChange": "f2730b22a0cb99532fc26d3fe0cc1ef03dc2fb33", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 207, "signatureBeforeChange": "   public static <T1, T2, R> Lambda<T1, Lambda<T2, R>>      curry(final Lambda2<? super T1, ? super T2, ? extends R> lambda)", "signatureAfterChange": "   public static <T1, T2, R> Lambda<T1, Lambda<T2, R>> curry(Lambda2<? super T1, ? super T2, ? extends R> lambda)", "diff": ["-  public static <T1, T2, R> Lambda<T1, Lambda<T2, R>> ", "-    curry(final Lambda2<? super T1, ? super T2, ? extends R> lambda) {", "-    return new Lambda<T1, Lambda<T2, R>>() {", "-      public Lambda<T2, R> value(final T1 arg1) {", "-        return new Lambda<T2, R>() {", "-          public R value(T2 arg2) { return lambda.value(arg1, arg2); }", "-        };", "-      }", "-    };", "+   */", "+  public static <T1, T2, R> Lambda<T1, Lambda<T2, R>> curry(Lambda2<? super T1, ? super T2, ? extends R> lambda) {", "+    return new CurriedLambda2<T1, T2, R>(lambda);", "+  }"]}], "num": 27714}