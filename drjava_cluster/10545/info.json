{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef57c0bcfbb7871e8371ad35096621d9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72f2d94f6ca5d04db487b3de32551d2f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelOtherTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testQuitUnsavedDocumentAllowAbandon()", "signatureAfterChange": "   public void testQuitUnsavedDocumentsAllowAbandon()     throws BadLocationException", "diff": ["-  public void testQuitUnsavedDocumentAllowAbandon() {", "+  public void testQuitUnsavedDocumentsAllowAbandon()", "+    throws BadLocationException", "+  {", "-      public boolean canAbandonFile(File file) {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+", "+      public void fileClosed(OpenDefinitionsDocument doc) {", "+        closeCount++;", "+      }", "+", "+    _model.newFile();", "+    OpenDefinitionsDocument doc1 = setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc2 = setupDocument(BAR_TEXT);", "+", "+    assertNumOpenDocs(3);", "-      fail(\"Got past quit without security exception (and without quitting!\");", "+      fail(\"Got past quit without security exception (and without quitting!)\");", "+", "+      // Only the changed files should prompt an event", "+      listener.assertAbandonCount(2);", "+      listener.assertCloseCount(3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7feb0c8868a556d2648381e3458f42f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testCancelOpenFileAllowAbandon()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testCancelOpenFile()     throws BadLocationException, IOException", "diff": ["-  public void testCancelOpenFileAllowAbandon()", "+  public void testCancelOpenFile()", "-    setupDocument(FOO_TEXT);", "+    OpenDefinitionsDocument doc = setupDocument(FOO_TEXT);", "+    assertNumOpenDocs(1);", "-      public boolean canAbandonFile(File file) {", "+      public boolean canAbandonFile(OpenDefinitionsDocument doc) {", "+      }", "+", "+      public void fileOpened() {", "+        openCount++;", "-    _model.openFile(new CancelingSelector());", "-    assertModified(true);", "-    assertContents(FOO_TEXT);", "+    try {", "+      OpenDefinitionsDocument newDoc =", "+        _model.openFile(new CancelingSelector());", "+    }", "+    catch (OperationCanceledException oce) {", "+      // we expect this to be thrown", "+    }", "+    finally {", "+      assertNumOpenDocs(1);", "+      listener.assertOpenCount(0);", "+", "+      OpenDefinitionsDocument[] docs = _model.getDefinitionsDocuments();", "+      doc = docs[0];", "+      assertModified(true, doc);", "+      assertContents(FOO_TEXT, doc);", "+    }"]}], "num": 10545}