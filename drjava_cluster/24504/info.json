{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db6ecfe4538cb2b64f8159830f1082c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "634f06f76762fc3e91c3344c0af4f613", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JarOptionsDialog.java", "commitBeforeChange": "f6810ad68cbb0aaa0d9f5ff0052437da87098ab7", "commitAfterChange": "194b54409492ca1653c254a0d1e255c4fc49ec7f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "   private JPanel _makeMainClassSelectorPanel()", "signatureAfterChange": "   private JPanel _makeMainClassSelectorPanel()", "diff": ["-    _mainClassField = new FileSelectorStringComponent(this, null, 20, 12f) {", "-        public File convertStringToFile(String s) { ", "-          s = s.trim().replace('.', java.io.File.separatorChar) + \".class\";", "-          if (s.equals(\"\")) return null;", "-          else return new File(_rootFile, s);", "-        }", "-        ", "-        public String convertFileToString(File f) {", "-          if (f == null)  return \"\";", "-          else {", "-            try {", "-              String s = edu.rice.cs.util.FileOps.makeRelativeTo(f, _rootFile).toString();", "-              s = s.substring(0, s.lastIndexOf(\".class\"));", "-              s = s.replace(java.io.File.separatorChar, '.').replace('$', '.');", "-              int pos = 0;", "-              boolean ok = true;", "-              while((pos = s.indexOf('.', pos)) >= 0) {", "-                if ((s.length() <= pos + 1) || (Character.isDigit(s.charAt(pos + 1)))) {", "-                  ok = false;", "-                  break;", "-                }", "-                ++pos;", "+    ", "+    FileChooser chooser = new FileChooser(_rootFile);", "+    chooser.setDialogTitle(\"Select Main Class\");", "+//      chooser.setTopMessage(\"Select the main class for the executable jar file:\");", "+    chooser.setApproveButtonText(\"Select\");", "+    FileFilter filter = new FileFilter() {", "+      public boolean accept(File f) {", "+        String name = f.getName();", "+        return  !f.isDirectory() && name.endsWith(\".class\");", "+      }", "+      public String getDescription() { return \"Class Files (*.class)\"; }", "+    };", "+    chooser.addChoosableFileFilter(filter);", "+    ", "+    _mainClassField = new FileSelectorStringComponent(this, chooser, 20, 12f) {", "+      public File convertStringToFile(String s) { ", "+        s = s.trim().replace('.', java.io.File.separatorChar) + \".class\";", "+        if (s.equals(\"\")) return null;", "+        else return new File(_rootFile, s);", "+      }", "+      ", "+      public String convertFileToString(File f) {", "+        if (f == null)  return \"\";", "+        else {", "+          try {", "+            String s = edu.rice.cs.util.FileOps.makeRelativeTo(f, _rootFile).toString();", "+            s = s.substring(0, s.lastIndexOf(\".class\"));", "+            s = s.replace(java.io.File.separatorChar, '.').replace('$', '.');", "+            int pos = 0;", "+            boolean ok = true;", "+            while((pos = s.indexOf('.', pos)) >= 0) {", "+              if ((s.length() <= pos + 1) || (Character.isDigit(s.charAt(pos + 1)))) {", "+                ok = false;", "+                break;", "-              if (ok) return s;", "-              return \"\";", "+              ++pos;", "-            catch(Exception e) { return \"\"; }", "+            if (ok) return s;", "+            return \"\";", "+          catch(Exception e) { return \"\"; }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b1b1e534bd2d80e2cc6c56b3c075fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "395b2a102021edacb1427340196ea5475967dc87", "commitAfterChange": "51bfc4d668bc1673b008afd130ba536a07f9c69d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "    private void _setupDebugPanel ( ConfigPanel panel)", "signatureAfterChange": "    private void _setupDebugPanel ( ConfigPanel panel)", "diff": ["-    panel.addComponent( new VectorOptionComponent (OptionConstants.DEBUG_SOURCEPATH, \"Sourcepath\", this));", "-    panel.addComponent( new BooleanOptionComponent ( OptionConstants.DEBUG_STEP_DRJAVA, \"Step through DrJava Source\", this));", "+    VectorOptionComponent sourcePath = new VectorOptionComponent (OptionConstants.DEBUG_SOURCEPATH, ", "+                                                                  \"Sourcepath\", ", "+                                                                  this);", "+    sourcePath.setFileFilter(new FileFilter() {", "+      public boolean accept (File f) {", "+        if (f.isDirectory()) {", "+          return true;", "+        }", "+        return false;", "+      }", "+", "+      /**", "+       * @return A description of this filter to display", "+       */", "+      public String getDescription() {", "+        return \"Source Directories\";", "+      }", "+    });", "+    panel.addComponent( sourcePath );", "+    panel.addComponent( new BooleanOptionComponent ( OptionConstants.DEBUG_STEP_JAVA, ", "+                                                    \"Step Into Java Classes\", ", "+                                                    this));", "+    panel.addComponent( new BooleanOptionComponent ( OptionConstants.DEBUG_STEP_INTERPRETER, ", "+                                                    \"Step Into Interpreter Classes\", ", "+                                                    this));", "+    panel.addComponent( new BooleanOptionComponent ( OptionConstants.DEBUG_STEP_DRJAVA, ", "+                                                    \"Step Into DrJava Classes\", ", "+                                                    this));"]}], "num": 24504}