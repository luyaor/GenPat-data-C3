{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ee93452fbe9c8ad4a1b2a33ce3fc241", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1e8405f15d96ce81921db4e3fe178d5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 47, "signatureBeforeChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "signatureAfterChange": "   final public FormalParameter varArgsFormalParameter() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case FINAL:", "-      f = jj_consume_token(FINAL);", "-      break;", "-    default:", "-      jj_la1[36] = jj_gen;", "-      ;", "-    }", "-    typ = type();", "-    jj_consume_token(VAR_ARGS);", "-    id = jj_consume_token(IDENTIFIER);", "+    try {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case FINAL:", "+        f = jj_consume_token(FINAL);", "+        break;", "+      default:", "+        jj_la1[37] = jj_gen;", "+        ;", "+      }", "+      typ = type();", "+      jj_consume_token(VAR_ARGS);", "+      id = jj_consume_token(IDENTIFIER);", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid variable arguments formal parameter\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdc864c70879929a7c670d2bd2e18fb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "f86dda75531ffcea84892045ae81ebf50612eb98", "commitAfterChange": "8a127e29dd0d7227ac32633c7c5c2f5db2cf4853", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 78, "signatureBeforeChange": "   final public SwitchStatement switchStatement() throws ParseException", "signatureAfterChange": "   final public SwitchStatement switchStatement() throws ParseException", "diff": ["-      jj_consume_token(LPAREN);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LPAREN:", "+        jj_consume_token(LPAREN);", "+        break;", "+      default:", "+        jj_la1[69] = jj_gen;", "+        _errorChar('(');", "+      }", "-      jj_consume_token(LBRACE);", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case LBRACE:", "+        jj_consume_token(LBRACE);", "+        break;", "+      default:", "+        jj_la1[70] = jj_gen;", "+        _errorChar('{');", "+      }", "-          jj_la1[66] = jj_gen;", "+          jj_la1[71] = jj_gen;", "-          jj_la1[67] = jj_gen;", "+          jj_la1[72] = jj_gen;", "-        jj_consume_token(COLON);", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case COLON:", "+          jj_consume_token(COLON);", "+          break;", "+        default:", "+          jj_la1[73] = jj_gen;", "+          _errorChar(':');", "+        }", "-            jj_la1[68] = jj_gen;", "+            jj_la1[74] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6c22382d5a4960c126544dcdb5ba0c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": "   final public FormalParameter formalParameter() throws ParseException", "signatureAfterChange": "   final public FormalParameter formalParameter() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case FINAL:", "-      f = jj_consume_token(FINAL);", "-      break;", "-    default:", "-      jj_la1[34] = jj_gen;", "-      ;", "-    }", "-    typ = type();", "-    id = jj_consume_token(IDENTIFIER);", "-    label_14:", "-    while (true) {", "+    try {", "-      case LBRACKET:", "-        ;", "+      case FINAL:", "+        f = jj_consume_token(FINAL);", "-        break label_14;", "+        ;", "-      jj_consume_token(LBRACKET);", "-      jj_consume_token(RBRACKET);", "+      typ = type();", "+      id = jj_consume_token(IDENTIFIER);", "+      label_14:", "+      while (true) {", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LBRACKET:", "+          ;", "+          break;", "+        default:", "+          jj_la1[36] = jj_gen;", "+          break label_14;", "+        }", "+        jj_consume_token(LBRACKET);", "+        jj_consume_token(RBRACKET);", "-    }", "+      }", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid formal parameter\");", "+    }"]}], "num": 26758}