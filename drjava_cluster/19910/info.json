{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7adfd3ee081a98cfacb7c67ee62a9a73", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f9ae6ccd939d2181f4fce54046f988d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public Object visit(WhileStatement node)", "signatureAfterChange": "   public Node visit(WhileStatement node)", "diff": ["+   */", "+  public Node visit(WhileStatement node) {", "+    // Visits the components of this node", "+    Node n = node.getCondition();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCondition((Expression)o);", "+    }", "+    n = node.getBody();", "+    o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setBody(o);", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(WhileStatement node) {", "-        // Visits the components of this node", "-\tNode   n = node.getCondition();", "-        Object o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setCondition((Expression)o);", "-        }", "-\t", "-\tn = node.getBody();", "-        o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setBody((Node)o);", "-        }", "-        return null;", "-    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74d190bfe9fa651939150ba6d8d23794", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/NameVisitor.java", "commitBeforeChange": "5df4e785713703c5888db4cb5ec4317420920fff", "commitAfterChange": "14b25d4149524a90a31159ece6ef4294e14d0609", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public Object visit(DoStatement node)", "signatureAfterChange": "   public Node visit(DoStatement node)", "diff": ["+   */", "+  public Node visit(DoStatement node) {", "+    // Visits the components of this node", "+    Node n = node.getCondition();", "+    Node o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setCondition((Expression)o);", "+    }", "+    ", "+    n = node.getBody();", "+    o = n.acceptVisitor(this);", "+    if (o != null) {", "+      rejectReferenceType(o,n);", "+      node.setBody(o);  ", "+    }", "+    return null;", "+  }", "-     */", "-    public Object visit(DoStatement node) {", "-        // Visits the components of this node", "-\tNode   n = node.getCondition();", "-        Object o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setCondition((Expression)o);", "-        }", "-\t", "-\tn = node.getBody();", "-        o = n.acceptVisitor(this);", "-        if (o != null) {", "-            if (o instanceof ReferenceType) {", "-                throw new ExecutionError(\"malformed.expression\", n);", "-\t    }", "-\t    node.setBody((Node)o);", "-        }", "-        return null;", "-    }"]}], "num": 19910}