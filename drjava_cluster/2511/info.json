{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c42d14a6fb095549c242dd943a054a64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eaa77e22a0949369ac0249614650b7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "de5d6cb8095b8316a5027b98971107ba8d8608ac", "commitAfterChange": "9b0fcbb3228b9af9991188ef0db212c58aa3b9cb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "   public String getQualifiedClassName()", "signatureAfterChange": "   public String getQualifiedClassName() throws ClassNameNotFoundException", "diff": ["-  public String getQualifiedClassName() {", "+  public String getQualifiedClassName() throws ClassNameNotFoundException {", "+    return _getPackageQualifier() + getFirstTopLevelClassName();", "+  }", "-    String className = \"\";", "-      className = packageName + \".\";", "-    className += this.getClassName();", "-    return className;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a78c70610ff68fd0252c27c77515b11d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/FindReplaceMachine.java", "commitBeforeChange": "db8f0cb26e31432f350747ff5cceb39c84bddf2e", "commitAfterChange": "09ee5df535fa7711165b559136b85b4d08379671", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 26, "signatureBeforeChange": "   private int _replaceAllInCurrentDoc()", "signatureAfterChange": "   private int _replaceAllInCurrentDoc()", "diff": ["+  private int _replaceAllInCurrentDoc() {", "+//    System.err.println(\"_replaceAllInCurrentDoc() called; _doc = [\" + _doc.getText() + \"]\");", "+//    _doc.modifyLock();  // deadlocks because our implementation does not allow a thread with the writeLock to perform a readLock!", "+    try {", "+      if (_isForward) setPosition(0);", "+      else setPosition(_doc.getLength());", "+      ", "+      int count = 0;", "+      FindResult fr = findNext();  // find next match in current doc   ", "+//      Utilities.show(fr + \" returned by call on findNext()\");", "+      ", "+      while (! fr.getWrapped()) {", "+        replaceCurrent();", "+        count++;", "+//        Utilities.show(\"Found \" + count + \" occurrences. Calling findNext() inside loop\");", "+        fr = findNext();           // find next match in current doc", "+//        Utilities.show(\"Call on findNext() returned \" + fr.toString() + \"in doc '\" + _doc.getText() + \"'\");", "+    finally { /* _doc.modifyUnlock(); */ }", "-   */", "-  private int _replaceAllInCurrentDoc() {", "-    _doc.acquireReadLock();", "-    try {", "-      if (!_searchBackwards) {", "-        _start = _doc.createPosition(0);", "-        setPosition(0);", "-      }", "-      else {", "-        _start = _doc.createPosition(_doc.getLength());", "-        setPosition(_doc.getLength());", "-      }", "-    }", "-    catch (BadLocationException e) { throw new UnexpectedException(e); }", "-    finally { _doc.releaseReadLock(); }", "-    int count = 0;", "-    FindResult fr = findNext();", "-    _doc = fr.getDocument();", "-", "-    while (!fr.getWrapped()) {", "-      replaceCurrent();", "-      count++;", "-      fr = findNext();", "-      _doc = fr.getDocument();", "-    }", "-    return count;", "-  }"]}], "num": 2511}