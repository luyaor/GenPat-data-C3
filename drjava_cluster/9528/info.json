{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "334bdb29a1900aaf040a6492c0482617", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ac382fb1a312360eab3d1cd4407df8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JUnitPanel.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public synchronized void testStarted(String name)", "signatureAfterChange": "     public synchronized void testStarted(String name)", "diff": ["-      if (fullName.equals(JUNIT_WARNING)) {", "-        return;", "-      }", "+      if (fullName.equals(JUNIT_WARNING)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb7afe825468c73fee0a846aeb46127", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/JavadocDialog.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   private boolean _isPositiveResult()", "signatureAfterChange": "   private boolean _isPositiveResult()", "diff": ["-   */", "+  /** Returns whether the JOptionPane currently has the OK_OPTION result. */", "-    else {", "-      return false;", "-    }", "+    else return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68de3072890edff31b61cd210f33d179", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/MainJVM.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "   public void setPrivateAccessible(boolean allow)", "signatureAfterChange": "   public void setPrivateAccessible(boolean allow)", "diff": ["-   */", "+  /** Sets the interpreter to allow access to private members. */", "-    if (!_enabled) {", "-      return;", "-    }", "+    if (!_enabled) return;", "-    try {", "-      _interpreterJVM().setPrivateAccessible(allow);", "-    }", "-    catch (RemoteException re) {", "-      _threwException(re);", "-    }", "+    try { _interpreterJVM().setPrivateAccessible(allow); }", "+    catch (RemoteException re) { _threwException(re); }"]}], "num": 9528}