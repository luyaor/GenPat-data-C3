{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "278e43900dbe26b093769527ffc00415", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07e94b1f7af64771b1fbe0c185404f19", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ConfigFrame.java", "commitBeforeChange": "efcb480f108037d7c0b99dc2961b03df4f014419", "commitAfterChange": "7f24fc05ac677df06d9826a05db0243e50dd0b59", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   private void _setupMiscPanel(ConfigPanel panel)", "signatureAfterChange": "   private void _setupMiscPanel(ConfigPanel panel)", "diff": ["-    addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.NEW_VERSION_NOTIFICATION,", "-                                                              \"Check for new versions?\", this,", "-                                                              \"Whether DrJava should check for new versions on drjava.org.\"));", "+    addOptionComponent(panel, ", "+                       new ForcedChoiceOptionComponent(OptionConstants.NEW_VERSION_NOTIFICATION,", "+                                                       \"Check for new versions?\", this,", "+                                                       \"Whether DrJava should check for new versions on drjava.org.\"));", "-    addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.MASTER_JVM_XMX, \"Maximum Heap Memory for Main JVM in MB\", this,", "-                                                 \"The maximum heap the Main JVM can use. Select blank for default.\"));", "-    addOptionComponent(panel, new StringOptionComponent(OptionConstants.MASTER_JVM_ARGS, \"JVM Args for Main JVM\", this,", "+    addOptionComponent(panel, ", "+                       new ForcedChoiceOptionComponent(OptionConstants.MASTER_JVM_XMX, ", "+                                                       \"Maximum Heap Size for Main JVM in MB\", ", "+                                                       this,", "+                                                       \"The maximum heap the Main JVM can use. Select blank for default.\"));", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.MASTER_JVM_ARGS, \"JVM Args for Main JVM\", ", "+                                                 this,", "-    addOptionComponent(panel, new ForcedChoiceOptionComponent(OptionConstants.SLAVE_JVM_XMX, \"Maximum Heap Memory for Interactions JVM in MB\", this,", "-                                                 \"The maximum heap the Interactions JVM can use. Select blank for default\"));", "-    addOptionComponent(panel, new StringOptionComponent(OptionConstants.SLAVE_JVM_ARGS, \"JVM Args for Interactions JVM\", this,", "+    addOptionComponent(panel, ", "+                       new ForcedChoiceOptionComponent(OptionConstants.SLAVE_JVM_XMX, ", "+                                                       \"Maximum Heap Size for Interactions JVM in MB\", ", "+                                                       this,", "+                                                       \"The maximum heap the Interactions JVM can use. Select blank for default\"));", "+    addOptionComponent(panel, ", "+                       new StringOptionComponent(OptionConstants.SLAVE_JVM_ARGS, \"JVM Args for Interactions JVM\", ", "+                                                 this,", "-                                                         \"Maximum Size of Browser History\", this,", "+                                                         \"Maximum Size of Browser History\", ", "+                                                         this,", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.AUTO_CLOSE_COMMENTS, \"Automatically Close Block Comments\", this,", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.AUTO_CLOSE_COMMENTS, \"Automatically Close Block Comments\", ", "+                                                  this,", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.RUN_WITH_ASSERT, \"Enable Assert Statement Execution\", this,", "-                                                  \"<html>Whether to execute <code>assert</code> statements in classes running in the interactions pane.</html>\"));", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep Emacs-style Backup Files\", this,", "+    String runWithAssertMsg = ", "+      \"<html>Whether to execute <code>assert</code> statements in classes running in the interactions pane.</html>\";", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.RUN_WITH_ASSERT, \"Enable Assert Statement Execution\", ", "+                                                  this,", "+                                                  runWithAssertMsg));", "+    ", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.BACKUP_FILES, \"Keep Emacs-style Backup Files\", ", "+                                                  this,", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.RESET_CLEAR_CONSOLE, \"Clear Console After Interactions Reset\", this,", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.RESET_CLEAR_CONSOLE, \"Clear Console After Interactions Reset\", ", "+                                                  this,", "-    /* Disabled until this is implemented:", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.ALLOW_PRIVATE_ACCESS, \"Allow Access of Private Members in Interactions Pane\", this,", "-                                                  \"Whether to allow users to access private (and protected) fields and methods.\"));", "-    */", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.SHOW_SOURCE_WHEN_SWITCHING, \"Show sample of source code when fast switching\", this,", "+    // Disabled until this is implemented:", "+//    addOptionComponent(panel, ", "+//                       new BooleanOptionComponent(OptionConstants.ALLOW_PRIVATE_ACCESS, ", "+//                                                  \"Allow Access of Private Members in Interactions Pane\", ", "+//                                                  this,", "+//                                                  \"Whether to allow users to access private (and protected) fields and methods.\"));", "+", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.SHOW_SOURCE_WHEN_SWITCHING, ", "+                                                  \"Show sample of source code when fast switching\", ", "+                                                  this,", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.FORCE_TEST_SUFFIX, ", "-                                                  \"Require test classes in projects to end in \\\"Test\\\"\", this,", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.FORCE_TEST_SUFFIX, ", "+                                                  \"Require test classes in projects to end in \\\"Test\\\"\", ", "+                                                  this,", "-    addOptionComponent(panel, new BooleanOptionComponent(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE, ", "-                                                  \"Put the focus in the definitions pane after find/replace\", this,", "-                                                  \"<html>Whether to put the focus in the definitions pane after doing a find or replace operation.<br>\"+", "+    addOptionComponent(panel, ", "+                       new BooleanOptionComponent(OptionConstants.FIND_REPLACE_FOCUS_IN_DEFPANE, ", "+                                                  \"Focus on the definitions pane after find/replace\", ", "+                                                  this,", "+                                                  \"<html>Whether to focus on the definitions pane after executing a find/replace operation.<br>\" +", "-                                                  \"can be remote controlled and told to open files.<br>\"+", "-                                                  \"(Changes will not be applied until DrJava is restarted.)</html>\"));", "+                                                         \"can be remote controlled and told to open files.<br>\"+", "+                                                         \"(Changes will not be applied until DrJava is restarted.)</html>\"));", "-                                                  \"Remote Control Port\", this,", "-                                                  \"<html>A running instance of DrJava can be remote controlled and<br>\"+", "-                                                  \"told to open files. This specifies the port used for remote control.</html>\"));", "+                                                         \"Remote Control Port\", this,", "+                                                         \"<html>A running instance of DrJava can be remote controlled and<br>\"+", "+                                                         \"told to open files. This specifies the port used for remote control.</html>\"));", "-                                                  \"Enable the \\\"Auto Import\\\" Dialog\", this,", "-                                                  \"<html>Whether DrJava should open the \\\"Auto Import\\\" dialog when<br>\"+", "-                                                  \"an undefined class is encountered in the Interactions Pane.</html>\"));", "+                                                         \"Enable the \\\"Auto Import\\\" Dialog\", this,", "+                                                         \"<html>Whether DrJava should open the \\\"Auto Import\\\" dialog when<br>\"+", "+                                                         \"an undefined class is encountered in the Interactions Pane.</html>\"));", "-                                                  \"Follow File Delay\", this,", "-                                                  \"<html>The delay in milliseconds that has to elapse before DrJava will check<br>\"+", "-                                                  \"if a file that is being followed or the output of an external process has changed.</html>\"));", "+                                                         \"Follow File Delay\", this,", "+                                                         \"<html>The delay in milliseconds that has to elapse before DrJava will check<br>\"+", "+                                                         \"if a file that is being followed or the output of an external process has changed.</html>\"));", "-                                                  \"Maximum Lines in \\\"Follow File\\\" Window\", this,", "-                                                  \"<html>The maximum number of lines to keep in a \\\"Follow File\\\"<br>\"+", "-                                                  \"or \\\"External Process\\\" pane. Enter 0 for unlimited.</html>\"));", "+                                                         \"Maximum Lines in \\\"Follow File\\\" Window\", this,", "+                                                         \"<html>The maximum number of lines to keep in a \\\"Follow File\\\"<br>\"+", "+                                                         \"or \\\"External Process\\\" pane. Enter 0 for unlimited.</html>\"));", "-", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e7daf23339b8ce056d35d404e13580", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/jar/JarBuilder.java", "commitBeforeChange": "f15def3e7ab21266c84052df071b37f147d8ecf6", "commitAfterChange": "ab45bfd3fc5ca53de7db1894bd0678c87e67670b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   private String makeName(String parent, String name)", "signatureAfterChange": "   private String makeName(String parent, String name)", "diff": ["+    String sep = \"/\"; // NOTE: This can be a '/' since it is a path in the jar file itself", "-    if (parent.endsWith(\"/\"))", "+    if (parent.endsWith(sep))", "-    return parent + \"/\" + name;", "+    return parent + sep + name;"]}], "num": 3839}