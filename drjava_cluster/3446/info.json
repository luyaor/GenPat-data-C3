{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "208db3746e7a860b48a494cc6277fe0b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71ab598e86197817bd8ef844a0a4d8b3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   synchronized void scrollToSource(LocatableEvent e)", "signatureAfterChange": "   synchronized void scrollToSource(LocatableEvent e)", "diff": ["-      Vector<File> sourcepath = ", "-        DrJava.CONFIG.getSetting(OptionConstants.DEBUG_SOURCEPATH);", "-      File f = _model.getSourceFileFromPaths(filename, sourcepath);", "-      //File f = null;", "+      // If not on sourcepath, check source root set (open files)", "+      File[] sourceRoots = _model.getSourceRootSet();", "+      Vector<File> roots = new Vector<File>();", "+      for (int i=0; i < sourceRoots.length; i++) {", "+        roots.addElement(sourceRoots[i]);", "+      }", "+      File f = _model.getSourceFileFromPaths(filename, roots);", "-        // If not on sourcepath, check source root set (open files)", "-        File[] sourceRoots = _model.getSourceRootSet();", "-        Vector<File> roots = new Vector<File>();", "-        for (int i=0; i < sourceRoots.length; i++) {", "-          roots.addElement(sourceRoots[i]);", "-        }", "-        f = _model.getSourceFileFromPaths(filename, roots);", "+        Vector<File> sourcepath = ", "+          DrJava.CONFIG.getSetting(OptionConstants.DEBUG_SOURCEPATH);", "+        f = _model.getSourceFileFromPaths(filename, sourcepath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e6c40681a5f0cd454dea5e5bca1ebc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b20865d9a2ac76baa972c14a0f6e88b4dafc8ed0", "commitAfterChange": "97472913efee2f558cb839d549c0975d61cae86a", "methodNumberBeforeChange": 690, "methodNumberAfterChange": 677, "signatureBeforeChange": "    final private boolean jj_3R_181()", "signatureAfterChange": "    final private boolean jj_3R_181()", "diff": ["-    if (jj_3R_214()) {", "+    if (jj_3R_215()) {", "-    if (jj_3R_215()) return true;", "+    if (jj_3R_216()) return true;", "-      if (jj_3R_216()) { jj_scanpos = xsp; break; }", "+      if (jj_3R_217()) { jj_scanpos = xsp; break; }"]}], "num": 3446}