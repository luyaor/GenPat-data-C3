{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4e03185d1fe294734106cea3520ca9b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1512426b9d3a30a82958dea3b8b93f66", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "commitAfterChange": "850fd7d9c2b07bd8d8874ff715e83f1d390c4b0b", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 107, "signatureBeforeChange": "   final public Expression allocationExpression() throws ParseException", "signatureAfterChange": "   final public Expression allocationExpression() throws ParseException", "diff": ["-    List<IdentifierToken> ls;", "-    if (jj_2_28(2)) {", "+    if (jj_2_29(2)) {", "-        ls = name();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case LESS:", "-          typeArgs = TypeArguments();", "-          break;", "-        default:", "-          jj_la1[104] = jj_gen;", "-          ;", "-        }", "-       IdentifierToken f  = ls.get(0);", "-       IdentifierToken l  = ls.get(ls.size()-1);", "-       if( typeArgs == null ){", "-         pt = new ReferenceType(ls,", "-                                filename,", "-                                f.beginLine(), f.beginColumn(),", "-                                l.endLine(),   l.endColumn());", "-       } else {", "-         pt = new GenericReferenceType(ls,", "-                                       filename,", "-                                       f.beginLine(), f.beginColumn(),", "-                                       l.endLine(), l.endColumn(),", "-                                       typeArgs);", "-       }", "+        pt = ReferenceTypeName();", "-            jj_la1[105] = jj_gen;", "+            jj_la1[104] = jj_gen;", "-          jj_la1[106] = jj_gen;", "+          jj_la1[105] = jj_gen;", "-        jj_la1[107] = jj_gen;", "+        jj_la1[106] = jj_gen;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da45180dad3010dae03d164f1b4ff674", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "b29182d94c1064d5f838746a211b47a58b37d210", "commitAfterChange": "794ab3843272bc249648b9e2c1b10b791437e615", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 106, "signatureBeforeChange": "   final public Expression allocationExpression() throws ParseException", "signatureAfterChange": "   final public Expression allocationExpression() throws ParseException", "diff": ["+    List<Type> typeArgs = null;", "+        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+        case LESS:", "+          typeArgs = TypeArguments();", "+          break;", "+        default:", "+          jj_la1[104] = jj_gen;", "+          ;", "+        }", "-       pt = new ReferenceType(ls,", "-                              filename,", "-                              f.beginLine(), f.beginColumn(),", "-                              l.endLine(),   l.endColumn());", "+       if( typeArgs == null ){", "+         pt = new ReferenceType(ls,", "+                                filename,", "+                                f.beginLine(), f.beginColumn(),", "+                                l.endLine(),   l.endColumn());", "+       } else {", "+         pt = new GenericReferenceType(ls,", "+                                       filename,", "+                                       f.beginLine(), f.beginColumn(),", "+                                       l.endLine(), l.endColumn(),", "+                                       typeArgs);", "+       }", "-            jj_la1[100] = jj_gen;", "+            jj_la1[105] = jj_gen;", "-          jj_la1[101] = jj_gen;", "+          jj_la1[106] = jj_gen;", "-        jj_la1[102] = jj_gen;", "+        jj_la1[107] = jj_gen;"]}], "num": 19514}