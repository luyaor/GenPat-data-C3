{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57635541b786d39dfc4ebdb7d250de86", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1e1bdda6adc55e3770ae9db51cb3a7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/FileOps.java", "commitBeforeChange": "065b1e3954d46e1086ba2f867744163daf14462d", "commitAfterChange": "54ea28bb82d3e1f546423de8d56e416e257bade5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public static LinkedList<String> packageExplore(String prefix, File root)", "signatureAfterChange": "   public static LinkedList<String> packageExplore(String prefix, File root)", "diff": ["-      for (File dir: subDirectories) {", "-        PrefixAndFile paf;", "+      if (subDirectories!=null) { // listFiles may return null if there's an IO error", "+        for (File dir: subDirectories) {", "+          PrefixAndFile paf;", "-        if (current.prefix.equals(\"\")) paf = new PrefixAndFile(dir.getName(), dir);", "-        else  paf = new PrefixAndFile(current.prefix + \".\" + dir.getName(), dir);", "-        working.push(paf);", "+          if (current.prefix.equals(\"\")) paf = new PrefixAndFile(dir.getName(), dir);", "+          else  paf = new PrefixAndFile(current.prefix + \".\" + dir.getName(), dir);", "+          working.push(paf);", "+        }", "-      //Only add package names if they have java files and are not the root package", "-      if (javaFiles.length != 0 && !current.prefix.equals(\"\")) {", "-        output.add(current.prefix);", "+      if (javaFiles!=null) { // listFiles may return null if there's an IO error", "+        //Only add package names if they have java files and are not the root package", "+        if (javaFiles.length != 0 && !current.prefix.equals(\"\")) {", "+          output.add(current.prefix);", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb6fcc586203a329dc2064f47108b8fc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "e64e0f2febfc163cfb04eb35ce1134673166ab50", "commitAfterChange": "71b4e72a1b4feef5a2621bd09e829e0108d8d893", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public synchronized DefinitionsDocument getDocument()        throws IOException, FileMovedException", "signatureAfterChange": "     public synchronized DefinitionsDocument getDocument()        throws IOException, FileMovedException", "diff": ["-      if (_stat != FIRST_IN_LRU && ", "-          _stat != UNMANAGED) {", "-        makeMeFirst();", "-      }", "-      else if (_stat == UNMANAGED && _doc !=null && ", "-               !_doc.isModifiedSinceSave()) {", "-        _stat = NOT_IN_LRU;", "-      }", "+      if (_stat != FIRST_IN_LRU && _stat != UNMANAGED) makeMeFirst();", "+      else if (_stat == UNMANAGED && _doc !=null && !_doc.isModifiedSinceSave()) _stat = NOT_IN_LRU;", "-      if (_doc != null) {", "-        return _doc;", "+      if (_doc != null) return _doc;", "+  ", "+      try {", "+        _doc = _rec.make();", "+        if (_doc == null) throw new IllegalStateException(\"the reconstructor made a null document\");", "-      else {", "-        try {", "-          _doc = _rec.make();", "-          if (_doc == null) ", "-            throw new IllegalStateException(\"the reconstructor made a null document\");", "-        }", "-        catch(BadLocationException e) {", "-          throw new UnexpectedException(e);", "-        }", "-        return _doc;", "-      }", "+      catch(BadLocationException e) { throw new UnexpectedException(e); }", "+      return _doc;"]}], "num": 22971}