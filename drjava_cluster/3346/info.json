{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8a06313266b4a5457d0f723bc07b0e7d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee645db41c78b8a74e7a594a0667c5d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugContextTest.java", "commitBeforeChange": "40fa5284e8c663707faeb41ae0125801be606b5b", "commitAfterChange": "e116917927a60a297ec1454565818ede1b4cec2d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testNonStaticWatches() throws Exception", "signatureAfterChange": "   public void testNonStaticWatches() throws Exception", "diff": ["-    ", "+", "-    ", "+", "-    ", "+", "-    assertEquals(\"watch name incorrect\", \"foo\", watches.elementAt(0).getName());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.elementAt(2).getName());", "-    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.elementAt(3).getName());", "-    assertEquals(\"watch name incorrect\", \"asdf\", watches.elementAt(4).getName());", "-    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "-    assertEquals(\"watch value incorrect\", \"6\", watches.elementAt(0).getValue());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "-    assertEquals(\"watch value incorrect\", \"10\", watches.elementAt(2).getValue());", "-    assertEquals(\"watch value incorrect\", \"12\", watches.elementAt(3).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(4).getValue());", "-    assertEquals(\"watch value incorrect\", \"null\", watches.elementAt(5).getValue());", "-    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.elementAt(5).getType());", "+    assertEquals(\"watch name incorrect\", \"foo\", watches.get(0).getName());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.get(2).getName());", "+    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.get(3).getName());", "+    assertEquals(\"watch name incorrect\", \"asdf\", watches.get(4).getName());", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.get(5).getName());", "+    assertEquals(\"watch value incorrect\", \"6\", watches.get(0).getValue());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "+    assertEquals(\"watch value incorrect\", \"10\", watches.get(2).getValue());", "+    assertEquals(\"watch value incorrect\", \"12\", watches.get(3).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(4).getValue());", "+    assertEquals(\"watch value incorrect\", \"null\", watches.get(5).getValue());", "+    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.get(5).getType());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"0\", watches.elementAt(1).getValue());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"0\", watches.get(1).getValue());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch value incorrect\", \"8\", watches.elementAt(1).getValue());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch value incorrect\", \"8\", watches.get(1).getValue());", "-   ", "+", "-    ", "+", "-    ", "+", "-    ", "+", "-    assertEquals(\"watch name incorrect\", \"foo\", watches.elementAt(0).getName());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.elementAt(2).getName());", "-    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.elementAt(3).getName());", "-    assertEquals(\"watch name incorrect\", \"asdf\", watches.elementAt(4).getName());", "-    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "-    assertEquals(\"watch value incorrect\", \"7\", watches.elementAt(0).getValue());", "-    assertEquals(\"watch value incorrect\", \"9\", watches.elementAt(1).getValue());", "-    assertEquals(\"watch value incorrect\", \"11\", watches.elementAt(2).getValue());", "-    assertEquals(\"watch value incorrect\", \"13\", watches.elementAt(3).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(4).getValue());", "-    assertEquals(\"watch value incorrect\", \"null\", watches.elementAt(5).getValue());", "-    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.elementAt(5).getType());", "-    ", "+    assertEquals(\"watch name incorrect\", \"foo\", watches.get(0).getName());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.get(2).getName());", "+    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.get(3).getName());", "+    assertEquals(\"watch name incorrect\", \"asdf\", watches.get(4).getName());", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.get(5).getName());", "+    assertEquals(\"watch value incorrect\", \"7\", watches.get(0).getValue());", "+    assertEquals(\"watch value incorrect\", \"9\", watches.get(1).getValue());", "+    assertEquals(\"watch value incorrect\", \"11\", watches.get(2).getValue());", "+    assertEquals(\"watch value incorrect\", \"13\", watches.get(3).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(4).getValue());", "+    assertEquals(\"watch value incorrect\", \"null\", watches.get(5).getValue());", "+    assertEquals(\"watch type incorrect\", \"java.lang.String\", watches.get(5).getType());", "+", "-    ", "+", "-    assertEquals(\"watch name incorrect\", \"foo\", watches.elementAt(0).getName());", "-    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.elementAt(1).getName());", "-    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.elementAt(2).getName());", "-    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.elementAt(3).getName());", "-    assertEquals(\"watch name incorrect\", \"asdf\", watches.elementAt(4).getName());", "-    assertEquals(\"watch name incorrect\", \"nullString\", watches.elementAt(5).getName());", "-    assertEquals(\"watch value incorrect\", \"7\", watches.elementAt(0).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(1).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(2).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(3).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(4).getValue());", "-    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.elementAt(5).getValue());", "-    assertEquals(\"watch type incorrect\", DebugWatchData.NO_TYPE, watches.elementAt(5).getType());", "-    ", "+    assertEquals(\"watch name incorrect\", \"foo\", watches.get(0).getName());", "+    assertEquals(\"watch name incorrect\", \"innerFoo\", watches.get(1).getName());", "+    assertEquals(\"watch name incorrect\", \"innerInnerFoo\", watches.get(2).getName());", "+    assertEquals(\"watch name incorrect\", \"innerMethodFoo\", watches.get(3).getName());", "+    assertEquals(\"watch name incorrect\", \"asdf\", watches.get(4).getName());", "+    assertEquals(\"watch name incorrect\", \"nullString\", watches.get(5).getName());", "+    assertEquals(\"watch value incorrect\", \"7\", watches.get(0).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(1).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(2).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(3).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(4).getValue());", "+    assertEquals(\"watch value incorrect\", DebugWatchData.NO_VALUE, watches.get(5).getValue());", "+    assertEquals(\"watch type incorrect\", DebugWatchData.NO_TYPE, watches.get(5).getType());", "+", "-    debugListener.assertCurrThreadDiedCount(0);    ", "-    ", "+    debugListener.assertCurrThreadDiedCount(0);", "+", "-    assertEquals(\"watch name incorrect\", \"localVar\", watches.elementAt(6).getName());", "-    assertEquals(\"watch value incorrect\", \"11\", watches.elementAt(6).getValue());", "-    ", "+    assertEquals(\"watch name incorrect\", \"localVar\", watches.get(6).getName());", "+    assertEquals(\"watch value incorrect\", \"11\", watches.get(6).getValue());", "+", "-    ", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d83edc5aa7537129b132df79d5c5be", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/ExecuteExternalDialog.java", "commitBeforeChange": "51e8f4cbce06d140e9a09dd38237b848b4f27d8a", "commitAfterChange": "d350dd729092f66f8ad737ae377c54d2ad394fbf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "      private JPanel makeCommandPane()", "signatureAfterChange": "      private JPanel makeCommandPane()", "diff": ["-            _commandDrJavaJarFileLine.requestFocus();", "+            _commandEnclosingFileLine.requestFocus();", "-    // .drjavajar file", "+    // enclosing .djapp file", "-    JLabel drJavaJarFileLabel = new JLabel(\".drjavajar file:\");", "-    gridbag.setConstraints(drJavaJarFileLabel, c);", "-    main.add(drJavaJarFileLabel);", "+    JLabel enclosingFileLabel = new JLabel(\"Enclosing .djapp file:\");", "+    gridbag.setConstraints(enclosingFileLabel, c);", "+    main.add(enclosingFileLabel);", "-    _commandDrJavaJarFileLine = new JTextPane();", "+    _commandEnclosingFileLine = new JTextPane();", "-    _commandDrJavaJarFileLine.addKeyListener(new KeyListener() {", "+    _commandEnclosingFileLine.addKeyListener(new KeyListener() {", "-    JScrollPane commandDrJavaJarFileLineSP = new JScrollPane(_commandDrJavaJarFileLine);", "-    commandDrJavaJarFileLineSP.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);", "-    gridbag.setConstraints(commandDrJavaJarFileLineSP, c);", "-    main.add(commandDrJavaJarFileLineSP);", "+    JScrollPane commandEnclosingFileLineSP = new JScrollPane(_commandEnclosingFileLine);", "+    commandEnclosingFileLineSP.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);", "+    gridbag.setConstraints(commandEnclosingFileLineSP, c);", "+    main.add(commandEnclosingFileLineSP);", "-    _commandDrJavaJarFileBtn = new JButton(\"...\");", "-    _commandDrJavaJarFileBtn.addActionListener(new ActionListener() {", "-      public void actionPerformed(ActionEvent e) { chooseFile(_commandDrJavaJarFileLine); }", "+    _commandEnclosingFileBtn = new JButton(\"...\");", "+    _commandEnclosingFileBtn.addActionListener(new ActionListener() {", "+      public void actionPerformed(ActionEvent e) { chooseFile(_commandEnclosingFileLine); }", "-    gridbag.setConstraints(_commandDrJavaJarFileBtn, c);", "-    main.add(_commandDrJavaJarFileBtn);", "+    gridbag.setConstraints(_commandEnclosingFileBtn, c);", "+    main.add(_commandEnclosingFileBtn);", "-    JLabel commandDrJavaJarFileLinePreviewLabel = new JLabel(\".drjavajar file preview:\");", "-    commandDrJavaJarFileLinePreviewLabel.setToolTipText(STALE_TOOLTIP);", "-    gridbag.setConstraints(commandDrJavaJarFileLinePreviewLabel, c);", "-    main.add(commandDrJavaJarFileLinePreviewLabel);", "+    JLabel commandEnclosingFileLinePreviewLabel = new JLabel(\"Enclosing .djapp file preview:\");", "+    commandEnclosingFileLinePreviewLabel.setToolTipText(STALE_TOOLTIP);", "+    gridbag.setConstraints(commandEnclosingFileLinePreviewLabel, c);", "+    main.add(commandEnclosingFileLinePreviewLabel);", "-    _commandDrJavaJarFileLinePreview = new JTextPane();", "-    _commandDrJavaJarFileLinePreview.setToolTipText(STALE_TOOLTIP);", "-    _commandDrJavaJarFileLineDoc = (StyledDocument)_commandDrJavaJarFileLinePreview.getDocument();", "+    _commandEnclosingFileLinePreview = new JTextPane();", "+    _commandEnclosingFileLinePreview.setToolTipText(STALE_TOOLTIP);", "+    _commandEnclosingFileLineDoc = (StyledDocument)_commandEnclosingFileLinePreview.getDocument();", "-    _commandDrJavaJarFileLinePreview.setEditable(false);", "-    _commandDrJavaJarFileLinePreview.setBackground(Color.LIGHT_GRAY);", "-    _commandDrJavaJarFileLinePreview.setSelectedTextColor(Color.LIGHT_GRAY);", "-    JScrollPane commandDrJavaJarFileLinePreviewSP = new JScrollPane(_commandDrJavaJarFileLinePreview);", "-    commandDrJavaJarFileLinePreviewSP.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);", "-    gridbag.setConstraints(commandDrJavaJarFileLinePreviewSP, c);", "-    main.add(commandDrJavaJarFileLinePreviewSP);", "+    _commandEnclosingFileLinePreview.setEditable(false);", "+    _commandEnclosingFileLinePreview.setBackground(Color.LIGHT_GRAY);", "+    _commandEnclosingFileLinePreview.setSelectedTextColor(Color.LIGHT_GRAY);", "+    JScrollPane commandEnclosingFileLinePreviewSP = new JScrollPane(_commandEnclosingFileLinePreview);", "+    commandEnclosingFileLinePreviewSP.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);", "+    gridbag.setConstraints(commandEnclosingFileLinePreviewSP, c);", "+    main.add(commandEnclosingFileLinePreviewSP);", "-    // update the preview of the actual .drjavajar file post substitution", "-    _drJavaJarFileDocumentListener = new DocumentListener() {", "+    // update the preview of the actual enclosing .djapp file post substitution", "+    _enclosingFileDocumentListener = new DocumentListener() {", "-          _commandDrJavaJarFileLineDoc.remove(0,_commandDrJavaJarFileLineDoc.getLength());", "-          String text = StringOps.replaceVariables(_commandDrJavaJarFileLine.getText(), _props, PropertyMaps.GET_LAZY);", "-          _commandDrJavaJarFileLineDoc.insertString(0, StringOps.unescapeFileName(text), null);", "+          _commandEnclosingFileLineDoc.remove(0,_commandEnclosingFileLineDoc.getLength());", "+          String text = StringOps.replaceVariables(_commandEnclosingFileLine.getText(), _props, PropertyMaps.GET_LAZY);", "+          _commandEnclosingFileLineDoc.insertString(0, StringOps.unescapeFileName(text), null);", "-          colorVariables(_commandDrJavaJarFileLine,", "+          colorVariables(_commandEnclosingFileLine,", "-    _commandDrJavaJarFileLine.getDocument().addDocumentListener(_drJavaJarFileDocumentListener);", "-    _commandDrJavaJarFileLine.setText(\"\");", "-    _drJavaJarFileDocumentListener.changedUpdate(null);", "+    _commandEnclosingFileLine.getDocument().addDocumentListener(_enclosingFileDocumentListener);", "+    _commandEnclosingFileLine.setText(\"\");", "+    _enclosingFileDocumentListener.changedUpdate(null);"]}], "num": 3346}