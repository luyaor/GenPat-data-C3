{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1478de38c1ae368514997ac0b9960f47", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984f468ac586f56411826db8f27257b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "   public TypeData forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "signatureAfterChange": "   public TypeData forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "diff": ["+    if (_data.isDoublyAnonymous()) {", "+      _addError(_data + \"is a nested anonymous class, which is not supported at any language level\", that);", "+      return null;", "+    }", "-    if ((enclosingType == null) || !assertFound(enclosingType, that.getEnclosing())) {return null; }", "+    if ((enclosingType == null) || ! assertFound(enclosingType, that.getEnclosing())) { return null; }", "+    if (myData == null) return null;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc3c2b52124f789e99108f4d5afaf444", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ExpressionTypeChecker.java", "commitBeforeChange": "95fc34f702728d19ab12beabcddae9a69d422c00", "commitAfterChange": "5607cf775ad2ef70ccd49a101fe31fb06f6903bb", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "   public TypeData forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "signatureAfterChange": "   public TypeData forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "diff": ["-   */", "+    */", "+    if (_data.isDoublyAnonymous()) {", "+      _addError(_data + \"is a nested anonymous class, which is not supported at any language level\", that);", "+      return null;", "+    }", "+      ", "+    if (myData == null) return null;", "-    else {classInstantiationHelper(that, superclass_result);} //use super class here, since it has constructors in it", "+    else classInstantiationHelper(that, superclass_result); //use super class here, since it has constructors in it"]}], "num": 24419}