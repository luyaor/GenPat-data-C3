{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9658d15b3f93df4e21ae324e43abfc88", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2de28e08d8ac496ebdbd8fc1b98e3d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "b43f29e50ad9a747c307023da2022e85812a7a06", "commitAfterChange": "f9bd2a484c4505cc2dff97c8f9bad6e0c712ff50", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "signatureAfterChange": "   public void testDocLocationAfterSwitch() throws BadLocationException", "diff": ["-  /** Tests that the current location of a document is equal to the caret location after documents are switched. */", "+  /** Tests that the current location of a document is equal to the caret Position after switching to another document and back. */", "-    OpenDefinitionsDocument doc = pane.getOpenDefDocument();", "-    doc.insertString(0, \"abcd\", null);", "-    Utilities.invokeAndWait(new Runnable() { public void run() { pane.setCaretPosition(3); } }); ", "-    Utilities.clearEventQueue();  // Empty the event queue of any asynchronous tasks", "+    final OpenDefinitionsDocument doc = pane.getOpenDefDocument();", "+    setDocText(doc.getDocument(), \"abcd\");", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() { ", "+        doc.setCurrentLocation(3); ", "+        pane.setCaretPosition(3);  // The caret is not affected by setCurrentLocation", "+      } ", "+    }); ", "+    assertEquals(\"Location of cursor in old document\", 3, pane.getCaretPosition());", "+    final DefinitionsPane oldPane = pane;", "+    Utilities.clearEventQueue();", "-    ", "+", "+   ", "+    assertEquals(\"Next active pane\", oldPane, curPane);", "-    assertEquals(\"Location of old document\", 3, curDoc.getCurrentLocation());", "+    assertEquals(\"Location of caret in old document\", 3, curPane.getCaretPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0a0e02acdbb79a8776f8adebc92927f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "commitAfterChange": "7816bebb52027e20286d4bdb830f3c6885132322", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "signatureAfterChange": "   public void testSaveClearAndLoadHistory() throws EditDocumentException, IOException, InterruptedException", "diff": ["-  /** Interprets some statements, saves the history, clears the history, then loads  the history. */", "+  /** Interprets some statements, saves the history, clears the history, then loads the history. */", "-    InteractionListener listener = new InteractionListener();", "+    final InteractionListener listener = new InteractionListener();", "-    _model.saveHistory(fs);", "+    safeSaveHistory(fs);", "-    assertEquals(\"contents of saved file\",", "-                 History.HISTORY_FORMAT_VERSION_2 +", "-                 s1 + delim + s2 + delim + s3 + delim,", "+    assertEquals(\"contents of saved file\", History.HISTORY_FORMAT_VERSION_2 + s1 + delim + s2 + delim + s3 + delim,", "-    _model.resetInteractions(_model.getWorkingDirectory());", "-    _model.resetConsole();", "+    Utilities.invokeLater(new Runnable() { ", "+      public void run() { ", "+        _model.resetInteractions(_model.getWorkingDirectory());", "+        _model.resetConsole();", "+      }", "+    });", "-    _model.loadHistory(fs);", "+    safeLoadHistory(fs);", "-//    Utilities.clearEventQueue();", "-    assertEquals(\"Output of loaded history is not correct\",", "-                 \"x = 5\",", "-                 con.getDocText(0, con.getLength()).trim());", "+    assertEquals(\"Output of loaded history is not correct\", \"x = 5\", con.getDocText(0, con.getLength()).trim());", "-    ", "+"]}], "num": 11550}