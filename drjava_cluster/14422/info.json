{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ba54634a77b0399f20c7cb23c003f31", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc583c83e56e7c9afae800248da6eb2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "   public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that)", "diff": ["-  /** Delegate to method in LLV. */", "-  public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that) {", "-    complexAnonymousClassInstantiationHelper(that, _bodyData);", "-    return null;", "-  }", "+  /** Delegate to helper method. */", "+  public Void forComplexAnonymousClassInstantiation(ComplexAnonymousClassInstantiation that) {", "+    SymbolData enclosing = getQualifiedSymbolData(_enclosingClassName);", "+    assert enclosing != null;", "+    complexAnonymousClassInstantiationHelper(that, enclosing);  // TODO: the wrong enclosing context?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a45e5f5c63c540738907c68390a3f650", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/BodyBodyIntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "signatureAfterChange": "   public Void forSimpleAnonymousClassInstantiation(SimpleAnonymousClassInstantiation that)", "diff": ["-  /** Delegate to method in LLV. */", "+  /** Delegate to helper method. */", "-    simpleAnonymousClassInstantiationHelper(that, _bodyData);", "+    SymbolData enclosing = getQualifiedSymbolData(_enclosingClassName);", "+    assert enclosing != null;", "+    simpleAnonymousClassInstantiationHelper(that, enclosing);", "+    return null;", "+  }"]}], "num": 14422}