{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b2a87f056a3a7dc5a17333a408bb80c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ac100ee5d19dc94e8e25061ed8aed30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/NameVisitorExtension.java", "commitBeforeChange": "618768bff43f90070ece892c0517456399e97401", "commitAfterChange": "5df4e785713703c5888db4cb5ec4317420920fff", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(VariableDeclaration node)", "diff": ["-  public Object visit(VariableDeclaration node) {  ", "+  public Node visit(VariableDeclaration node) {  ", "-      Object o = n.acceptVisitor(this);", "+      Node o = n.acceptVisitor(this);", "-        if (o instanceof ReferenceType) {", "-          throw new ExecutionError(\"malformed.expression\", n);", "-        }", "+        rejectReferenceType(o,n);", "-    Class lc = (Class)node.getType().acceptVisitor(_tc);", "+    Class lc = node.getType().acceptVisitor(_tc);", "-      Class rc = (Class)init.acceptVisitor(_tc);", "+      Class rc = init.acceptVisitor(_tc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dccefa46c6242af68df1b998519738f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/NameVisitorExtension.java", "commitBeforeChange": "794ab3843272bc249648b9e2c1b10b791437e615", "commitAfterChange": "e0500d376ebb5f3bac64d9f12397b89fd17c5ef8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public Object visit(VariableDeclaration node)", "signatureAfterChange": "   public Node visit(VariableDeclaration node)", "diff": ["-  public Object visit(VariableDeclaration node) {  ", "+  public Node visit(VariableDeclaration node) {  ", "-      Object o = n.acceptVisitor(this);", "+      Node o = n.acceptVisitor(this);", "-        if (o instanceof ReferenceType) {", "-          throw new ExecutionError(\"malformed.expression\", n);", "-        }", "+        rejectReferenceType(o,n);", "-    Class lc = (Class)node.getType().acceptVisitor(_tc);", "+    Class lc = node.getType().acceptVisitor(_tc);", "-      Class rc = (Class)init.acceptVisitor(_tc);", "+      Class rc = init.acceptVisitor(_tc);"]}], "num": 9600}