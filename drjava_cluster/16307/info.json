{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "601233521812e94983978dfe4e893f53", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "055b7cad385acd4e12a34050856cdaa0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/JLSTypeSystem.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public JLSTypeSystem(Options opt, boolean packCaptureVars, boolean alwaysUseArgumentConstraints,                         boolean waitToUseDeclaredBounds, boolean boxingInMostSpecific)", "signatureAfterChange": "      public JLSTypeSystem(Options opt, boolean packCaptureVars, boolean alwaysUseArgumentConstraints,                         boolean waitToUseDeclaredBounds, boolean boxingInMostSpecific,                         boolean useExplicitTypeArgs, boolean strictClassEquality)", "diff": ["-                        boolean waitToUseDeclaredBounds, boolean boxingInMostSpecific) {", "-    super(opt, boxingInMostSpecific);", "+                        boolean waitToUseDeclaredBounds, boolean boxingInMostSpecific,", "+                        boolean useExplicitTypeArgs, boolean strictClassEquality) {", "+    super(opt, boxingInMostSpecific, useExplicitTypeArgs, strictClassEquality);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ac837db548ba8d3e1724075322de184", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/ExtendedTypeSystem.java", "commitBeforeChange": "be902882edd6ee8f5b7260e86997569bf07255e2", "commitAfterChange": "ead43466202abb204c90f7ee2c316fec230d4415", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public ExtendedTypeSystem(Options opt, boolean packCaptureVars, boolean boxingInMostSpecific)", "signatureAfterChange": "      public ExtendedTypeSystem(Options opt, boolean packCaptureVars, boolean boxingInMostSpecific,                              boolean useExplicitTypeArgs, boolean strictClassEquality)", "diff": ["-  public ExtendedTypeSystem(Options opt, boolean packCaptureVars, boolean boxingInMostSpecific) {", "-    super(opt, boxingInMostSpecific);", "+  public ExtendedTypeSystem(Options opt, boolean packCaptureVars, boolean boxingInMostSpecific,", "+                             boolean useExplicitTypeArgs, boolean strictClassEquality) {", "+    super(opt, boxingInMostSpecific, useExplicitTypeArgs, strictClassEquality);"]}], "num": 16307}