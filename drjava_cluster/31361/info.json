{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b5abe3b0a816f2afb7b722880ed8279", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9eb867618fa1472b29de48a1dbb8049b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task)", "signatureAfterChange": "   public static <I, R>       IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task)", "diff": ["-    return computeInProcess(task, JVMBuilder.DEFAULT, true, null);", "+   */", "+  public static <I, R>", "+      IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task) {", "+    return computeInProcess(task, JVMBuilder.DEFAULT, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a77e5ea886899bd20a8d5e1cb03b5809", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(final Thunk<? extends R> task, final JVMBuilder jvmBuilder,                                                        boolean start)", "signatureAfterChange": "   public static <I, R>       IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task,                                                        JVMBuilder jvmBuilder, boolean start)", "diff": ["-    return computeInProcess(task, jvmBuilder, start, null);", "-  }", "+   */", "+  public static <I, R>", "+      IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task,", "+                                                       JVMBuilder jvmBuilder, boolean start) {", "+    return computeInProcess(task, jvmBuilder, start, false);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4057556e2ce28b46440bdb4e65d895", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/concurrent/ConcurrentUtil.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "   public static <R> TaskController<R> computeInProcess(Thunk<? extends R> task, boolean start)", "signatureAfterChange": "   public static <I, R>       IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task, boolean start)", "diff": ["-    return computeInProcess(task, JVMBuilder.DEFAULT, start, null);", "+   */", "+  public static <I, R>", "+      IncrementalTaskController<I, R> computeInProcess(IncrementalTask<? extends I, ? extends R> task, boolean start) {", "+    return computeInProcess(task, JVMBuilder.DEFAULT, start, false);"]}], "num": 31361}