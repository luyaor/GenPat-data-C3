{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd36f90ffef82ded0376ecfce483e01b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d098e3244980c9107cfcbfd0d27952", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/JPDADebugger.java", "commitBeforeChange": "405d8485f59d23db7a6700d259e1bbcaf9fe742c", "commitAfterChange": "2ee5f2b93eccde81f983b764d9c9f4b543211f8b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public synchronized void shutdown()", "signatureAfterChange": "   public synchronized void shutdown()", "diff": ["-    if (isReady()) {      ", "-      removeAllBreakpoints();", "-      removeAllWatches();", "+    if (isReady()) {", "+        removeAllBreakpoints();", "+        removeAllWatches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5537fee2c73042eafafc522a231e5adb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/cache/DocumentCache.java", "commitBeforeChange": "9759d2ccbf109f474d2bdc597542f6bc71a00cb9", "commitAfterChange": "f4bb524006a117984e26e7bdd902ebecfdd53497", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public String getText()", "signatureAfterChange": "     public String getText()", "diff": ["+      String image = _rec.getText();  // There is a technical race here; _doc could be set and modified before here", "+      if (image != null) return image;", "-        String image = _rec.getText();", "-        if (image != null) return image;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fc411217567e24d1559fc4166689a6e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsPane.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-\t\t\t\t_mainFrame.hourglassOn();", "-        File chosen = fc.getSelectedFile();", "-", "+          _mainFrame.hourglassOn();", "+          File chosen = fc.getSelectedFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8feffef26c5f505d1f842f8990e99d0a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DefinitionsView.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-\t\t\t\t_mainFrame.hourglassOn();", "-        File chosen = fc.getSelectedFile();", "-", "+          _mainFrame.hourglassOn();", "+          File chosen = fc.getSelectedFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a69937d4d6209f24e11a2a848790b026", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "commitAfterChange": "ee2a4f62f26e8f47974ad5d674dd24e422820bcc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public synchronized void undo(int key)", "signatureAfterChange": "   public synchronized void undo(int key)", "diff": ["-      ce.end();", "-      ce.undo();", "-      SwingUtilities.invokeLater(new Runnable() { public void run() { ce.die(); } });  // an unsafe method inherited from CompoundEdit", "+      ", "+      SwingUtilities.invokeLater(new Runnable() { ", "+        public void run() { ", "+          ce.end();", "+          ce.undo();", "+          ce.die(); ", "+        } ", "+      });  // unsafe methods inherited from CompoundEdit"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba93101f330770217c4c6bcfaa1ea533", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "84ce5397e59f2c9953a60bb68d966b69ec59ad8c", "commitAfterChange": "62cd56918db49abf5170cd3da7ff92f86724ef97", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public boolean open()", "signatureAfterChange": "   public boolean open()", "diff": ["-\t\t\t\t_mainFrame.hourglassOn();", "-        File chosen = fc.getSelectedFile();", "-", "+          _mainFrame.hourglassOn();", "+          File chosen = fc.getSelectedFile();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf017d9e9dcb17e2475227fffdcd69ad", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPaneTest.java", "commitBeforeChange": "5b5c43d89a8a31a76e82aef8e33a5eec3bb03ebd", "commitAfterChange": "9a420cdf119356be865ba1cf1fc123a155b1b47c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public void setUp() throws Exception", "signatureAfterChange": "   public void setUp() throws Exception", "diff": ["-    DrJava.getConfig().resetToDefaults();", "-    _frame = new MainFrame();", "-    /* The following two lines were added in an attempt to avoid ConcurrentModificationExceptions during setup in some", "-     * runs of the unit tests. The second is preferred (as long as it works) because it is lighter weight.  The first", "-     * is currently installed because the second occasionally produced java.lang.InterruptedExceptions. */", "-     Utilities.invokeAndWait(new Runnable() { public void run() { _frame.pack(); }});", "-//    _frame.pack();", "-    ", "-//    super.setUp();", "-//    Utilities.invokeAndWait(new Runnable() { ", "-//      public void run() { ", "-//        DrJava.getConfig().resetToDefaults();", "-//        _frame = new MainFrame(); ", "-//      } ", "-//    });", "-//    Utilities.clearEventQueue();", "+    /* The following use of invokeAndWait has been motivated by occasional test failures in set up (particularly in", "+     * MainFrame creation and packing) among different test methods in this test class. */", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        DrJava.getConfig().resetToDefaults();", "+        _frame = new MainFrame();", "+        _frame.pack(); ", "+      }", "+    });"]}], "num": 8966}