{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "85bfc5651ef85bf9e81e5ccda8ad693f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43fdfaa270f80c11de9fbce141d9863e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "a40073610630d4f516a406059faeaca761da62c1", "commitAfterChange": "cd10122759eccf6c810135d6cad33cd763492317", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-    interpret(\"foo = 123\");", "-    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-    interpret(\"int foo = 999;\");", "-    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "-    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-", "-    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "-    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "-    assertEquals(\"call method of outer class #3\", \"-2\",", "-                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "-    assertEquals(\"call method of outer class #4\", \"-2\",", "-                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+// TEMPORARILY commented out because this test is failing", "+//    interpret(\"foo = 123\");", "+//    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+//    interpret(\"int foo = 999;\");", "+//    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "+//    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+//", "+//    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "+//    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "+//    assertEquals(\"call method of outer class #3\", \"-2\",", "+//                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+//    assertEquals(\"call method of outer class #4\", \"-2\",", "+//                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d0547b3d317f78cf69a9e07a376536", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/JavaDebugInterpreterTest.java", "commitBeforeChange": "041023bab0887f54ed814ccd2037595271522c8d", "commitAfterChange": "67e38f766289e5330a2b4079022fb56c6e08bd49", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "signatureAfterChange": "   public void testAccessFieldsAndMethodsOfOuterClasses()     throws DebugException, BadLocationException, DocumentAdapterException, IOException, InterruptedException", "diff": ["-// TEMPORARILY commented out because this test is failing", "-//    interpret(\"foo = 123\");", "-//    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-//    interpret(\"int foo = 999;\");", "-//    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "-//    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "-//", "-//    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #3\", \"-2\",", "-//                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "-//    assertEquals(\"call method of outer class #4\", \"-2\",", "-//                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    interpret(\"foo = 123\");", "+    assertEquals(\"foo should have been modified\" , \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+    interpret(\"int foo = 999;\");", "+    assertEquals(\"foo should refer to defined foo\", \"999\", interpret(\"foo\"));", "+    assertEquals(\"declaring foo should not change MonkeyStuff.this.foo\", \"123\", interpret(\"MonkeyStuff.this.foo\"));", "+", "+    assertEquals(\"call method of outer class #1\", \"-2\", interpret(\"getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #2\", \"-2\", interpret(\"MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #3\", \"-2\",", "+                 interpret(\"MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));", "+    assertEquals(\"call method of outer class #4\", \"-2\",", "+                 interpret(\"MonkeyStuff.MonkeyInner.MonkeyTwoDeep.this.getNegativeTwo()\"));"]}], "num": 20249}