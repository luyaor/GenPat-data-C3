{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2bc84edd844c108ce69722eddac5101", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a35c6cf23ca71f0188eb74a0e0254dd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0c7c12fccfb8655d7ad1d22d386f34bb15267399", "commitAfterChange": "c553d53d5f3c5f2f9f386cec7dd21cdd75fbe436", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "   final public List StreamItem() throws ParseException", "signatureAfterChange": "   final public List StreamItem() throws ParseException", "diff": ["-    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-    case PACKAGE:", "-      root = packageDeclaration();", "-      break;", "-    case IMPORT:", "-      root = importDeclaration();", "-      break;", "-    default:", "-      jj_la1[3] = jj_gen;", "-      if (jj_2_2(2147483647)) {", "-        root = methodDeclaration();", "-      } else if (jj_2_3(2147483647)) {", "-        l = localVariableDeclaration();", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case SEMICOLON:", "-          jj_consume_token(SEMICOLON);", "-          break;", "-        case 0:", "-          jj_consume_token(0);", "-          break;", "-        default:", "-          jj_la1[2] = jj_gen;", "-          jj_consume_token(-1);", "-          throw new ParseException();", "-        }", "-      } else if (jj_2_4(2147483647)) {", "-        root = topLevelStatement();", "-      } else {", "-        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "-        case ABSTRACT:", "-        case CLASS:", "-        case FINAL:", "-        case INTERFACE:", "-        case NATIVE:", "-        case PRIVATE:", "-        case PROTECTED:", "-        case PUBLIC:", "-        case STATIC:", "-        case SYNCHRONIZED:", "-        case TRANSIENT:", "-        case VOLATILE:", "-          root = typeDeclaration();", "-          break;", "-        default:", "-          jj_la1[4] = jj_gen;", "-          jj_consume_token(-1);", "-          throw new ParseException();", "+    try {", "+      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+      case PACKAGE:", "+        root = packageDeclaration();", "+        break;", "+      case IMPORT:", "+        root = importDeclaration();", "+        break;", "+      default:", "+        jj_la1[3] = jj_gen;", "+        if (jj_2_2(2147483647)) {", "+          root = methodDeclaration();", "+        } else if (jj_2_3(2147483647)) {", "+          l = localVariableDeclaration();", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case SEMICOLON:", "+            jj_consume_token(SEMICOLON);", "+            break;", "+          case 0:", "+            jj_consume_token(0);", "+            break;", "+          default:", "+            jj_la1[2] = jj_gen;", "+            jj_consume_token(-1);", "+            throw new ParseException();", "+          }", "+        } else if (jj_2_4(2147483647)) {", "+          root = topLevelStatement();", "+        } else {", "+          switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {", "+          case ABSTRACT:", "+          case CLASS:", "+          case FINAL:", "+          case INTERFACE:", "+          case NATIVE:", "+          case PRIVATE:", "+          case PROTECTED:", "+          case PUBLIC:", "+          case STATIC:", "+          case SYNCHRONIZED:", "+          case TRANSIENT:", "+          case VOLATILE:", "+            root = typeDeclaration();", "+            break;", "+          default:", "+            jj_la1[4] = jj_gen;", "+            jj_consume_token(-1);", "+            throw new ParseException();", "+          }", "-    }", "-       if (root != null) {", "+        if (root != null) {", "-       }", "-       {if (true) return l;}", "+        }", "+        {if (true) return l;}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe, \"Invalid Stream Item\");", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7722ccdd6f08b46caa6ae1382b354c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/Parser.java", "commitBeforeChange": "0fae02937c58237a9087228b753c7aa76d749043", "commitAfterChange": "c8e1edb3cb12a79ab0af0ab2389da353a2a824bf", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 85, "signatureBeforeChange": "   final public ThrowStatement throwStatement() throws ParseException", "signatureAfterChange": "   final public ThrowStatement throwStatement() throws ParseException", "diff": ["-    b = jj_consume_token(THROW);", "-    exp = expression();", "-    e = jj_consume_token(SEMICOLON);", "-      {if (true) return new ThrowStatement(exp,", "-                                filename,", "-                                b.beginLine, b.beginColumn,", "-                                e.endLine,   e.endColumn);}", "+    try {", "+      b = jj_consume_token(THROW);", "+      exp = expression();", "+      e = jj_consume_token(SEMICOLON);", "+        {if (true) return new ThrowStatement(exp,", "+                                  filename,", "+                                  b.beginLine, b.beginColumn,", "+                                  e.endLine,   e.endColumn);}", "+    } catch (ParseException pe) {", "+      _throwParseException(pe,\"Invalid throw statement\");", "+    }"]}], "num": 13165}