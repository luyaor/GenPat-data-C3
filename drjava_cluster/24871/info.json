{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0bd5829d67439d684b8d91f8f390200", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4eee021c8fde7451351ea22015650fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7dad2d86edcd09e4266e43b7304026dc7b0b3db7", "commitAfterChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(true);", "+    CompileShouldSucceedListener listener = new CompileShouldSucceedListener(false);", "-    synchronized(listener) {", "+    if (printMessages) System.out.println(\"before compile\");", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "+    if (printMessages) System.out.println(\"after compile\");", "+      if (printMessages) System.out.println(\"waiting for test\");", "+    if (printMessages) System.out.println(\"after test\");", "+    ", "+    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c52d1a7e2ca7da5d058924a88fc626db", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "7dad2d86edcd09e4266e43b7304026dc7b0b3db7", "commitAfterChange": "1333ad40debe120f6d8fd5fb5ff36c57ce6b1ccf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "signatureAfterChange": "   public void testUnsavedAndUnCompiledChanges() throws Exception", "diff": ["+    _model.setResetAfterCompile(false);", "+    ", "-    TestShouldSucceedListener listener = new TestShouldSucceedListener();", "+    TestShouldSucceedListener listener = new TestShouldSucceedListener(true);", "-    synchronized(listener) {", "+    if (printMessages) System.out.println(\"before compile\");", "+    //synchronized(listener) {", "-      listener.wait();", "-    }", "+      //listener.wait();", "+    //}", "+    if (printMessages) System.out.println(\"after compile\");", "+      if (printMessages) System.out.println(\"waiting for test\");", "+    if (printMessages) System.out.println(\"after test\");", "+    ", "+    _model.setResetAfterCompile(false);"]}], "num": 24871}