{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "759994befea5b0d385f4fa788f023958", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0031e0a2259d63b5df88797ad8e1ca30", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void setClassPaths(List<File> cp);", "signatureAfterChange": "   public void setClassPaths(List<? extends File> cp);", "diff": ["-  public void setCollapsedPaths(List<String> paths);", "-  public void setClassPaths(List<File> cp);", "+  public void setCollapsedPaths(List<? extends String> paths);", "+  public void setClassPaths(List<? extends File> cp);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0536eb510adff6a90ec9efbe70b27a70", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void setAuxiliaryFiles(List<? extends DocFile> aux);", "signatureAfterChange": "   public void setAuxiliaryFiles(List<DocFile> aux);", "diff": ["-  public void setSourceFiles(List<? extends DocFile> sf);", "-  public void setAuxiliaryFiles(List<? extends DocFile> aux);", "+  public void setSourceFiles(List<DocFile> sf);", "+  public void setAuxiliaryFiles(List<DocFile> aux);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1668a15ecc2960fe2778880a81584c82", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ReferenceTypeName.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ReferenceTypeName(List<IdentifierToken> ids)", "signatureAfterChange": "   public ReferenceTypeName(List<? extends IdentifierToken> ids)", "diff": ["-  public ReferenceTypeName(List<IdentifierToken> ids) {", "+  public ReferenceTypeName(List<? extends IdentifierToken> ids) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7f5ae502f1c6fd0768669c67436652", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ArrayInitializer.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public ArrayInitializer(List<Expression> cells)", "signatureAfterChange": "   public ArrayInitializer(List<? extends Expression> cells)", "diff": ["-  public ArrayInitializer(List<Expression> cells) {", "+  public ArrayInitializer(List<? extends Expression> cells) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "229138f9ec6a7c302dbb693ec8dcbb5b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void setCollapsedPaths(List<? extends String> cp)", "signatureAfterChange": "   public void setCollapsedPaths(List<String> cp)", "diff": ["-  public void setCollapsedPaths(List<? extends String> cp) { _collapsedPaths = new ArrayList<String>(cp); }", "+  public void setCollapsedPaths(List<String> cp) { _collapsedPaths = new ArrayList<String>(cp); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23306bda403dba76584d1b854b55cb54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/CollectUtil.java", "commitBeforeChange": "0e1d09dde6936169177bd564168991351deb65d8", "commitAfterChange": "a4e2145de592013fb29da195ee7f505ebce1be18", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 22, "signatureBeforeChange": "      public static <T> Set<T> graphClosure(Set<T> base, Lambda<? super T, ? extends Iterable<? extends T>> neighbors)", "signatureAfterChange": "      public static <T> Set<T> graphClosure(Set<? extends T> base,                                         Lambda<? super T, ? extends Iterable<? extends T>> neighbors)", "diff": ["-  public static <T> Set<T> graphClosure(Set<T> base, Lambda<? super T, ? extends Iterable<? extends T>> neighbors) {", "+  public static <T> Set<T> graphClosure(Set<? extends T> base,", "+                                        Lambda<? super T, ? extends Iterable<? extends T>> neighbors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25ac3adc3f1d812def48afb8fd365f7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setSourceFiles(List<DocFile> sf);", "signatureAfterChange": "      public void setSourceFiles(List<? extends DocFile> sf);", "diff": ["-  public void setSourceFiles(List<DocFile> sf);", "+  public void setSourceFiles(List<? extends DocFile> sf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba21c2c28f0559cf4cdb8d5ca10016b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "signatureAfterChange": "   public void setBreakpoints(List<DebugBreakpointData> bps);", "diff": ["-  public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "+  public void setBreakpoints(List<DebugBreakpointData> bps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eda2677fe85f9ed5ea9bb46267b1546", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void setCollapsedPaths(List<? extends String> paths);", "signatureAfterChange": "   public void setCollapsedPaths(List<String> paths);", "diff": ["-  public void setAuxiliaryFiles(List<? extends DocFile> aux);", "-  public void setCollapsedPaths(List<? extends String> paths);", "+  public void setAuxiliaryFiles(List<DocFile> aux);", "+  public void setCollapsedPaths(List<String> paths);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3714a320c14569c4a54036afe8e3aeac", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/recur/ValueContinuation.java", "commitBeforeChange": "cfd4689ec89c3908ea0306a11510c85ea5436de0", "commitAfterChange": "d75f8c4199bcbc3343c2ad391d599295e4ed6fb7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public Continuation<? extends T> step()", "signatureAfterChange": "   public Continuation<T> step()", "diff": ["-   */", "-  public Continuation<? extends T> step() { throw new IllegalStateException(); }", "+  /** Throw an {@code IllegalStateException}, because this continuation is already resolved. */", "+  public Continuation<T> step() { throw new IllegalStateException(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c95570b750146d3ec87e52493d2e549", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void setWatches(List<DebugWatchData> ws);", "signatureAfterChange": "   public void setWatches(List<? extends DebugWatchData> ws);", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps);", "-  public void setWatches(List<DebugWatchData> ws);", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "+  public void setWatches(List<? extends DebugWatchData> ws);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eb73df2fc2ade4d7de6c9936ec3891d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SuperMethodCall(String mn, List<Expression> args)", "signatureAfterChange": "   public SuperMethodCall(String mn, List<? extends Expression> args)", "diff": ["-  public SuperMethodCall(String mn, List<Expression> args) {", "+  public SuperMethodCall(String mn, List<? extends Expression> args) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cdbad7f6eb8b21ef44223d90093aafa", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/SuperMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public SuperMethodCall(String mn, List<Expression> args,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public SuperMethodCall(String mn, List<? extends Expression> args,                          String fn, int bl, int bc, int el, int ec)", "diff": ["-  public SuperMethodCall(String mn, List<Expression> args,", "+  public SuperMethodCall(String mn, List<? extends Expression> args,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e4bd0e9bc4636a211d372d1c72f1e11", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericReferenceTypeName.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "      public String toStringHelper()", "signatureAfterChange": "      public String toStringHelper()", "diff": ["-    List<List<? extends TypeName>> alltas = getTypeArguments();", "+    List<? extends List<? extends TypeName>> alltas = getTypeArguments();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1071b2813bef2781a299245c3589f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<Expression> args)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args)", "diff": ["-  public ObjectMethodCall(Expression exp, String mn, List<Expression> args) {", "+  public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d5af445f96fd2f0b6f0e41f5f92eae", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "      public void setBreakpoints(List<DebugBreakpointData> bps)", "signatureAfterChange": "   public void setBreakpoints(List<? extends DebugBreakpointData> bps)", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "+  public void setBookmarks(List<? extends DocumentRegion> bms) { _bookmarks = new ArrayList<DocumentRegion>(bms); }", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6911d0d55b78560f2d7426269f06c671", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSuperMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSuperMethodCall(String mn, List<Expression> args, List<TypeName> targs,                          String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs,                          String fn, int bl, int bc, int el, int ec)", "diff": ["-  public PolymorphicSuperMethodCall(String mn, List<Expression> args, List<TypeName> targs,", "+  public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf61e684595bd4546ec22cc1c98bd26", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "      public void setBreakpoints(List<? extends DebugBreakpointData> bps)", "signatureAfterChange": "      public void setBreakpoints(List<DebugBreakpointData> bps)", "diff": ["-  public void setBreakpoints(List<? extends DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "+  public void setBreakpoints(List<DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dfdf9db0c2ee9763d809b7f70f50107", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "      public void setSourceFiles(List<? extends DocFile> sf);", "signatureAfterChange": "      public void setSourceFiles(List<DocFile> sf);", "diff": ["-  public void setSourceFiles(List<? extends DocFile> sf);", "+  public void setSourceFiles(List<DocFile> sf);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852f3650fb778af922327bd5e2a84511", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": "   public void setWatches(List<DebugWatchData> ws)", "signatureAfterChange": "   public void setWatches(List<? extends DebugWatchData> ws)", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "-  public void setWatches(List<DebugWatchData> ws) { _watches = new ArrayList<DebugWatchData>(ws); }", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "+  public void setWatches(List<? extends DebugWatchData> ws) { _watches = new ArrayList<DebugWatchData>(ws); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8890c8af3a3d013a4b2930412929960d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "1cb0fa6f36337663f18412d1ce0167f2bbf4f4bb", "commitAfterChange": "ba163f94d306cbe5464366849092be0163a33fb8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   private List<? extends File> _compileLanguageLevelsFiles(List<? extends File> files, List<? super CompilerError> errors)", "signatureAfterChange": "   private List<? extends File> _compileLanguageLevelsFiles(List<? extends File> files, List<CompilerError> errors)", "diff": ["-  private List<? extends File> _compileLanguageLevelsFiles(List<? extends File> files, List<? super CompilerError> errors) {", "+  private List<? extends File> _compileLanguageLevelsFiles(List<? extends File> files, List<CompilerError> errors) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88d3564edba3e70c8e893f127a20f91e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void setWatches(List<? extends DebugWatchData> ws);", "signatureAfterChange": "   public void setWatches(List<DebugWatchData> ws);", "diff": ["-  public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "-  public void setWatches(List<? extends DebugWatchData> ws);", "+  public void setBreakpoints(List<DebugBreakpointData> bps);", "+  public void setWatches(List<DebugWatchData> ws);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94eb47fc6ef79ba2ea8e06b463804342", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void setCollapsedPaths(List<String> paths);", "signatureAfterChange": "   public void setCollapsedPaths(List<? extends String> paths);", "diff": ["-  public void setAuxiliaryFiles(List<DocFile> aux);", "-  public void setCollapsedPaths(List<String> paths);", "+  public void setAuxiliaryFiles(List<? extends DocFile> aux);", "+  public void setCollapsedPaths(List<? extends String> paths);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a324b0ef352525ec7d29892583d404ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/interpreter/TypeNameChecker.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     @Override public Type visit(GenericReferenceTypeName node)", "signatureAfterChange": "     @Override public Type visit(GenericReferenceTypeName node)", "diff": ["-      Iterator<List<? extends TypeName>> allTargs = node.getTypeArguments().iterator();", "+      Iterator<? extends List<? extends TypeName>> allTargs = node.getTypeArguments().iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43243bd2f9691e42b0c60ed5dd06726", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LazyThunk.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public static <R> LazyThunk<R> make(Thunk<R> value)", "signatureAfterChange": "      public static <R> LazyThunk<R> make(Thunk<? extends R> value)", "diff": ["-  public static <R> LazyThunk<R> make(Thunk<R> value) { return new LazyThunk<R>(value); }", "+  public static <R> LazyThunk<R> make(Thunk<? extends R> value) { return new LazyThunk<R>(value); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f5a2d7a4e515a7a8a812b92b8ffdd6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicObjectMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<Expression> args, List<TypeName> targs,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs,                           String fn, int bl, int bc, int el, int ec)", "diff": ["-  public PolymorphicObjectMethodCall(Expression exp, String mn, List<Expression> args, List<TypeName> targs,", "+  public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a938389802127f5891cf4a69d0f3c81f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void setAuxiliaryFiles(List<DocFile> aux);", "signatureAfterChange": "   public void setAuxiliaryFiles(List<? extends DocFile> aux);", "diff": ["-  public void setSourceFiles(List<DocFile> sf);", "-  public void setAuxiliaryFiles(List<DocFile> aux);", "+  public void setSourceFiles(List<? extends DocFile> sf);", "+  public void setAuxiliaryFiles(List<? extends DocFile> aux);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5eb1af125fff1fdd02f337404e237b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/io/IOUtil.java", "commitBeforeChange": "fc50d53e585d1899d39444b55ced54915eb3ada3", "commitAfterChange": "e968348ac62e252acbbb3ef230ade4d78ae9af53", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "   public static String pathToString(Iterable<File> path)", "signatureAfterChange": "   public static String pathToString(Iterable<? extends File> path)", "diff": ["-  public static String pathToString(Iterable<File> path) {", "+  public static String pathToString(Iterable<? extends File> path) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ccc55703d254b84e25152cb5bdaa74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<Expression> args,                           String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,                           String fn, int bl, int bc, int el, int ec)", "diff": ["-  public StaticMethodCall(TypeName typ, String mn, List<Expression> args,", "+  public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b568779aa406f9277ef6673e9656197d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void setBreakpoints(List<DebugBreakpointData> bps);", "signatureAfterChange": "   public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps);", "+  public void setBookmarks(List<? extends DocumentRegion> bms);", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4fb010573008a0322c7b70dd044734", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "   public void setWatches(List<? extends DebugWatchData> ws)", "signatureAfterChange": "   public void setWatches(List<DebugWatchData> ws)", "diff": ["-  public void setBreakpoints(List<? extends DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "-  public void setWatches(List<? extends DebugWatchData> ws) { _watches = new ArrayList<DebugWatchData>(ws); }", "+  public void setBreakpoints(List<DebugBreakpointData> bps) { _breakpoints = new ArrayList<DebugBreakpointData>(bps); }", "+  public void setWatches(List<DebugWatchData> ws) { _watches = new ArrayList<DebugWatchData>(ws); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "befff925d4f2c603e07682e543c50f57", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/sexp/SExpParserTest.java", "commitBeforeChange": "3219755a46ca8592e404ccf1c194784de66c102a", "commitAfterChange": "314c962d7f6ed2c6b00f5edc6e764b582b016016", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testParseMultiple() throws SExpParseException", "signatureAfterChange": "   public void testParseMultiple() throws SExpParseException", "diff": ["-    List<SExp> exps = SExpParser.parse(text);", "+    List<? extends SExp> exps = SExpParser.parse(text);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4c6d8f5e9c9ddb7702d0c80db5892ce", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public static <S, T> ConsVisitor<S, ConsList<? extends T>> map(Lambda<? super S, ? extends T> lambda)", "signatureAfterChange": "   public static <S, T> ConsVisitor<S, ConsList<T>> map(Lambda<? super S, ? extends T> lambda)", "diff": ["-  public static <S, T> ConsVisitor<S, ConsList<? extends T>> map(Lambda<? super S, ? extends T> lambda) {", "+  public static <S, T> ConsVisitor<S, ConsList<T>> map(Lambda<? super S, ? extends T> lambda) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64ac42ca9a99a1811b180526c3b5afc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "a80c90b8428392cd32bdf80517cd25701896680b", "commitAfterChange": "3b44f33ccb03f306f6bb68e6706f852bc9d4f122", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _compileFiles(List<? extends File> files, File buildDir) throws IOException", "signatureAfterChange": "   private void _compileFiles(List<File> files, File buildDir) throws IOException", "diff": ["-  private void _compileFiles(List<? extends File> files, File buildDir) throws IOException {", "+  private void _compileFiles(List<File> files, File buildDir) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb92d52f917485be5a35957252606e89", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/collect/ConsVisitor.java", "commitBeforeChange": "b479db0ddd970ef8169038bb251244ba6cce33f8", "commitAfterChange": "1f5f4df3d6b832b8f29758517ad3b40ec22b5426", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public static <T> ConsVisitor<T, ConsList<? extends T>> filter(Predicate<? super T> pred)", "signatureAfterChange": "   public static <T> ConsVisitor<T, ConsList<T>> filter(Predicate<? super T> pred)", "diff": ["-  public static <T> ConsVisitor<T, ConsList<? extends T>> filter(Predicate<? super T> pred) {", "+  public static <T> ConsVisitor<T, ConsList<T>> filter(Predicate<? super T> pred) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1aaacaa01648d3492c0fa6c5920740d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/StaticMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public StaticMethodCall(TypeName typ, String mn, List<Expression> args)", "signatureAfterChange": "   public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args)", "diff": ["-  public StaticMethodCall(TypeName typ, String mn, List<Expression> args) {", "+  public StaticMethodCall(TypeName typ, String mn, List<? extends Expression> args) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1056d2ef75387ff3c2451bfbb09c16", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSuperMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public PolymorphicSuperMethodCall(String mn, List<Expression> args, List<TypeName> targs)", "signatureAfterChange": "   public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs)", "diff": ["-  public PolymorphicSuperMethodCall(String mn, List<Expression> args, List<TypeName> targs) {", "+  public PolymorphicSuperMethodCall(String mn, List<? extends Expression> args, List<TypeName> targs) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e185f08c2d605f91ac0c644fefed3c92", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void setSourceFiles(List<? extends DocFile> sf)", "signatureAfterChange": "   public void setSourceFiles(List<DocFile> sf)", "diff": ["-  public void setSourceFiles(List<? extends DocFile> sf) { _sourceFiles = new ArrayList<DocFile>(sf); }", "+  public void setSourceFiles(List<DocFile> sf) { _sourceFiles = new ArrayList<DocFile>(sf); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8715e124e869c4bafb28e96519ffbef", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicObjectMethodCall.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<Expression> args, List<TypeName> targs)", "signatureAfterChange": "   public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs)", "diff": ["-  public PolymorphicObjectMethodCall(Expression exp, String mn, List<Expression> args, List<TypeName> targs) {", "+  public PolymorphicObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, List<TypeName> targs) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f89b77cdb164c1ef603413fcb7622400", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "plt/src/edu/rice/cs/plt/lambda/LazyThunk.java", "commitBeforeChange": "b23111eb475b92740f35af8853527f4b3b92f815", "commitAfterChange": "3ea6a37aa7347e12727171dd92a2bb3861e3967f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public LazyThunk(Thunk<R> value)", "signatureAfterChange": "      public LazyThunk(Thunk<? extends R> value)", "diff": ["-  public LazyThunk(Thunk<R> value) {", "+  public LazyThunk(Thunk<? extends R> value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9613134ebd207a92f46af7253ef047b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/GenericReferenceTypeName.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "       public List<List<? extends TypeName>> getTypeArguments()", "signatureAfterChange": "       public List<? extends List<? extends TypeName>> getTypeArguments()", "diff": ["-  public List<List<? extends TypeName>> getTypeArguments(){ return _typeArguments; }", "+  public List<? extends List<? extends TypeName>> getTypeArguments(){ return _typeArguments; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb75cb42664b2b8a63f09b68996ec195", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectProfile.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void setAuxiliaryFiles(List<? extends DocFile> af)", "signatureAfterChange": "   public void setAuxiliaryFiles(List<DocFile> af)", "diff": ["-  public void setCollapsedPaths(List<? extends String> cp) { _collapsedPaths = new ArrayList<String>(cp); }", "-  public void setAuxiliaryFiles(List<? extends DocFile> af) { _auxFiles = new ArrayList<DocFile>(af); }", "+  public void setCollapsedPaths(List<String> cp) { _collapsedPaths = new ArrayList<String>(cp); }", "+  public void setAuxiliaryFiles(List<DocFile> af) { _auxFiles = new ArrayList<DocFile>(af); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6ab7a62f31cd1215e20e08cba9de54", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "62a60c4b746d2a0603d2c223e7e3b1d46d413a58", "commitAfterChange": "87398b58408451c65d21071c7d35ec479ae703e4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "   public void setBreakpoints(List<DebugBreakpointData> bps);", "signatureAfterChange": "   public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps);", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea978c38ead99188da1c3fc1cf0e62d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileIR.java", "commitBeforeChange": "ceab110c30960ba2658eb606c0fd95b01dad5a65", "commitAfterChange": "f31b25b6bce1143f413461b3f80cdf7629bea1c5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": "   public void setWatches(List<DebugWatchData> ws);", "signatureAfterChange": "   public void setWatches(List<? extends DebugWatchData> ws);", "diff": ["-  public void setBreakpoints(List<DebugBreakpointData> bps);", "-  public void setWatches(List<DebugWatchData> ws);", "+  public void setBreakpoints(List<? extends DebugBreakpointData> bps);", "+  public void setWatches(List<? extends DebugWatchData> ws);"]}], "num": 4639}