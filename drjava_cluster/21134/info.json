{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe8f18bc5b3161b71722f2fae1223ea3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b5527ba27333ce4697595d32ec3331", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 22, "signatureBeforeChange": "          public void testForPrimitiveTypeDoFirst()", "signatureAfterChange": "          public void testForPrimitiveTypeDoFirst()", "diff": ["-     //only primative types boolean, char, int, and double are allowed at Intermediate level. ", "+      //only primative types boolean, char, int, and double are allowed at Intermediate level. ", "-", "+      ", "-            ", "+      ", "-", "+      ", "-      assertEquals(\"After visiting byte, errors should be 1\", 1, errors.size());", "-      assertEquals(\"After byte, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting byte, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting short, errors should be 2\", 2, errors.size());", "-      assertEquals(\"After short, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting short, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting long, errors should be 3\", 3, errors.size());", "-      assertEquals(\"After long, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "-", "+      assertEquals(\"After visiting long, errors should be 0\", 0, errors.size());", "+      ", "-      assertEquals(\"After visiting float, errors should be 4\", 4, errors.size());", "-      assertEquals(\"After float, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Intermediate level\", errors.getLast().getFirst());", "+      assertEquals(\"After visiting float, errors should be 0\", 0, errors.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d2ecb3be3d39dfdc331aa179673efbc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryVisitor.java", "commitBeforeChange": "5e7a16013fcb5945eddc036e2d2d0ce3e14ba2d0", "commitAfterChange": "e1389ddb9dcb8a7d3a230cc1be322481e1c8fd6a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "          public void testForPrimitiveTypeDoFirst()", "signatureAfterChange": "          public void testForPrimitiveTypeDoFirst()", "diff": ["-      SourceInfo noInfo = JExprParser.NO_SOURCE_INFO;", "+      SourceInfo noInfo = _noSourceInfo;", "+      String primTypesMsg = ", "+        \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\";", "-      assertEquals(\"After byte, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"After byte, error message is correct\", primTypesMsg, errors.getLast().getFirst());", "-      assertEquals(\"After short, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"After short, error message is correct\", primTypesMsg, errors.getLast().getFirst());", "-      assertEquals(\"After long, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"After long, error message is correct\", primTypesMsg, errors.getLast().getFirst());", "-      assertEquals(\"After float, error message is correct\", \"Only the primitive types \\\"int\\\", \\\"double\\\", \\\"boolean\\\", and \\\"char\\\" can be used at the Elementary level\", errors.getLast().getFirst());", "+      assertEquals(\"After float, error message is correct\",  primTypesMsg, errors.getLast().getFirst());"]}], "num": 21134}