{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ca44432b8d03ae118d797507d1ab80a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5077426900f71b53f1a18e26d1b1173b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": "   public void testGlassPaneHidesKeyEvents()", "signatureAfterChange": "   public void testGlassPaneHidesKeyEvents()", "diff": ["-    OpenDefinitionsDocument doc1 = model.newFile();", "-    OpenDefinitionsDocument doc2 = model.newFile();", "+    final OpenDefinitionsDocument doc1 = model.newFile();", "+    final OpenDefinitionsDocument doc2 = model.newFile();", "-", "-    JScrollPane pane1 = _frame._createDefScrollPane(doc1);", "-    JScrollPane pane2 = _frame._createDefScrollPane(doc2);", "-", "-    DefinitionsPane defPane1 = (DefinitionsPane) pane1.getViewport().getView();", "-    DefinitionsPane defPane2 = (DefinitionsPane) pane2.getViewport().getView();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "+        _pane1 = _frame._createDefScrollPane(doc1);", "+        _pane2 = _frame._createDefScrollPane(doc2);", "+        _defPane1 = (DefinitionsPane) _pane1.getViewport().getView();", "+        _defPane2 = (DefinitionsPane) _pane2.getViewport().getView();", "+        ", "+        _frame.hourglassOn();", "+        ", "+        _defPane1.processKeyEvent(makeFindKeyEvent(_defPane1, 70));", "+      }", "+    });", "-    _frame.hourglassOn();", "-", "-    defPane1.processKeyEvent(makeFindKeyEvent(defPane1, 70));", "-    assertTrue(\"the find replace dialog should not come up\", !_frame.getFindReplaceDialog().isDisplayed());", "-    _frame.getInteractionsPane().processKeyEvent(makeFindKeyEvent(_frame.getInteractionsPane(), 0));", "-    assertTrue(\"the find replace dialog should not come up\", !_frame.getFindReplaceDialog().isDisplayed());", "+    assertTrue(\"the find replace dialog should not come up\", ! _frame.getFindReplaceDialog().isDisplayed());", "+    Utilities.invokeAndWait(new Runnable() {", "+      public void run() {", "+        _frame.getInteractionsPane().processKeyEvent(makeFindKeyEvent(_frame.getInteractionsPane(), 0));", "+      }", "+    });", "+    ", "+    assertTrue(\"the find replace dialog should not come up\", ! _frame.getFindReplaceDialog().isDisplayed());", "-//    _log.log(\"testGlassPaneHidesKeyEvents completed\");", "+    _log.log(\"testGlassPaneHidesKeyEvents completed\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31fea9769f1c3618be238b791c15a1d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrameTest.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": "   public void testGlassPaneEditableState()", "signatureAfterChange": "   public void testGlassPaneEditableState()", "diff": ["-    OpenDefinitionsDocument doc1 = model.newFile();", "-    OpenDefinitionsDocument doc2 = model.newFile();", "+    final OpenDefinitionsDocument doc1 = model.newFile();", "+    final OpenDefinitionsDocument doc2 = model.newFile();", "+    Utilities.invokeAndWait(new Runnable() { ", "+      public void run() {", "-    JScrollPane pane1 = _frame._createDefScrollPane(doc1);", "-    JScrollPane pane2 = _frame._createDefScrollPane(doc2);", "-", "-    DefinitionsPane defPane1 = (DefinitionsPane) pane1.getViewport().getView();", "-    DefinitionsPane defPane2 = (DefinitionsPane) pane2.getViewport().getView();", "-", "-    _frame._switchDefScrollPane();", "-    assertTrue(\"Start: defPane1\",defPane1.isEditable());", "-    assertTrue(\"Start: defPane2\",defPane2.isEditable());", "-    _frame.hourglassOn();", "-    assertTrue(\"Glass on: defPane1\",defPane1.isEditable());", "-    assertTrue(\"Glass on: defPane2\",(!defPane2.isEditable()));", "+        _pane1 = _frame._createDefScrollPane(doc1);", "+        _pane2 = _frame._createDefScrollPane(doc2);", "+        ", "+        _defPane1 = (DefinitionsPane) _pane1.getViewport().getView();", "+        _defPane2 = (DefinitionsPane) _pane2.getViewport().getView();", "+        ", "+        _frame._switchDefScrollPane();", "+      }", "+    });", "+    ", "+    Utilities.clearEventQueue(); // Execute all pending asynchronous tasks;", "+    ", "+    assertTrue(\"Start: defPane1\", _defPane1.isEditable());", "+    assertTrue(\"Start: defPane2\", _defPane2.isEditable());", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOn(); } });", "+    ", "+    assertTrue(\"Glass on: defPane1\", _defPane1.isEditable());", "+    assertTrue(\"Glass on: defPane2\",(! _defPane2.isEditable()));", "-    _frame._switchDefScrollPane();", "-    assertTrue(\"Doc Switch: defPane1\",(! defPane1.isEditable()));", "-    assertTrue(\"Doc Switch: defPane2\",defPane2.isEditable());", "-    _frame.hourglassOff();", "-    assertTrue(\"End: defPane1\",defPane1.isEditable());", "-    assertTrue(\"End: defPane2\",defPane2.isEditable());", "-//    _log.log(\"testGlassPaneEditableState completed\");", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame._switchDefScrollPane(); } });", "+    ", "+    assertTrue(\"Doc Switch: defPane1\",(! _defPane1.isEditable()));", "+    assertTrue(\"Doc Switch: defPane2\", _defPane2.isEditable());", "+    Utilities.invokeAndWait(new Runnable() { public void run() { _frame.hourglassOff(); } });", "+    ", "+    assertTrue(\"End: defPane1\", _defPane1.isEditable());", "+    assertTrue(\"End: defPane2\", _defPane2.isEditable());", "+    _log.log(\"testGlassPaneEditableState completed\");"]}], "num": 14273}