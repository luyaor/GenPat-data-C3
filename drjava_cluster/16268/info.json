{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e5ff8e65c374a8662e9a3945d37087b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca44ec2cd7c4325aedce7ee9e69bc210", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "579a4d89882b0dda3dd1f44a56fcd202a72dea14", "commitAfterChange": "80dfa692738d1f0b8b460106cde974eaa592d50b", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public Type visit(BitOrExpression node)", "signatureAfterChange": "   public Class<?> visit(BitOrExpression node)", "diff": ["-  public Type visit(BitOrExpression node) {", "-    Type c1 = visitBitwiseExpression(node);", "-    Class<?> c = (Class<?>)c1;", "+  public Class<?> visit(BitOrExpression node) {", "+    Class<?> c = visitBitwiseExpression(node);", "+", "-    ", "+", "-         InterpreterUtilities.bitOr(c, ln.getProperty(NodeProperties.VALUE), rn.getProperty(NodeProperties.VALUE)));", "+         InterpreterUtilities.bitOr", "+           (c,", "+            ln.getProperty(NodeProperties.VALUE),", "+            rn.getProperty(NodeProperties.VALUE)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e15f13ef20eef1e073fb7ded1ae63d5a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/interpreter/AbstractTypeChecker.java", "commitBeforeChange": "8b62707316ebd1a295093767531836f6fa870ac2", "commitAfterChange": "0c8b573302c9f1cea325504624915d96eec179d9", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": "   public Class<?> visit(BitOrExpression node)", "signatureAfterChange": "   public Type visit(BitOrExpression node)", "diff": ["-  public Class<?> visit(BitOrExpression node) {", "-    Class<?> c = visitBitwiseExpression(node);", "-", "+  public Type visit(BitOrExpression node) {", "+    Type c1 = visitBitwiseExpression(node);", "+    Class<?> c = (Class<?>)c1;", "-", "+    ", "-         InterpreterUtilities.bitOr", "-           (c,", "-            ln.getProperty(NodeProperties.VALUE),", "-            rn.getProperty(NodeProperties.VALUE)));", "+         InterpreterUtilities.bitOr(c, ln.getProperty(NodeProperties.VALUE), rn.getProperty(NodeProperties.VALUE)));"]}], "num": 16268}