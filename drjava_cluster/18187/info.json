{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7bab99409a37b7f5a08c774540b3188", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c8a515e25c091a319f1879e71ef76c3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "937476ee8896348910d6d75752ebec9108601607", "commitAfterChange": "8919b34b2a6db18ce9f1ce08c0f6b15bbc1fac15", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private void _updateWatches()", "signatureAfterChange": "   private void _updateWatches()", "diff": ["-      ArrayList <Integer>arr_index = new ArrayList<Integer>();", "+      ArrayList<Integer> arr_index = new ArrayList<Integer>();", "-      if(!arr_index.isEmpty())  {", "-        int [] indices = new int[arr_index.size()];", "-        for (int i = 0; i < arr_index.size(); i++) {", "-          indices[i] = (Integer)arr_index.get(i);", "-        }", "-        val = _model.getInteractionsModel().getVariableToString(name, indices);", "-        type = _model.getInteractionsModel().getVariableType(name, indices);", "+      int [] indices = new int[arr_index.size()];", "+      for (int i = 0; i < arr_index.size(); i++) {", "+        indices[i] = arr_index.get(i);", "-      else {", "-        val = _model.getInteractionsModel().getVariableToString(name);", "-        type = _model.getInteractionsModel().getVariableType(name);", "-      }", "+      val = _model.getInteractionsModel().getVariableToString(name, indices);", "+      type = _model.getInteractionsModel().getVariableType(name, indices);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb922a53e4639763c024e1ba719a3d9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "3c45024cce34a3ee10682b132490494920e9d45a", "commitAfterChange": "66e5a8936ddc9a6a54b90689df97ecc4178fb4cc", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "   private void _updateWatches()", "signatureAfterChange": "   private void _updateWatches()", "diff": ["-      String val = _model.getInteractionsModel().getVariableToString(w.getName());", "+      String name = w.getName();", "+      String val = \"\";", "+      String type = \"\";", "+      ArrayList <Integer>arr_index = new ArrayList<Integer>();", "+      ", "+      if(name.indexOf(\"[\")!=-1 && name.indexOf(\"]\")!=-1) {", "+        name = name.substring(0, name.indexOf(\"[\"));", "+        arr_index.add(Integer.parseInt(w.getName().substring(w.getName().indexOf(\"[\")+1, w.getName().indexOf(\"]\"))));      ", "+        if(w.getName().indexOf(\"]\")<(w.getName().length()-1)) {", "+          String iter = w.getName().substring(w.getName().indexOf(\"]\")+1, w.getName().length());", "+          while(iter.indexOf(\"[\")!=-1 && iter.indexOf(\"]\")!=-1) {", "+            arr_index.add(Integer.parseInt(iter.substring(iter.indexOf(\"[\")+1, iter.indexOf(\"]\"))));      ", "+            if(iter.indexOf(\"]\")<(iter.length()-1))", "+              iter = iter.substring(iter.indexOf(\"]\")+1, iter.length());", "+            else ", "+              iter = \"\";", "+          }", "+        }", "+      }", "+     ", "+      if(!arr_index.isEmpty())  {", "+        int [] indices = new int[arr_index.size()];", "+        for (int i = 0; i < arr_index.size(); i++) {", "+          indices[i] = (Integer)arr_index.get(i);", "+        }", "+        val = _model.getInteractionsModel().getVariableToString(name, indices);", "+        type = _model.getInteractionsModel().getVariableType(name, indices);", "+      }", "+      else {", "+        val = _model.getInteractionsModel().getVariableToString(name);", "+        type = _model.getInteractionsModel().getVariableType(name);", "+      }", "+      ", "-      String type = _model.getInteractionsModel().getVariableType(w.getName());"]}], "num": 18187}