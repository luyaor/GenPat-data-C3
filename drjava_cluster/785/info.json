{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92e420f4f744a19648ec0ed6372824fe", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4c07c2cad17798593c58976e927c97", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/ElementaryLevelTest.java", "commitBeforeChange": "093f33e43dd3de7d97364f410a0a58ca1448a1ce", "commitAfterChange": "51703b3c111cc35e01e35a5e289226f6da1c1962", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public void testShouldBeErrors()", "signatureAfterChange": "   public void testShouldBeErrors()", "diff": ["-      result = llc.convert(new File[]{testFiles[i]}, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      result = llc.convert(new File[]{ testFiles[i] }, new Options(JavaVersion.JAVA_5, EmptyIterable.<File>make()));", "+      System.out.println(\"Test result = \" + result);", "-                 !result.getFirst().isEmpty() || !result.getSecond().isEmpty());", "+                 ! result.getFirst().isEmpty() || ! result.getSecond().isEmpty());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef9cf3bcd93cc817755f3a47b689e139", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelConverter.java", "commitBeforeChange": "bdd7aa6c0bcfa675b71488b11d63dfa5dd20cdb9", "commitAfterChange": "f5dd2dee51c1ad8dcca1f4a88c8821b0f45f645c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public static void main(String[] args)", "signatureAfterChange": "   public static void main(String[] args)", "diff": ["+    ", "+    if (args.length==0) {", "+      System.out.println(\"Java Language Level Converter\");", "+      System.out.println(\"Please pass file names (*.dj0, *.dj1, *.dj2) as arguments.\");", "+      System.out.println(\"Note: The converter will use Java's classpath to resolve classes.\");", "+      System.out.println(\"      If classes are not found, use java -cp <classpath> to set the classpath.\");", "+      return;", "+    }", "+    ", "-      llc.convert(files, new Options(JavaVersion.JAVA_5, IterUtil.<File>empty()));", "+      llc.convert(files, new Options(JavaVersion.JAVA_5,", "+                                     IOUtil.parsePath(System.getProperty(\"java.class.path\", \"\"))));"]}], "num": 785}