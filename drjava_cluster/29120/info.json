{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "859d20859ea193d8bdf3b50434fceb1a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e34d704b1ba3b288062bf58f15db9958", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 52, "signatureBeforeChange": "   synchronized void reachedBreakpoint(BreakpointRequest request)", "signatureAfterChange": " void reachedBreakpoint(BreakpointRequest request)", "diff": ["-  synchronized void reachedBreakpoint(BreakpointRequest request) {", "+  /* synchronized */ void reachedBreakpoint(BreakpointRequest request) {", "+    assert EventQueue.isDispatchThread();", "-      Utilities.invokeLater(new Runnable() { public void run() { _notifier.breakpointReached(breakpoint); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.breakpointReached(breakpoint); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4035530e0e9193b0fb649e3e423aec", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/jpda/JPDADebugger.java", "commitBeforeChange": "27f4730bb628f4f21b5ace9b8592e93a615017f8", "commitAfterChange": "08f616afaebe02cc02ba5da4da4990852caead81", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 57, "signatureBeforeChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight)", "signatureAfterChange": "   private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className,                               final boolean shouldHighlight)", "diff": ["-  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, final boolean shouldHighlight) {", "+  private void openAndScroll(final OpenDefinitionsDocument doc, final int line, String className, ", "+                             final boolean shouldHighlight) {", "+    assert EventQueue.isDispatchThread();", "-      Utilities.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });", "+      EventQueue.invokeLater(new Runnable() { public void run() { _notifier.threadLocationUpdated(doc, line, shouldHighlight); } });"]}], "num": 29120}