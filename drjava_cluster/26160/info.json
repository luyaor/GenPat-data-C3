{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8e03e3603c0807269829269dc17da86", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "657065bbc9bf4be28c136074fb9679fd", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "d39fc44a2b4009f148bbc703ed43a3cf2088b6b8", "commitAfterChange": "cfce2bb39ad9cf552e3b892bb419bc9b0e121ae5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-      if(!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) && compilerNames.contains(dCompName))", "-        _active = _compilers.get(compilerNames.indexOf(dCompName));", "+      if (!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE)) {", "+        // preference was set", "+        if (compilerNames.contains(dCompName)) {", "+          _active = _compilers.get(compilerNames.indexOf(dCompName));", "+        }", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b37692361e89415522cd79b90da76e8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/DefaultCompilerModel.java", "commitBeforeChange": "cc814c34f96bfde67f8ae465727b510fa3ed34c9", "commitAfterChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "signatureAfterChange": "   public DefaultCompilerModel(GlobalModel m, Iterable<? extends CompilerInterface> compilers)", "diff": ["-    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); //populates the compiler list for preference panel", "+    OptionConstants.COMPILER_PREFERENCE_CONTROL.setList(compilerNames); // populates the compiler list for preference panel", "-      if (!dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE)) {", "-        // preference was set", "-        if (compilerNames.contains(dCompName)) {", "-          _active = _compilers.get(compilerNames.indexOf(dCompName));", "-        }", "-      }", "+      if (! dCompName.equals(OptionConstants.COMPILER_PREFERENCE_CONTROL.NO_PREFERENCE) &&", "+           compilerNames.contains(dCompName)) ", "+        _active = _compilers.get(compilerNames.indexOf(dCompName));", "-    ", "-    _LLSTM = new LanguageLevelStackTraceMapper(m);", "+    _LLSTM = new LanguageLevelStackTraceMapper(_model);"]}], "num": 26160}