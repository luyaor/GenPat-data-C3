{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e1440439751dc20d1026541085ae604a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc230f89273852e4f9902e6c6515d9a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ab54ffeb9782712c65269bca65fea798aa2c5712", "commitAfterChange": "beead1fa2c7ee24ed59761a6b295b4aa1355139e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public DefaultGlobalModel()", "signatureAfterChange": "   public DefaultGlobalModel()", "diff": ["-    try { _jvm = new MainJVM(workDir); }", "-    catch(java.rmi.server.ExportException e) {", "-      if (e.getMessage().equals(\"Listen failed on port: 0\")) throw new RuntimeException(e);", "-      else throw new UnexpectedException(e);", "-    }", "-    catch(RemoteException e) { throw new UnexpectedException(e); }", "+    _jvm = new MainJVM(workDir);", "-    ", "-    StringBuilder sb = new StringBuilder();", "-    if ((!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX)))) &&", "-        (!(OptionConstants.heapSizeChoices.get(0).equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX))))) {", "-      sb.append(\"-Xmx\");", "-      sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-      sb.append(\"M \");", "-    }", "-    sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "-    _jvm.setOptionArgs(sb.toString());", "-    ", "-    OptionListener<String> updateListener = new OptionListener<String>() {", "-      public void optionChanged(OptionEvent<String> oe) {", "-        StringBuilder sb = new StringBuilder();", "-        if ((!(\"\".equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX)))) &&", "-            (!(OptionConstants.heapSizeChoices.get(0).equals(DrJava.getConfig().getSetting(SLAVE_JVM_XMX))))) { ", "-          sb.append(\"-Xmx\");", "-          sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_XMX));", "-          sb.append(\"M \");", "-        }", "-        sb.append(DrJava.getConfig().getSetting(SLAVE_JVM_ARGS));", "-        _jvm.setOptionArgs(sb.toString());", "-      }", "-    };", "-    DrJava.getConfig().addOptionListener(SLAVE_JVM_ARGS, updateListener); ", "-    DrJava.getConfig().addOptionListener(SLAVE_JVM_XMX, updateListener); ", "-    // Note: starting the JVM in another thread does not appear to improve performance", "-//    AbstractMasterJVM._log.log(\"Starting the interpreter in \" + this);", "-    _jvm.startInterpreterJVM();", "+    new Thread(\"Start interpreter JVM\") {", "+      public void run() { _jvm.startInterpreterJVM(); }", "+    }.start();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50a91e85b027af59c43f2bf06da2fe8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "306d11e581599ee2cff211a0016c863bdb068462", "commitAfterChange": "cea46dd993e521d96771e5cfebb7a88bf25bb742", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public static void main(final String[] args)", "signatureAfterChange": "   public static void main(final String[] args)", "diff": ["+    ", "+    ", "+    // TODO: figure out how to move this code to createAndShowGUI; simply moving it", "+    //   fails because the splash icon is not found (different class loader?)", "+    // Show splash screen", "+    final SplashScreen splash = new SplashScreen();", "+    splash.setVisible(true);", "+        ", "+    // Schedule a job for the event-dispatching thread:", "+    // creating and showing this application's GUI.", "+    SwingUtilities.invokeLater(new Runnable() {", "+      public void run() { createAndShowGUI(args, splash); }", "+    });", "+  }  ", "-        // Show splash screen", "-        SplashScreen splash = new SplashScreen();", "-        splash.setVisible(true);", "-", "-        splash.dispose();"]}], "num": 582}