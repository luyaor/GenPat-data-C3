{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d9763b1b488e3f79a84905dd4123d197", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aceecda073420b95687571e8258631a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDocument.java", "commitBeforeChange": "ef8053d5a3d77032e160ea243be48b30918a9ff8", "commitAfterChange": "8a977371ad1fe621f24183ca1ab0253a154a0d13", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "    public void appendExceptionResult(String exceptionClass,                                     String message,                                     String stackTrace,                                     AttributeSet set)", "signatureAfterChange": "   public void appendExceptionResult(String exceptionClass,                                     String message,                                     String stackTrace,                                     AttributeSet set);", "diff": ["+   */", "-                                    AttributeSet set)", "-  {", "-    //writeLock();", "-    try {", "-", "-      if (null == message || \"null\".equals(message)) {", "-        message = \"\";", "-      }", "-", "-      insertString(getLength(), exceptionClass + \": \" + message + \"\\n\", set);", "-", "-      // An example stack trace:", "-      //", "-      // java.lang.IllegalMonitorStateException: ", "-      // at java.lang.Object.wait(Native Method)", "-      // at java.lang.Object.wait(Object.java:425)", "-      if (! stackTrace.trim().equals(\"\")) {", "-        BufferedReader reader=new BufferedReader(new StringReader(stackTrace));", "-        ", "-        String line;", "-        // a line is parsable if it has ( then : then ), with some", "-        // text between each of those", "-        while ((line = reader.readLine()) != null) {", "-          String fileName = null;", "-          int lineNumber = -1;", "-", "-          int openLoc = line.indexOf('(');", "-", "-          if (openLoc != -1) {", "-            int closeLoc = line.indexOf(')', openLoc + 1);", "-", "-            if (closeLoc != -1) {", "-              int colonLoc = line.indexOf(':', openLoc + 1);", "-              if ((colonLoc > openLoc) && (colonLoc < closeLoc)) {", "-                // ok this line is parsable!", "-                String lineNumStr = line.substring(colonLoc + 1, closeLoc);", "-                try {", "-                  lineNumber = Integer.parseInt(lineNumStr);", "-                  fileName = line.substring(openLoc + 1, colonLoc);", "-                }", "-                catch (NumberFormatException nfe) {", "-                  // do nothing; we failed at parsing", "-                }", "-              }", "-            }", "-          }", "-", "-          insertString(getLength(), line, set);", "-", "-          // OK, now if fileName != null we did parse out fileName", "-          // and lineNumber.", "-          // Here's where we'd add the button, etc.", "-          if (fileName != null) {", "-            /*", "-            JButton button = new JButton(\"go\");", "-            button.addActionListener(new ExceptionButtonListener(fileName,", "-                                                                 lineNumber));", "-", "-            SimpleAttributeSet buttonSet = new SimpleAttributeSet(set);", "-            StyleConstants.setComponent(buttonSet, button);", "-            insertString(getLength(), \"  \", null);", "-            insertString(getLength() - 1, \" \", buttonSet);", "-            */", "-            //JOptionPane.showMessageDialog(null, \"button in\");", "-            //insertString(getLength(), \" \", null);", "-            //JOptionPane.showMessageDialog(null, \"extra space\");", "-          }", "-", "-          //JOptionPane.showMessageDialog(null, \"\\\\n\");", "-          insertString(getLength(), \"\\n\", set);", "-", "-        } // end the while", "-      }", "-    }", "-    catch (IOException ioe) {", "-      // won't happen; we're readLine'ing from a String!", "-      throw new UnexpectedException(ioe);", "-    }", "-    catch (BadLocationException ble) {", "-      throw new UnexpectedException(ble);", "-    }", "-    finally {", "-      //writeUnlock();", "-    }", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab89ad06dc70abc916a035b30a07532c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsDJDocument.java", "commitBeforeChange": "fcaea018ddf37a9ab6028c8711b6c2d8ff9d638b", "commitAfterChange": "58d3703a31a86d869d5704beb1265e4c3b20ccb8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName)", "signatureAfterChange": "   public void appendExceptionResult(String message, String styleName)", "diff": ["-  public void appendExceptionResult(String exceptionClass, String message, String stackTrace, String styleName) {", "-    ", "-    String c = exceptionClass;", "-    if (c.indexOf('.') != -1) c = c.substring(c.lastIndexOf('.') + 1, c.length());", "-    ", "+  public void appendExceptionResult(String message, String styleName) {", "+    // Note that there is similar code in InteractionsDocument.  Something should be refactored.", "-    try {", "-      insertText(getLength(), c + \": \" + message + \"\\n\", styleName);", "-      ", "-      // An example stack trace:", "-      //", "-      // java.lang.IllegalMonitorStateException:", "-      // at java.lang.Object.wait(Native Method)", "-      // at java.lang.Object.wait(Object.java:425)", "-      if (! stackTrace.trim().equals(\"\")) {", "-        BufferedReader reader = new BufferedReader(new StringReader(stackTrace));", "-        ", "-        String line;", "-        // a line is parsable if it has ( then : then ), with some", "-        // text between each of those", "-        while ((line = reader.readLine()) != null) {", "-          String fileName;", "-          int lineNumber;", "-          ", "-          // TODO:  Why is this stuff here??", "-          int openLoc = line.indexOf('(');", "-          if (openLoc != -1) {", "-            int closeLoc = line.indexOf(')', openLoc + 1);", "-            ", "-            if (closeLoc != -1) {", "-              int colonLoc = line.indexOf(':', openLoc + 1);", "-              if ((colonLoc > openLoc) && (colonLoc < closeLoc)) {", "-                // ok this line is parsable!", "-                String lineNumStr = line.substring(colonLoc + 1, closeLoc);", "-                try {", "-                  lineNumber = Integer.parseInt(lineNumStr);", "-                  fileName = line.substring(openLoc + 1, colonLoc);", "-                }", "-                catch (NumberFormatException nfe) {", "-                  // do nothing; we failed at parsing", "-                }", "-              }", "-            }", "-          }", "-          ", "-          insertText(getLength(), line, styleName);", "-          ", "-          // OK, now if fileName != null we did parse out fileName", "-          // and lineNumber.", "-          // Here's where we'd add the button, etc.", "-          /*", "-           if (fileName != null) {", "-           JButton button = new JButton(\"go\");", "-           button.addActionListener(new ExceptionButtonListener(fileName, lineNumber));", "-           SimpleAttributeSet buttonSet = new SimpleAttributeSet(set);", "-           StyleConstants.setComponent(buttonSet, button);", "-           insertString(getLength(), \"  \", null);", "-           insertString(getLength() - 1, \" \", buttonSet);", "-           JOptionPane.showMessageDialog(null, \"button in\");", "-           insertString(getLength(), \" \", null);", "-           JOptionPane.showMessageDialog(null, \"extra space\");", "-           }*/", "-          ", "-          //JOptionPane.showMessageDialog(null, \"\\\\n\");", "-          insertText(getLength(), \"\\n\", styleName);", "-          ", "-        } // end the while", "-      }", "-    }", "-    catch (IOException ioe) { throw new UnexpectedException(ioe); }", "+    try { insertText(getLength(), message + \"\\n\", styleName); }", "-  }  ", "+  }"]}], "num": 9001}