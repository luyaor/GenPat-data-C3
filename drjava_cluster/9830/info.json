{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c410b02c1ada594ce24e788b789a8c24", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b9132bb8661925035c025befa4f1c43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "diff": ["+    else if (name.compareToIgnoreCase(\"create-jar-file\") == 0) {", "+      List<DocFile> fList = exp.getRest().accept(flv);", "+      if (fList.size() > 1) {", "+        throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "+      }", "+      else if (fList.size() == 0) {", "+        pfir.setCreateJarFile(null);", "+      }", "+      else {", "+        pfir.setCreateJarFile(fList.get(0));", "+      }", "+    }", "+    else if (name.compareToIgnoreCase(\"create-jar-flags\") == 0) {", "+      Integer i = exp.getRest().accept(NumberVisitor.ONLY);", "+      pfir.setCreateJarFlags(i);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3bc19b3c4c712ee352abf1c08d6fd13", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/newjvm/InterpreterJVM.java", "commitBeforeChange": "06a5c45ef1fc363387e831a72bae96256df629e8", "commitAfterChange": "d38c322133f95b0654ce8d1107bb215e7f56de2e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 42, "signatureBeforeChange": "   protected void _addClasspath(JavaInterpreter interpreter)", "signatureAfterChange": "   public void addBuildDirectoryClassPath(URL s)", "diff": ["-   */", "-  protected void _addClasspath(JavaInterpreter interpreter) {", "-    for (int i=0; i < _classpath.size(); i++) {", "-      interpreter.addClassPath(_classpath.get(i));", "-    }", "-  }", "+   */", "+  public void addBuildDirectoryClassPath(URL s) {", "+    //_dialog(\"add classpath: \" + s);", "+    if (_classpath.contains(s)) {", "+      // Don't add it again", "+      return;", "+    }", "+    ", "+    // Add to the default interpreter, if it is a JavaInterpreter", "+    if (_defaultInterpreter.getInterpreter() instanceof JavaInterpreter) {", "+      ((JavaInterpreter)_defaultInterpreter.getInterpreter()).addBuildDirectoryClassPath(s);", "+    }", "+    ", "+    // Add to any named JavaInterpreters to be consistent", "+    Enumeration<InterpreterData> interpreters = _interpreters.elements();", "+    while (interpreters.hasMoreElements()) {", "+      Interpreter interpreter = interpreters.nextElement().getInterpreter();", "+      if (interpreter instanceof JavaInterpreter) {", "+        ((JavaInterpreter)interpreter).addBuildDirectoryClassPath(s);", "+      }", "+    }", "+    ", "+    // Keep this entry on the accumulated classpath", "+    _classpath.add(s);", "+  }"]}], "num": 9830}