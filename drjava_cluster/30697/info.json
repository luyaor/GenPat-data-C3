{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d870c870455303825af60bfaa709f9bf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e8db3a071d197507a88891b9a3be9b7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/src-jsr14v2_0/edu/rice/cs/drjava/model/compiler/JSR14v20Compiler.java", "commitBeforeChange": "9f7616fd6847dd00d848676323dd2e5f5ac106c9", "commitAfterChange": "9ffaf267aed8adb3ea1a9aa4f99ce4ee78724acb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "      protected Context createContext(File[] sourceRoots)", "signatureAfterChange": "      protected Context createContext(File[] sourceRoots)", "diff": ["+  ", "-    ", "-    if(CompilerWarnings.SHOW_UNCHECKED) {", "-      options.put(\"-Xlint:unchecked\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_DEPRECATION) {", "-      options.put(\"-Xlint:deprecation\",\"\");", "-    }", "-", "-    if(CompilerWarnings.SHOW_PATH) {", "-      options.put(\"-Xlint:path\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_SERIAL) {", "-      options.put(\"-Xlint:serial\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_FINALLY) {", "-      options.put(\"-Xlint:finally\",\"\");", "-    }", "-    ", "-    if(CompilerWarnings.SHOW_FALLTHROUGH) {", "-      options.put(\"-Xlint:fallthrough\",\"\");", "-      options.put(\"-Xlint:switchcheck\",\"\"); //Some compilers appear to use this option instead. Anyone know anything about this?", "-    }", "-    ", "-    // Turn on debug -- maybe this should be setable some day?", "+    options.putAll(CompilerOptions.getOptions(_warningsEnabled));", "+    //Should be setable some day?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df1454f41edaf39d79e9fc6d5e9a802d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/JavacGJCompiler.java", "commitBeforeChange": "22b4c39d718130f293a6ada596d425525ecbc6e8", "commitAfterChange": "ed15f1e3933f222801a436b129bc84e5a740d057", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "     private void _initCompiler(File sourceRoot)", "signatureAfterChange": "    protected void initCompiler(File sourceRoot)", "diff": ["-", "-  private void _initCompiler(File sourceRoot) {", "-    _compilerLog = new OurLog();", "-", "-    // To use the GJ compiler, we build up the GJ options hashtable.", "-", "-    // Enable GJ extensions", "-    options.put(\"-gj\", \"\");", "-    _compiler = JavaCompiler.make(_compilerLog, options);", "+  protected void initCompiler(File sourceRoot) {", "+    Hashtable<String, String> options = createOptionsHashtable(sourceRoot);", "+", "+    // sigh, the 1.4 log won't work on 1.3 so we need to try the 1.4 first", "+    // and fall back to the 1.3", "+    try {", "+      compilerLog = new OurLog14();", "+    }", "+    catch (NoSuchMethodError error) {", "+      compilerLog = new OurLog13();", "+    }", "+", "+    //System.err.println(this + \": log=\" + compilerLog);", "+    compiler = JavaCompiler.make((Log) compilerLog, options);", "+  }"]}], "num": 30697}