{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e66d7419679c4f83fdfa373c5c545db", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c20b3b709b7b2b29ac2e3c354f5ace", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/docnavigation/JTreeSortNavigator.java", "commitBeforeChange": "b6148d8c1aaf55232aeac694d90234c9353139cd", "commitAfterChange": "536afaee0374767d0f8bdf572a332576e3f54467", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 49, "signatureBeforeChange": "   public String[] getCollapsedPaths()", "signatureAfterChange": "   public String[] getCollapsedPaths()", "diff": ["-      Enumeration<TreeNode> nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/", "+      // We use a raw type here because depthFirstEnumeration() has a raw type signature", "+      Enumeration nodes = rootNode.depthFirstEnumeration(); /** This warning is expected **/", "-        if (tn instanceof InnerNode && ((InnerNode)tn).isCollapsed()) {", "+        if (tn instanceof InnerNode && ((InnerNode<?, ?>)tn).isCollapsed()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b563c8f5d022f013d2540af01046b0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/DynamicJavaAdapter.java", "commitBeforeChange": "69d4590eff40914052a36cc82d8a74c43211028e", "commitAfterChange": "46bddad84804814dd0241cc4f939b2c8bb524e79", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "         protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException", "signatureAfterChange": "         protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException", "diff": ["-  protected Class loadClass(String name, boolean resolve) throws ClassNotFoundException{", "-    Class clazz;", "+  protected Class<?> loadClass(String name, boolean resolve) throws ClassNotFoundException{", "+    Class<?> clazz;", "-    if (classes.containsKey(name)) {", "-      clazz = (Class) classes.get(name);", "-    }", "+    if (classes.containsKey(name)) clazz = (Class<?>) classes.get(name);", "-    if (resolve) {", "-      resolveClass(clazz);", "-    }", "+    if (resolve) resolveClass(clazz);"]}], "num": 12463}