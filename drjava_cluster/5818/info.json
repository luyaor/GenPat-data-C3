{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8523ff658e26b8ae59b40e2cf01f0aa6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1198b8c54031b5263927c1c252b42ca3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicAnonymousInnerAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicAnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                              List<? extends Expression> args, List<Node> memb,                                               List<TypeName> targs,                                              String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicAnonymousInnerAllocation(Expression exp, String cn, List<? extends TypeName> ctargs,                                              List<? extends Expression> args, List<Node> memb,                                               List<TypeName> targs,                                              SourceInfo si)", "diff": ["-                                             String fn, int bl, int bc, int el, int ec) {", "-    super(exp, cn, ctargs, args, memb, fn, bl, bc, el, ec);", "+                                             SourceInfo si) {", "+    super(exp, cn, ctargs, args, memb, si);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d003223842e8f48e5cf380561d1b8e52", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/tiger/PolymorphicSimpleAllocation.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs,                                      String fn, int bl, int bc, int el, int ec)", "signatureAfterChange": "   public PolymorphicSimpleAllocation(ReferenceTypeName tp, List<? extends Expression> args,                                       List<TypeName> targs, SourceInfo si)", "diff": ["-                                     List<TypeName> targs,", "-                                     String fn, int bl, int bc, int el, int ec) {", "-    super(tp, args, fn, bl, bc, el, ec);", "+                                     List<TypeName> targs, SourceInfo si) {", "+    super(tp, args, si);"]}], "num": 5818}