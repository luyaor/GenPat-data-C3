{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b209a14f60273f49f4a930cc2f230ad2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "045712a4635770f3ad58d7543e99ffdf", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/IndentTest.java", "commitBeforeChange": "69c9884550bf4c7c91788f4d6006ee470704351d", "commitAfterChange": "a84ad1a0e810fabf34d99b6942e7d43f11aaebeb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testStartSpaceIndent () throws BadLocationException", "signatureAfterChange": "   public void testStartSpaceIndent () throws BadLocationException", "diff": ["-    doc.indentLine();", "+    doc.indentLines(doc.getCurrentLocation(), doc.getCurrentLocation());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daeda78fa435e9d0efa9551e47d1a7bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 44, "signatureBeforeChange": "          public void testForVariableDeclaration()", "signatureAfterChange": "          public void testForVariableDeclaration()", "diff": ["-      //make sure that if forVariableDeclaration is called with a AnonymousClassInstantiation, the symboldata is only added once.", "-      //this is to make sure an old bug stays fixed.", "-      SimpleAnonymousClassInstantiation basic = new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"Object\", new Type[0]), ", "-                                                                                      new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "-                                                                                      new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "+      // Confirm that if forVariableDeclaration is called with a AnonymousClassInstantiation, the symboldata is only ", "+      // added once. This is to make sure an old bug stays fixed.", "+      SimpleAnonymousClassInstantiation basic = ", "+        new SimpleAnonymousClassInstantiation(SourceInfo.NO_INFO, ", "+                                              new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                                              new ParenthesizedExpressionList(SourceInfo.NO_INFO, new Expression[0]),", "+                                              new BracedBody(SourceInfo.NO_INFO, new BodyItemI[0]));", "-      VariableDeclarator[] d1 = {new InitializedVariableDeclarator(SourceInfo.NO_INFO, new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), new Word(SourceInfo.NO_INFO, \"b\"), basic)};", "-      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NO_INFO,_publicMav, d1); ", "+      VariableDeclarator[] d1 = { ", "+        new InitializedVariableDeclarator(SourceInfo.NO_INFO, ", "+                                          new ClassOrInterfaceType(SourceInfo.NO_INFO, \"java.lang.Object\", new Type[0]), ", "+                                          new Word(SourceInfo.NO_INFO, \"b\"), basic)};", "+      ", "+      VariableDeclaration vd1 = new VariableDeclaration(SourceInfo.NO_INFO,PUBLIC_MAV, d1); ", "-        new ClassBodyIntermediateVisitor(_sd1, ", "+        new ClassBodyIntermediateVisitor(_sd1,", "+                                         _sd1.getName(),", "-                                         _iv._classNamesInThisFile, ", "-                                         _iv.continuations);", "+                                         _iv._classesInThisFile, ", "+                                         _iv.continuations,", "+                                         _iv.fixUps);", "-      "]}], "num": 15380}