{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "94c46777a8a0c42868dfbce4041ebbd9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43be290b3172bf8290ec2dd3d8aad38d", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public Node visit(SwitchStatement node)", "signatureAfterChange": "   public Object visit(SwitchStatement node)", "diff": ["-  public Node visit(SwitchStatement node) {", "-    Expression sel = (Expression) node.getSelector().acceptVisitor(this);", "+  public Object visit(SwitchStatement node) {", "+    Expression sel = (Expression)node.getSelector().acceptVisitor(this);", "-    LinkedList<SwitchBlock> cases = new LinkedList<SwitchBlock>(); // Add parameterization <Node>.", "-    Iterator<SwitchBlock> it = node.getBindings().iterator();", "+    LinkedList cases = new LinkedList(); // Add parameterization <Node>.", "+    Iterator it = node.getBindings().iterator();", "-      cases.add((SwitchBlock)it.next().acceptVisitor(this));", "+      cases.add((Node)((Node)it.next()).acceptVisitor(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2aa782288c2fee90caa699ef9d90b6b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/IdentityVisitor.java", "commitBeforeChange": "fe8cbcadc8194137c2479c12d0066ef99902fa72", "commitAfterChange": "9534991a742704e6d48a5e6976811d37ff43ac31", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": "     public Node visit(MethodDeclaration node)", "signatureAfterChange": "     public Object visit(MethodDeclaration node)", "diff": ["-    public Node visit(MethodDeclaration node) {", "+    public Object visit(MethodDeclaration node) {", "-      LinkedList<FormalParameter> parameters = new LinkedList<FormalParameter>(); // Add parameterization <Node>.", "-      Iterator<FormalParameter> it = node.getParameters().iterator();", "+      LinkedList parameters = new LinkedList(); // Add parameterization <Node>.", "+      Iterator it = node.getParameters().iterator();", "-        parameters.add((FormalParameter)it.next().acceptVisitor(this));", "+        parameters.add((Node)((Node)it.next()).acceptVisitor(this));"]}], "num": 29479}