{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "939f1b94effabb0374a740e7b3d7e038", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6e8f952746f0106aeaa21743ff7625", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "signatureAfterChange": "   public void testOpenMultipleNonexistentFiles() throws IOException", "diff": ["-    OpenDefinitionsDocument doc = null;", "-", "+    OpenDefinitionsDocument[] docs = null;", "-      doc = _model.openFiles(new FileSelector(tempFile1,", "-                                              new File(\"fake-file\")));", "+      docs = _model.openFiles(new FileSelector(tempFile1, new File(\"fake-file\")));", "-    assertTrue(\"one file was opened\", doc instanceof OpenDefinitionsDocument);", "+    assertTrue(\"one file was opened\", docs != null && docs.length == 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5c891a85d8113bc11c1fabbbf65ebc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   public void testOpenMultipleFilesError()", "signatureAfterChange": "   public void testOpenMultipleFilesError()", "diff": ["-    OpenDefinitionsDocument doc = null;", "+    OpenDefinitionsDocument[] docs = null;", "-      doc = _model.openFiles(new FileOpenSelector() {", "+      docs = _model.openFiles(new FileOpenSelector() {", "-      doc = _model.openFiles(new FileOpenSelector() {", "+      docs = _model.openFiles(new FileOpenSelector() {", "-    assertEquals(\"non-existant file\", doc, null);", "+    assertTrue(\"non-existant file\", docs == null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd181ddc68fc48fb7465abdbc35d51f3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelIOTest.java", "commitBeforeChange": "33b6c491d8495d13fb85f49f30d50967be376e1a", "commitAfterChange": "467c198d452cebe1711bbb01564c8c41d79d636a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 16, "signatureBeforeChange": "   public void testOpenNonexistentFile()     throws BadLocationException, IOException", "signatureAfterChange": "   public void testOpenNonexistentFile()     throws BadLocationException, IOException", "diff": ["+    OpenDefinitionsDocument doc = null;", "+", "-      _model.openFile(new FileSelector(new File(\"fake-file\")));", "+      doc = _model.openFile(new FileSelector(new File(\"fake-file\")));", "+    catch (OperationCanceledException oce) {", "+      // Should not be canceled", "+      fail(\"Open was unexpectedly canceled!\");", "+    }", "-    assertLength(0);", "-    assertModified(false);", "-  }", "+    assertEquals(\"non-existant file\", doc, null);"]}], "num": 15448}