{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad253c4c5731bc3f8735581c5adf9b52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae2032708494101b279f483886fc480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/FullJavaVisitor.java", "commitBeforeChange": "ce0ecf66ce1ecec7e4abe0bd534cf2fbbb576f91", "commitAfterChange": "4e52eec7688cbd5ec3584417f424923ba61a75e0", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 43, "signatureBeforeChange": "          public void testForClassDef()", "signatureAfterChange": "          public void testForClassDef()", "diff": ["-      _fv._package = \"myPackage\";", "+      ", "+      // Top-level init", "+      initTopLevel();", "+      ", "-      ", "-      SymbolData sd = LanguageLevelConverter.symbolTable.get(\"myPackage.Lisa\");", "+      SymbolData sd = LanguageLevelConverter.symbolTable.get(\"Lisa\");", "-      assertEquals(\"sd's package should be correct\", \"myPackage\", sd.getPackage());", "+      assertEquals(\"sd's package should be correct\", \"\", sd.getPackage());", "-      _fv._package = \"\";", "+      assert _fv._package == \"\";", "-      _fv._file=new File(\"TestSuper2.dj2\");", "+      _fv._file = new File(\"TestSuper2.dj2\");", "-      assertNotNull(\"Should have looked up TestSuper2\", LanguageLevelConverter.symbolTable.get(\"TestSuper2\"));", "+      assertNotNull(\"Should have looked up TestSuper2\", ", "+                    LanguageLevelConverter.symbolTable.get(\"TestSuper2\"));", "-      _fv._file=new File(\"TestVoidNoTestMethod.dj2\");", "+      _fv._file = new File(\"TestVoidNoTestMethod.dj2\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c136a3e2056dfe4332e4d45ac4f9e25e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "80f1de11eca64397e6c4771311a2a63da1189aed", "commitAfterChange": "b51ee0080da7d8cbad354c4c5be1a0e0e67cdc0a", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 101, "signatureBeforeChange": "          public void testGetSymbolDataForClassFile()", "signatureAfterChange": "          public void testGetSymbolDataForClassFile()", "diff": ["-                  testLLVisitor.getSymbolDataForClassFile(\"java.lang.String\", SourceInfo.NO_INFO).isContinuation());", "+                  LanguageLevelConverter.getSymbolDataForClassFile(\"java.lang.String\", null).isContinuation());", "-      assertEquals(\"Should return null with a user class that can't be found\",", "-                   null,", "-                   testLLVisitor.getSymbolDataForClassFile(\"Marge\", SourceInfo.NO_INFO));", "-      assertEquals(\"There should be one error\", 1, errors.size());", "-      assertEquals(\"The error message should be correct\", ", "-                   \"Class Marge not found.\", ", "-                   errors.get(0).getFirst());", "+      assertNull(\"Should return null with a user class that can't be found\",", "+                 LanguageLevelConverter.getSymbolDataForClassFile(\"Marge\", null));", "+//      assertEquals(\"There should be one error\", 1, errors.size());", "+//      assertEquals(\"The error message should be correct\", \"Class Marge not found.\", errors.get(0).getFirst());"]}], "num": 23176}