{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61d154046f832f00b389cdfc87475207", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f6350a6e40b07b78cfe9bc254d83819", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ClassDeclaration.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,                           SourceInfo si)", "signatureAfterChange": "   public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,                            List<? extends ReferenceTypeName> impl, List<Node> body, SourceInfo si)", "diff": ["-  public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext, List<? extends ReferenceTypeName> impl, List<Node> body,", "-                          SourceInfo si) {", "-    super(mods, name, impl, body, si);", "+  public ClassDeclaration(ModifierSet mods, String name, ReferenceTypeName ext,", "+                           List<? extends ReferenceTypeName> impl, List<Node> body, SourceInfo si) {", "+    this(mods, name, Option.<List<TypeParameter>>none(), ext, impl, body, si);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c039358da15abdf92e52df548c1445", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/ObjectMethodCall.java", "commitBeforeChange": "39e2920d14ed264a839ccdea3abc08c70e2f3686", "commitAfterChange": "a19132005c69f1e1c3d188a02393d88193cf6dde", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,                           SourceInfo si)", "signatureAfterChange": "   public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, SourceInfo si)", "diff": ["-  public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args,", "-                          SourceInfo si) {", "-    super(mn, args, si);", "+   */", "+  public ObjectMethodCall(Expression exp, String mn, List<? extends Expression> args, SourceInfo si) {", "+    this(exp, Option.<List<TypeName>>none(), mn, args, si);", "+  }"]}], "num": 2219}