{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bba68eda23a0d91a1000708ca47c2955", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72029776905434018326f7d911a0cfd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 235, "methodNumberAfterChange": 234, "signatureBeforeChange": "   public void systemErrPrint(final String s)", "signatureAfterChange": "   public void systemErrPrint(String s)", "diff": ["-  /** Prints System.err to the DrJava console.  This method can safely be run outside the event thread. */", "-  public void systemErrPrint(final String s) { ", "-    Utilities.invokeLater(new Runnable() {", "-      public void run() { _docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_ERR_STYLE); }", "-    });", "-  }", "+  /** Prints System.err to the DrJava console. */", "+  public void systemErrPrint(String s) { _docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_ERR_STYLE); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2446abedc5a36feff08188a0fa4956", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 237, "methodNumberAfterChange": 235, "signatureBeforeChange": "   public void systemInEcho(final String s)", "signatureAfterChange": "   public void systemInEcho(String s)", "diff": ["-    */", "-  public void systemInEcho(final String s) { ", "-    Utilities.invokeLater(new Runnable() {", "-      public void run() { _docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_IN_STYLE); }", "-    });", "-  }", "+  /** Prints the given string to the DrJava console as an echo of System.in */", "+  public void systemInEcho(String s) { _docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_IN_STYLE); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dddbd0d4b719c7abc00722f39fb26bd9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "signatureAfterChange": "   private void _rawJUnitOpenDefDocs(List<OpenDefinitionsDocument> lod, boolean allTests)", "diff": ["-      throw new UnexpectedException(e); // triggers _junitInterrupted which runs hourglassOff", "+      throw new UnexpectedException(e); ", "+//    finally { ", "+//      new ScrollableDialog(null, \"junit setup loop terminated\", classNames.toString(), \"\").show();", "+//    }", "-     try {  /** Run the junit test suite that has already been set up on the slave JVM */", "-        _testInProgress = true;", "-        ", "-        // notify listeners that JUnit testing has finally started!", "-        Utilities.invokeLater(new Runnable() { public void run() { _notifier.junitStarted(); } });", "-        ", "+      try {", "+        /** Run the junit test suite that has already been set up on the slave JVM */", "+        _notifier.junitStarted(); // notify listeners that JUnit testing has finally started!", "+        //          new ScrollableDialog(null, \"junitStarted executed in DefaultJunitModel\", \"\", \"\").show();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2640df4a3bfb55a684e10c391c9a278", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": "   public void systemOutPrint(final String s)", "signatureAfterChange": "   public void systemOutPrint(String s)", "diff": ["-  /** Prints System.out to the DrJava console.  This method can safely be run outside the event thread. */", "-  public void systemOutPrint(final String s) { ", "-    Utilities.invokeLater(new Runnable() {", "-      public void run() { _docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_OUT_STYLE); }", "-    });", "-  }", "+  /** Prints System.out to the DrJava console. */", "+  public void systemOutPrint(String s) {_docAppend(_consoleDoc, s, ConsoleDocument.SYSTEM_OUT_STYLE); }"]}], "num": 11449}