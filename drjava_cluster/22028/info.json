{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3874e1a6898d9eace9ff2deb0c4ae469", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6e7ad841612462270a96bc5182eec6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/DrJava.java", "commitBeforeChange": "6dc623f6cf84dd216f6949b3ebdd52b19c8912b4", "commitAfterChange": "3bfda0ffd8a22eda2f2daab913b510305e1ef801", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static void addFileToOpen(String s)", "signatureAfterChange": "   public static synchronized void addFileToOpen(String s)", "diff": ["-  public static void addFileToOpen(String s) {", "+  public static synchronized void addFileToOpen(String s) {", "+    if (_doRestart && _alreadyRestarted) {", "+      _log.log(\"addFileToOpen: already done the restart, trying to use remote control\");", "+      // we already did the restart, try to use the remote control to open the file", "+      if (DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.REMOTE_CONTROL_ENABLED)) {", "+        _log.log(\"\\tremote control...\");", "+        openWithRemoteControl(_filesToOpen,NUM_REMOTE_CONTROL_RETRIES );", "+        _log.log(\"\\tclearing _filesToOpen\");", "+        clearFilesToOpen();", "+      }", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97dc28f88c3e868b066f3fd7d7942579", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/DefaultGlobalModel.java", "commitBeforeChange": "ecd8712b87b08f04e81a172c17c295c61485659a", "commitAfterChange": "e240585fa71c6cba067e4f383e2111594b5db4e4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "signatureAfterChange": "         private Iterable<JDKToolsLibrary> findLibraries()", "diff": ["-    Map<JavaVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion, JDKToolsLibrary>();", "+    Map<JavaVersion.FullVersion, JDKToolsLibrary> results = new TreeMap<JavaVersion.FullVersion, JDKToolsLibrary>();", "-      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion(), fromConfig); }", "+      if (fromConfig.isValid()) { results.put(fromConfig.version().majorVersion().fullVersion(), fromConfig); }", "-    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion, fromRuntime); }", "+    if (fromRuntime.isValid() && !results.containsKey(runtimeVersion)) { results.put(runtimeVersion.fullVersion(), fromRuntime); }", "-      JavaVersion tVersion = t.version().majorVersion();", "-      // guaranteed to be valid", "+      JavaVersion.FullVersion tVersion = t.version();", "+      if (!DrJava.getConfig().getSetting(edu.rice.cs.drjava.config.OptionConstants.DISPLAY_ALL_COMPILER_VERSIONS).booleanValue()) {", "+        tVersion = tVersion.majorVersion().fullVersion();", "+      }"]}], "num": 22028}