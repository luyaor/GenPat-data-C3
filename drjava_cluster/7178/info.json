{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31b4859e49c6162759d9c83b0bd36ff9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "509ec7c2554ab74e341d0155c128b171", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 57, "signatureBeforeChange": "   public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "signatureAfterChange": "   public int _getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)", "diff": ["-  public int getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "-", "-//    Utilities.show(\"getIdentOfCurrentStmt(\" + pos + \", \" + Arrays.toString(delims) + \", \" + Arrays.toString(whitespace) +", "-//      \")\");", "-", "+  public int _getIndentOfCurrStmt(final int pos, final char[] delims, final char[] whitespace)  {", "+    assert isReadLocked();", "-    acquireReadLock();", "+//    acquireReadLock();", "-        int lineStart = getLineStartPos(pos);  // returns 0 for initial line", "+        int lineStart = _getLineStartPos(pos);  // returns 0 for initial line", "-        int prevDelim = findPrevDelimiter(lineStart, delims, /* skipBracePhrases */ true);", "+        int prevDelim = _findPrevDelimiter(lineStart, delims, /* skipBracePhrases */ true);", "-        if (reachedStart) nextNonWSChar = getFirstNonWSCharPos(0);", "-        else nextNonWSChar = getFirstNonWSCharPos(prevDelim + 1, whitespace, false);", "+        if (reachedStart) nextNonWSChar = _getFirstNonWSCharPos(0);", "+        else nextNonWSChar = _getFirstNonWSCharPos(prevDelim + 1, whitespace, false);", "-        int newLineStart = getLineStartPos(nextNonWSChar);", "+        int newLineStart = _getLineStartPos(nextNonWSChar);", "-        int firstNonWS = getLineFirstCharPos(newLineStart);", "+        int firstNonWS = _getLineFirstCharPos(newLineStart);", "-    catch(Exception e) { throw new UnexpectedException(e); }", "-    finally { releaseReadLock(); }", "+    catch(BadLocationException e) { throw new UnexpectedException(e); }", "+//    finally { releaseReadLock(); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cbd26b32ded8bcecb60f2f456d591c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public int findCharOnLine(final int pos, final char findChar)", "signatureAfterChange": "   public int findCharOnLine(final int pos, final char findChar)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "+//    acquireReadLock();", "-        int lineStart = getLineStartPos(pos);", "-        int lineEnd = getLineEndPos(pos);", "+        int lineStart = _getLineStartPos(pos);", "+        int lineEnd = _getLineEndPos(pos);", "-          if (_reduced.getStateAtCurrent().equals(FREE)) break; // found matching char", "+          if (_reduced._getStateAtCurrent().equals(FREE)) break; // found matching char", "-    catch (Throwable t) { throw new UnexpectedException(t); }", "-    finally { releaseReadLock(); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+//    finally { releaseReadLock(); }"]}], "num": 7178}