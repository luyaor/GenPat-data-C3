{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "310941f54f5336ebfb7a4a67d788e278", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02adccba9570d475aab687a275e9a30a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testConstructOneDocWithBoth()", "signatureAfterChange": "   public void testConstructOneDocWithBoth()", "diff": ["-      new CompilerError(files[0], \"Test warning with File\", true),", "+      new CompilerError(files[0], \"Test warning with File (no line)\", true),", "-      new CompilerError(\"Test error without File\", false),", "+      new CompilerError(\"Test error without File or line\", false),", "-      new CompilerError(files[0], \"Test error with File\", false),", "+      new CompilerError(files[0], \"Test error with File (no line)\", false),", "+    assertEquals(\"Should have 2 warnings\" , 2, model.getNumWarnings());", "+    assertEquals(\"Should have 5 compiler errors\" , 5, model.getNumCompErrors());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b58a6b81c353a414c743c0375c9bd5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerErrorModelTest.java", "commitBeforeChange": "3fffab849ca2a182947577f4918deb05255be914", "commitAfterChange": "37e723fa34df1bc3afa5f0896241b32a56e4dde5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public void testConstructDoclessErrors()", "signatureAfterChange": "   public void testConstructDoclessErrors()", "diff": ["-    { new CompilerError(\"Test error without File\", false),", "+    { new CompilerError(\"Test error without File\",false),", "-      new CompilerError(\"Test error without File\", false) };", "+      new CompilerError(\"Test error without File\",false) };", "+    assertEquals(\"Should have 1 warning\" , 1, model.getNumWarnings());", "+    assertEquals(\"Should have 2 compiler errors\" , 2, model.getNumCompErrors());"]}], "num": 246}