{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ec4a360ce019929e9392557f7faf1b5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a59c16f431f517faf76e0a0bd506c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/DebugManager.java", "commitBeforeChange": "ddcbad2909e9c9411b7283368e21d7790422a21d", "commitAfterChange": "6989dd5fc1f06c1a4b2b298e19233d706afa3d5c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "   public synchronized void resume()", "signatureAfterChange": "   public synchronized void resume()", "diff": ["-    _thread.resume();", "+    ", "+    int suspendCount = _thread.suspendCount();", "+    for (int i=suspendCount; i>0; i--) {", "+      _thread.resume();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4d46d6f630e9b8e8ea6cb8c5d096f0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/AFindReplaceMachineState.java", "commitBeforeChange": "2ce092662f68aa401d3206a9a3bf36bc4d9e733f", "commitAfterChange": "420215825e681a0b291c00f3cf7aa39a982faffe", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "   public int replaceAll()", "signatureAfterChange": "   public int replaceAll()", "diff": ["-      while (startDoc != _doc) {", "+      int n = _docIterator.getDocumentCount();", "+      for (int i=0; i < n; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d88c6e020f454686a19bacd9690777e7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/CompoundUndoManager.java", "commitBeforeChange": "6e00bd0fe78b22f9b84f30182d050c16081947ef", "commitAfterChange": "d6801eea8d321f3e0015cdd20a1cba75837384cb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "   private synchronized void endCompoundEdit()", "signatureAfterChange": "   private synchronized void endCompoundEdit()", "diff": ["+    Integer[] keys = _keys.toArray(new Integer[_keys.size()]);  // unit testing ran into a concurrent modification exception without this copying operation", "-      while (_keys.size() > 0) {", "-        endCompoundEdit(_keys.get(0).intValue());", "-      }", "+      for (int key: keys) endCompoundEdit(key);"]}], "num": 9166}