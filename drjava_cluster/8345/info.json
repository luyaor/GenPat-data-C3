{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4a18416260b363c206cfedcea9fe1ccd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cf080849e77e08698122e6554b97bf7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/newjvm/AbstractSlaveJVM.java", "commitBeforeChange": "e0e957550963e046bdbb3a11cc062ff5ce5c9c2b", "commitAfterChange": "352ab0c5cf34f4d7d353be5572fce1e1db9f5d64", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected void quitFailed(Exception e)", "signatureAfterChange": "   protected void quitFailed(Throwable th)", "diff": ["-  protected void quitFailed(Exception e) {}", "+  protected void quitFailed(Throwable th) {}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11d57cf193d45e3f29fd128b96504b9f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "e90dbd1bb170d6fe2e453ef725d9c5a3af468fcc", "commitAfterChange": "e653942b63325e47383bb429e833afeb308dbf22", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public ProjectFileIRImpl(SourceTag st, ResourceTag rt, MiscTag mt, ClasspathTag ct, JarTag jt)", "signatureAfterChange": "          public ProjectFileIRImpl(SourceTag st, ResourceTag rt, BuildDirTag bt, ClasspathTag ct, JarTag jt)", "diff": ["-    public ProjectFileIRImpl(SourceTag st, ResourceTag rt, MiscTag mt, ClasspathTag ct, JarTag jt) {", "+    public ProjectFileIRImpl(SourceTag st, ResourceTag rt, BuildDirTag bt, ClasspathTag ct, JarTag jt) {", "-      _misc = mt;", "+      _builddir = bt;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1498f87cbf92e317a172f743eaff2916", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "6c6fe22234a544222e50fad914877709f92f8614", "commitAfterChange": "eb8f1a08f585431afff35aec705cfd9169bfce44", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "signatureAfterChange": "   public boolean closeFileWithoutPrompt(final OpenDefinitionsDocument doc)", "diff": ["-    _breakpointManager.clearRegions();", "-    _bookmarkManager.clearRegions();", "+    _breakpointManager.removeRegions(doc);", "+    _bookmarkManager.removeRegions(doc);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "189bac411ad2863123a841b3db527480", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorStringComponent.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "    public void setEnabled(boolean enabled)", "signatureAfterChange": "    public void setEnabled(boolean isEnabled)", "diff": ["-  public void setEnabled(boolean enabled) {", "-    _textField.setEnabled(enabled);", "-    _chooserButton.setEnabled(enabled);", "-    super.setEnabled(enabled);", "+  public void setEnabled(boolean isEnabled) {", "+    _textField.setEnabled(isEnabled);", "+    _chooserButton.setEnabled(isEnabled);", "+    super.setEnabled(isEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e6084aeb580aa95aee9e22a99aa7963", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/DefinitionsPane.java", "commitBeforeChange": "a8db062e8dfd667df6324c059f7a6725afc99a1b", "commitAfterChange": "35da9b77b7d75aca3d6277e27e3ba3dc86f3eaa9", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "   public void setDocument(Document doc)", "signatureAfterChange": "   public void setDocument(Document d)", "diff": ["-  public void setDocument(Document doc){", "-    if (_doc != null) {", "-      if ((doc == null) || (!doc.equals(_doc))) {", "-        throw new IllegalStateException(\"Cannot set the document of \" +", "-                                        \"a DefinitionsPane to a \" +", "+  public void setDocument(Document d) {", "+    if (_doc != null) {  // When can _doc be null?", "+      if ((d == null) || (!d.equals(_doc))) {", "+        throw new IllegalStateException(\"Cannot set the document of \" + \"a DefinitionsPane to a \" +", "-    super.setDocument(doc);", "+    super.setDocument(d);  // If _doc is null should we do this?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c35837050fa3932c3b7d5475635554a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "b8bd7d0442cc5ba7e76504cb9896cbfabd4d129a", "commitAfterChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay)", "signatureAfterChange": "   public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay)", "diff": ["-  public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay) {", "-    _document = new InteractionsDocument(adapter, historySize);", "+  public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay) {", "+    _document = new InteractionsDocument(cDoc, historySize);", "-    _adapter = adapter;", "+    _cDoc = cDoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d992e8aee4b9dc074a4fae9d6b6ba4b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/JUnitError.java", "commitBeforeChange": "90f3515e98e577591a6618f1cf8f59bee5e6c509", "commitAfterChange": "1acb7e79f21833d9f8611e81be6afdbc403d9516", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JUnitError(File file, int lineNumber, int startColumn, String message,       boolean isError, String test, String stackTrace)", "signatureAfterChange": "   public JUnitError(String fileName, int lineNumber, int startColumn, String message,       boolean isError, String test, String stackTrace)", "diff": ["-  public JUnitError(File file, int lineNumber, int startColumn, String message,", "+  public JUnitError(String fileName, int lineNumber, int startColumn, String message,", "-    _file = file;", "+    _fileName = fileName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f64318bfe19f4d14c6ae8ba02a9a7b9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "7bb32c28070a4b5d5697c7c88ea0d664289c76e8", "commitAfterChange": "b2ad80c49aaa09f293a5bc1f6664d4cc5243219e", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 51, "signatureBeforeChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument activeDoc)", "signatureAfterChange": "   private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc)", "diff": ["+   */", "+  private JScrollPane _createDefScrollPane(OpenDefinitionsDocument doc) {", "+    DefinitionsPane pane = new DefinitionsPane(this, _model, doc);", "+    JScrollPane scroll = new JScrollPane(pane,", "+                                         JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "+                                         JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "+    _defScrollPanes.put(doc, scroll);", "+    return scroll;", "+  }", "-   */", "-  private JScrollPane _createDefScrollPane(OpenDefinitionsDocument activeDoc) {", "-    DefinitionsPane pane = new DefinitionsPane(this, _model, activeDoc);", "-    JScrollPane scroll = new JScrollPane(pane,", "-                                         JScrollPane.VERTICAL_SCROLLBAR_ALWAYS,", "-                                         JScrollPane.HORIZONTAL_SCROLLBAR_NEVER);", "-    _defScrollPanes.add(scroll);", "-    return scroll;", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d7cc5a5cbf8c799309d46b1fab44c7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "commitAfterChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay)", "signatureAfterChange": "   public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay)", "diff": ["-  public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay) {", "-    _document = new InteractionsDocument(cDoc, historySize);", "+  public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay) {", "+    _document = new InteractionsDocument(adapter, historySize);", "-    _cDoc = cDoc;", "+    _adapter = adapter;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "687f25a4a23d6916c1221eef52c9d3bb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/JavaCCParser.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public JavaCCParser(InputStream is, String fname)", "signatureAfterChange": "      public JavaCCParser(InputStream is, File f)", "diff": ["-   */", "-  public JavaCCParser(InputStream is, String fname) {", "+  public JavaCCParser(InputStream is, File f) {", "-    parser.setFilename(fname);", "+    parser.setFile(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774768171fd51195f1fb17c0414365d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/parser/wrapper/JavaCCParser.java", "commitBeforeChange": "d7e29fae36890273cb02f65a4dcc06babb1b1e53", "commitAfterChange": "40502fe8d6d2aa924af9e28579518088d3c23148", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "   public JavaCCParser(Reader r, String fname)", "signatureAfterChange": "      public JavaCCParser(Reader r, File f)", "diff": ["-   */", "-  public JavaCCParser(Reader r, String fname) {", "+  ", "+  public JavaCCParser(Reader r, File f) {", "-    parser.setFilename(fname);", "+    parser.setFile(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c7aaee17d1b80d6812924ed96589610", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   public void setEnabled(boolean enabled)", "signatureAfterChange": "   public void setEnabled(boolean isEnabled)", "diff": ["-  public void setEnabled(boolean enabled) {", "-    boolean old = _enabled;", "-    super.setEnabled(enabled);", "+  public void setEnabled(boolean isEnabled) {", "+    boolean old = _isEnabled;", "+    super.setEnabled(isEnabled);", "-        bpr.setEnabled(enabled);", "+        bpr.setEnabled(isEnabled);", "-    if (_enabled!=old) _manager._notifier.breakpointChanged(this);", "+    if (_isEnabled!=old) _manager._notifier.breakpointChanged(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0fbebbb11dd8754efe0dbda25a1064f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/debug/Breakpoint.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public Breakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean enabled, JPDADebugger manager)     throws DebugException", "signatureAfterChange": "   public Breakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)     throws DebugException", "diff": ["-  public Breakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean enabled, JPDADebugger manager)", "+  public Breakpoint(OpenDefinitionsDocument doc, int offset, int lineNumber, boolean isEnabled, JPDADebugger manager)", "-    _enabled = enabled;", "+    _isEnabled = isEnabled;", "-      setEnabled(enabled);", "+      setEnabled(isEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e31223a5fc5ec4945ec0b09672fb41", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "7363b79c6228b3bbffbaa22283c3045a27a3cedc", "commitAfterChange": "74a15c017d574b2ee2a0cdeaaedeea00825a0c5e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay)", "signatureAfterChange": "   public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay)", "diff": ["-  public InteractionsModel(ConsoleDocumentInterface adapter, File wd, int historySize, int writeDelay) {", "-    _document = new InteractionsDocument(adapter, historySize);", "+  public InteractionsModel(ConsoleDocumentInterface cDoc, File wd, int historySize, int writeDelay) {", "+    _document = new InteractionsDocument(cDoc, historySize);", "-    _adapter = adapter;", "+    _cDoc = cDoc;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb8dbe1a8d121d71cd69095c7eed4ad5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "d1a5d27cb22a5cf8891a6811cdc476b60834d1c0", "commitAfterChange": "eb9337b4d6e2d2de4c1774413f08dfb947ae389c", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": "      public void junitTestEnded(final String name, final boolean wasSuccessful,                                final boolean causedError)", "signatureAfterChange": "      public void junitTestEnded(final String name, final boolean succeeded, final boolean causedError)", "diff": ["-    public void junitTestEnded(final String name, final boolean wasSuccessful,", "-                               final boolean causedError) {", "-      // new ScrollableDialog(null, \"junitEnded(\" + name + \", \" + wasSuccessful + \", \" + causedError + \") called in MainFrame\", \"\", \"\").show();", "+    public void junitTestEnded(final String name, final boolean succeeded, final boolean causedError) {", "+//      new ScrollableDialog(null, \"junitTestEnded(\" + name + \", \" + succeeded + \", \" + causedError + \")\", \"\", \"\").show();", "-      SwingUtilities.invokeLater(new Runnable() {", "+      Utilities.invokeLater(new Runnable() {", "-           testEnded(name, wasSuccessful, causedError); // this does nothing!", "-          _junitErrorPanel.progressStep(wasSuccessful);", "+           testEnded(name, succeeded, causedError); // this does nothing!", "+          _junitErrorPanel.progressStep(succeeded);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6f12cb23aadc4f02cb4b9b8938c6fe", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/DefinitionsDocument.java", "commitBeforeChange": "fe10ec3049d7833e404492f382e59e4a2bb44b0e", "commitAfterChange": "ac147bfd47d7e558bfd3f0afa39ad091a35b6f6f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException", "signatureAfterChange": "   public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException", "diff": ["-  public String getEnclosingClassName(int pos, boolean fullyQualified) throws BadLocationException, ClassNameNotFoundException {    ", "+  public String getEnclosingClassName(int pos, boolean qual) throws BadLocationException, ClassNameNotFoundException {    ", "-    keyBuf.append(\":\").append(fullyQualified);", "+    keyBuf.append(\":\").append(qual);", "-//      if (oldLog) System.out.println(\"curPos=\"+curPos+\" `\"+text.substring(Math.max(0,curPos-10), Math.min(text.length(), curPos+1))+\"`\");", "+//      if (oldLog) System.out.println(\"curPos=\" + curPos + \" `\" +", "+//        text.substring(Math.max(0,curPos-10), Math.min(text.length(), curPos+1)) + \"`\");", "-//        if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\" `\"+text.substring(Math.max(0,otherPos-10),otherPos+1)+\"`\");", "+//        if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\" `\" +", "+//          text.substring(Math.max(0,otherPos-10),otherPos+1)+\"`\");", "-//            if (closeParenPos!=ERROR_INDEX) if (oldLog) System.out.println(\"nonWS before curPos = \"+closeParenPos+\" `\"+text.charAt(closeParenPos)+\"`\");", "+//            if (closeParenPos!=ERROR_INDEX) if (oldLog) System.out.println(\"nonWS before curPos = \" + closeParenPos + ", "+//              \" `\"+text.charAt(closeParenPos)+\"`\");", "-//                if (oldLog) System.out.println(\"\\tnew found at \"+newPos+\", openSquigglyPos=\"+curPos);", "+//                if (oldLog) System.out.println(\"\\tnew found at \" + newPos + \", openSquigglyPos=\" + curPos);", "-//            if (oldLog) System.out.println(\"curPos=\"+curPos+\" `\"+text.substring(Math.max(0,curPos-10),curPos+1)+\"`\");", "-//            if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\" `\"+text.substring(Math.max(0,otherPos-10),otherPos+1)+\"`\");", "+//            if (oldLog) System.out.println(\"curPos=\" +curPos+\" `\"+text.substring(Math.max(0,curPos-10),curPos+1)+\"`\");", "+//            if (oldLog) System.out.println(\"\\tclass=\"+classPos+\", inter=\"+interPos+\", other=\"+otherPos+\" `\"+", "+//              text.substring(Math.max(0,otherPos-10),otherPos+1)+\"`\");", "-      } while(fullyQualified);", "+      } while(qual);", "-    if (fullyQualified) {", "+    if (qual) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1be2b60177d1719367594d50c66f683", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FileSelectorComponent.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "    public void setEnabled(boolean enabled)", "signatureAfterChange": "    public void setEnabled(boolean isEnabled)", "diff": ["-  public void setEnabled(boolean enabled) {", "-    _fileField.setEnabled(enabled);", "-    _chooserButton.setEnabled(enabled);", "-    super.setEnabled(enabled);", "+  public void setEnabled(boolean isEnabled) {", "+    _fileField.setEnabled(isEnabled);", "+    _chooserButton.setEnabled(isEnabled);", "+    super.setEnabled(isEnabled);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3964d659b0ccebfd5e7a05a9316640e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/compiler/CompilerError.java", "commitBeforeChange": "2d9fbb20cf4e5abce48c17ce73e0b3fc145a0b02", "commitAfterChange": "a38cc404cfc20c15b821e4ab4c91fac16fc2e12b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public CompilerError(String fileName, int lineNumber, int startColumn, String message,        boolean isWarning)", "signatureAfterChange": "   public CompilerError(File file, int lineNumber, int startColumn, String message,       boolean isWarning)", "diff": ["-  public CompilerError(String fileName, int lineNumber, int startColumn, String message, ", "+  public CompilerError(File file, int lineNumber, int startColumn, String message,", "-    _fileName = fileName;", "+    _file = file;", "+    _message = message;", "+    _isWarning = isWarning;", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c9391e662dc39f17661f0cd32dc037", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/DirectorySelectorComponent.java", "commitBeforeChange": "14164b6a15fd606e897810fd89f2e7edec0280c4", "commitAfterChange": "52c187d5d51895f0b58a56680e35117f80ff45ef", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "    public void setEnabled(boolean enabled)", "signatureAfterChange": "    public void setEnabled(boolean isEnabled)", "diff": ["-  public void setEnabled(boolean enabled) {", "-    _fileField.setEnabled(enabled);", "-    _chooserButton.setEnabled(enabled);", "-    super.setEnabled(enabled);", "+  public void setEnabled(boolean isEnabled) {", "+    _fileField.setEnabled(isEnabled);", "+    _chooserButton.setEnabled(isEnabled);", "+    super.setEnabled(isEnabled);"]}], "num": 8345}