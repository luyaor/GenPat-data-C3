{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84c998c8128b991784c9259c8e062397", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "072dbc95c5e1b75916d9b9d73b24afb9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a1053bf24d774013433fb8163a6dc9", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelJUnitTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   public void testInfiniteLoop() throws Exception", "signatureAfterChange": "   public void testInfiniteLoop() throws Exception", "diff": ["-    _model.setResetAfterCompile(false);", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    // Doesn't reset interactions because interpreter is not used", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5497e7a25a657a26c595fe18c2c92f28", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileActiveSavedAnyUnsavedButSaveWhenAsked()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-    //synchronized(listener) {", "-      doc.startCompile();", "-      if (_model.getNumErrors() > 0) {", "-        fail(\"compile failed: \" + getCompilerErrorString());", "-      }", "-      //listener.wait();", "-    //}", "+    doc.startCompile();", "+    if (_model.getNumErrors() > 0) {", "+      fail(\"compile failed: \" + getCompilerErrorString());", "+    }", "-    ", "-    _model.setResetAfterCompile(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceeefb0ff19e4ffbc1cf476efde66688", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/GlobalModelCompileTest.java", "commitBeforeChange": "ac74694bc04d721627e42d2b643f6ad2c115d536", "commitAfterChange": "292a7b0b5fa9ea11914642715c7c5f691490df9f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "signatureAfterChange": "   public void testCompileWithJavaAssert()     throws BadLocationException, IOException, InterruptedException", "diff": ["-    _model.setResetAfterCompile(false);", "-    ", "-      //synchronized(listener2) {   ", "-        doc.startCompile();", "-        if (_model.getNumErrors() > 0) {", "-          fail(\"compile failed: \" + getCompilerErrorString());", "-        }", "-        //listener2.wait();", "-      //}", "+      doc.startCompile();", "+      if (_model.getNumErrors() > 0) {", "+        fail(\"compile failed: \" + getCompilerErrorString());", "+      }", "-    ", "-    _model.setResetAfterCompile(true);"]}], "num": 12741}