{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88f5175b2c591e21886a75d685231680", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00defd0fb0c240a93185f354b96809f2", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "0c9c5a75525682387d63b99c765334c10ec1f0a7", "commitAfterChange": "623dbae8bf369adeb4e3b2a78ab2b5a3f4b29e9b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-      if (!_checkInteraction(text)) {", "-        return;", "+      try {", "+//        _checkInteraction(text);", "+        toEval = _interactionsProcessor.preProcess(toEval);", "+", "+        _prepareToInterpret(text);", "+        interpret(toEval);", "-", "-      // there is no return at the end of the last line", "-      // better to put it on now and not later.", "-      _docAppend(_newLine, InteractionsDocument.DEFAULT_STYLE);", "-", "-      _notifyInteractionStarted();", "-", "-      _document.setInProgress(true);", "-      _document.addToHistory(text);", "-", "-      interpret(toEval);", "+      catch (ParseException pe) {", "+        // A ParseException indicates a syntax error in the input window", "+        String errMsg = pe.getInteractionsMessage();", "+//        javax.swing.JOptionPane.showMessageDialog(null, \"ParseException:\\n\" + errMsg);", "+        if (errMsg.endsWith(\"<EOF>\\\"\")) {", "+          _notifier.interactionIncomplete();", "+        }", "+        else {", "+          _prepareToInterpret(text);", "+          replReturnedSyntaxError(errMsg, text, pe.getBeginLine(),", "+                                  pe.getBeginColumn(), pe.getEndLine(), pe.getEndColumn());", "+        }", "+      }", "+      catch (TokenMgrError tme) {", "+        // A TokenMgrError indicates some lexical difficulty with input.", "+//        javax.swing.JOptionPane.showMessageDialog(null, \"TokenMgrError:\\n\" + tme.getMessage());", "+        _prepareToInterpret(text);", "+        int row = tme.getErrorRow();", "+        int col = tme.getErrorColumn() - 1;", "+        replReturnedSyntaxError(tme.getMessage(), text, row, col, row, col);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf2ebab6ced51be243332da8dbf426f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/repl/InteractionsModel.java", "commitBeforeChange": "d86f285f67e4f6710d1cc904d1f552e6a6a92520", "commitAfterChange": "f631b97f7a46e37b22216cbc1b865ac25185f25a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "   public void interpretCurrentInteraction()", "signatureAfterChange": "   public void interpretCurrentInteraction()", "diff": ["-      try {", "+//      try {", "-        toEval = _interactionsProcessor.preProcess(toEval);", "+//        toEval = _interactionsProcessor.preProcess(toEval);", "-        _prepareToInterpret(text);", "-        interpret(toEval);", "-      }", "-      catch (ParseException pe) {", "-        // A ParseException indicates a syntax error in the input window", "-        String errMsg = pe.getInteractionsMessage();", "-//        javax.swing.JOptionPane.showMessageDialog(null, \"ParseException:\\n\" + errMsg);", "-        if (errMsg.endsWith(\"<EOF>\\\"\")) {", "-          _notifyInteractionIncomplete();", "-        }", "-        else {", "-          _prepareToInterpret(text);", "-          replReturnedSyntaxError(errMsg, text, pe.getBeginLine(),", "-                                  pe.getBeginColumn(), pe.getEndLine(), pe.getEndColumn());", "-        }", "-      }", "-      catch (TokenMgrError tme) {", "-        // A TokenMgrError indicates some lexical difficulty with input.", "-//        javax.swing.JOptionPane.showMessageDialog(null, \"TokenMgrError:\\n\" + tme.getMessage());", "-        _prepareToInterpret(text);", "-        int row = tme.getErrorRow();", "-        int col = tme.getErrorColumn() - 1;", "-        replReturnedSyntaxError(tme.getMessage(), text, row, col, row, col);", "-      }", "+      ", "+////      boolean parserpassed = true;", "+////      JavaInterpreter interpreter = new DynamicJavaAdapter();", "+////      try {", "+////        interpreter.parse(toEval);", "+////      } catch(Throwable t){", "+////        parserpassed = false;", "+////      }", "+////", "+////      if(parserpassed) {", "+      _prepareToInterpret(text);", "+      interpret(toEval);", "+////      }", "+      ", "+//      }", "+//      catch (ParseException pe) {", "+//        // A ParseException indicates a syntax error in the input window", "+//        String errMsg = pe.getInteractionsMessage();", "+//        //javax.swing.JOptionPane.showMessageDialog(null, \"ParseException:\\n\" + errMsg);", "+//        if (errMsg.endsWith(\"<EOF>\\\"\")) {", "+//          _notifyInteractionIncomplete();", "+//        }", "+//        else {", "+//          _prepareToInterpret(text);", "+//          replReturnedSyntaxError(errMsg, text, pe.getBeginLine(),", "+//                                  pe.getBeginColumn(), pe.getEndLine(), pe.getEndColumn());", "+//        }", "+//      }", "+//      catch (TokenMgrError tme) {", "+//        // A TokenMgrError indicates some lexical difficulty with input.", "+//        //  javax.swing.JOptionPane.showMessageDialog(null, \"TokenMgrError:\\n\" + tme.getMessage());", "+//        _prepareToInterpret(text);", "+//        int row = tme.getErrorRow();", "+//        int col = tme.getErrorColumn() - 1;", "+//        replReturnedSyntaxError(tme.getMessage(), text, row, col, row, col);", "+//      }"]}], "num": 11219}