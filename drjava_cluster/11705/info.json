{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "464ccd6d1e036b33f175d0ce0bda2618", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3606e0480547040a50ece77031fa0851", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn -1;", "-", "-\t\t\t_splitCurrentIfCommentBlock(true,false, copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "-\t\t\t\tString type = copyCursor.current().getType();", "-", "-\t\t\t\tif (type.equals(\"\\n\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t\t\telse if (type.equals(\"\\\"\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\t// make sure this is a CLOSE quote", "-\t\t\t\t\t\tif (copyCursor.current().isOpen())", "-\t\t\t\t\t\t\tcopyCursor.current().flip();", "-", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t\t\telse", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.INSIDE_QUOTE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.INSIDE_QUOTE;", "-\t\t\t\t\t\t//_updateInsideQuote(copyCursor);", "-\t\t\t\t\t}", "-\t\t}", "+  private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor) {", "+    if (copyCursor.atEnd()) {", "+      return -1;", "+    }", "+    _splitCurrentIfCommentBlock(true,false, copyCursor);", "+    _combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+    String type = copyCursor.current().getType();", "+    ", "+    if (type.equals(\"\\n\")) {", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    else if (type.equals(\"\\\"\")) {", "+      // make sure this is a CLOSE quote", "+      if (copyCursor.current().isOpen())", "+        copyCursor.current().flip();", "+      ", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    else {", "+      copyCursor.current().setState(Brace.INSIDE_QUOTE);", "+      copyCursor.next();", "+      return Brace.INSIDE_QUOTE;", "+      //_updateInsideQuote(copyCursor);", "+    }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9182d3ae9623fb7c4371f6310f321a8", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelComment.java", "commitBeforeChange": "fa2aa8dc78d037bc99ec51d48049f6b3df0aecfb", "commitAfterChange": "0d5978f95b9d81515ff8908c4d2b74c1df5a1255", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "   private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "signatureAfterChange": "   private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "diff": ["-  private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor)", "-\t\t{", "-\t\t\tif (copyCursor.atEnd())", "-\t\t\t\treturn -1;", "-", "-\t\t\t_splitCurrentIfCommentBlock(true,false, copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "-\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "-\t\t\t\t_combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "-\t\t\t\tString type = copyCursor.current().getType();", "-", "-\t\t\t\tif (type.equals(\"\\n\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t\t\telse if (type.equals(\"\\\"\"))", "-\t\t\t\t\t{", "-\t\t\t\t\t\t// make sure this is a CLOSE quote", "-\t\t\t\t\t\tif (copyCursor.current().isOpen())", "-\t\t\t\t\t\t\tcopyCursor.current().flip();", "-", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.FREE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.FREE;", "-\t\t\t\t\t\t//_updateFree(copyCursor);", "-\t\t\t\t\t}", "-\t\t\t\telse", "-\t\t\t\t\t{", "-\t\t\t\t\t\tcopyCursor.current().setState(Brace.INSIDE_QUOTE);", "-\t\t\t\t\t\tcopyCursor.next();", "-\t\t\t\t\t\treturn Brace.INSIDE_QUOTE;", "-\t\t\t\t\t\t//_updateInsideQuote(copyCursor);", "-\t\t\t\t\t}", "-\t\t}", "+  private int _updateInsideQuote(ModelList<ReducedToken>.Iterator copyCursor) {", "+    if (copyCursor.atEnd()) {", "+      return -1;", "+    }", "+    _splitCurrentIfCommentBlock(true,false, copyCursor);", "+    _combineCurrentAndNextIfFind(\"\",\"\", copyCursor);", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\",copyCursor);  // \\-\\", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\"\",copyCursor);  // \\-\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\"\",copyCursor);// \\-\\\"", "+    _combineCurrentAndNextIfFind(\"\\\\\",\"\\\\\\\\\",copyCursor);// \\-\\\\", "+    String type = copyCursor.current().getType();", "+    ", "+    if (type.equals(\"\\n\")) {", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    else if (type.equals(\"\\\"\")) {", "+      // make sure this is a CLOSE quote", "+      if (copyCursor.current().isOpen())", "+        copyCursor.current().flip();", "+      ", "+      copyCursor.current().setState(Brace.FREE);", "+      copyCursor.next();", "+      return Brace.FREE;", "+      //_updateFree(copyCursor);", "+    }", "+    else {", "+      copyCursor.current().setState(Brace.INSIDE_QUOTE);", "+      copyCursor.next();", "+      return Brace.INSIDE_QUOTE;", "+      //_updateInsideQuote(copyCursor);", "+    }", "+  }"]}], "num": 11705}