{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "891ed9718142b8453062aa85bca44b9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef8a7e66adccd9ab782b95af941f30a", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "platform/src-jdk16/edu/rice/cs/drjava/model/compiler/Javac160Compiler.java", "commitBeforeChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "commitAfterChange": "c96f6b2e58df41c403474d4e2c581d0c1d878a78", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 8, "signatureBeforeChange": "    private void initCompiler(File[] sourceRoots)", "signatureAfterChange": "          public ErrorListener(Context context, List<? super CompilerError> errors)", "diff": ["+    ", "+    public ErrorListener(Context context, List<? super CompilerError> errors) {", "+      _errors = errors;", "+      context.put(DiagnosticListener.class, this);", "+    }", "-   /* Creates an instance of the 6.0 javac compiler with a context that includes our diagnostic listener. */", "-   private void initCompiler(File[] sourceRoots) {", "-     ", "-    _context = createContext(sourceRoots);", "-    _context.put(DiagnosticListener.class, diagnosticListener);", "-    ", "-    _compiler = JavaCompiler.instance(_context);", "-//    Utilities.show(\"Compiler version \" + _compiler.version() + \" created\");", "-  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95330251ce2cfd27eaf5ec9e00af3322", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/RecentFileManager.java", "commitBeforeChange": "ac7a65cf2a4a37583cc735c2ee8126d7409d8c19", "commitAfterChange": "e62ed8297c798946c8d04e911cb118b8a9e10779", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public RecentFileManager(int pos, JMenu fileMenu, MainFrame frame, boolean isProject)", "signatureAfterChange": "   public RecentFileManager(int pos, JMenu fileMenu, RecentFileAction action, VectorOption<File> settingConfigConstant)", "diff": ["-  public RecentFileManager(int pos, JMenu fileMenu, MainFrame frame, boolean isProject) {", "+  public RecentFileManager(int pos, JMenu fileMenu, RecentFileAction action, VectorOption<File> settingConfigConstant) {", "-    _frame = frame;", "+    _recentFileAction = action;", "-    _isProject = isProject;", "+    _settingConfigConstant = settingConfigConstant;", "-    Vector<File> files;", "-    if (! _isProject) files = DrJava.getConfig().getSetting(RECENT_FILES);", "-    else files = DrJava.getConfig().getSetting(RECENT_PROJECTS);", "+    Vector<File> files = DrJava.getConfig().getSetting(_settingConfigConstant);", "-    for (int i = files.size() - 1; i >= 0; i--) { updateOpenFiles(files.get(i)); }", "+    for (int i = files.size() - 1; i >= 0; i--) {", "+      File f = files.get(i);", "+      if (f.exists()) updateOpenFiles(f); ", "+    }"]}], "num": 17555}