{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "044e34f4894a3dcd2f3a2b8ae6e14aa0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e2edc41982eccf557c564c38a1ab161", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "6207c0d4b83ee23d6d4624c513f270e47c43cc83", "commitAfterChange": "f4c8eb851d98f4da2479f32fb767dac4b3a40e1c", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 151, "signatureBeforeChange": "   void initCompleteWordDialog()", "signatureAfterChange": "   private void _completeWordUnderCursor()", "diff": ["-  /** Initialize dialog if necessary. */", "-  void initCompleteWordDialog() {", "-    if (_completeWordDialog == null) {", "-      // checkbox whether Java API classes should be completed as well", "-      _completeJavaAPICheckbox.addActionListener(new ActionListener() {", "-        public void actionPerformed(ActionEvent e) {", "-          String curMask = _completeWordDialog.getMask();", "-          if (_completeJavaAPICheckbox.isSelected()) {", "-            DrJava.getConfig().setSetting(OptionConstants.DIALOG_COMPLETE_JAVAAPI, Boolean.TRUE);", "-            Set<ClassNameAndPackageEntry> s = new HashSet<ClassNameAndPackageEntry>(_completeWordDialog.getItems());", "-            addJavaAPIToSet(s);", "-            _completeWordDialog.setItems(true,s);", "-          }", "-          else {", "-            // unselected, remove Java API classes from list", "-            Set<ClassNameAndPackageEntry> s = new HashSet<ClassNameAndPackageEntry>(_completeWordDialog.getItems());", "-            generateJavaAPISet();", "-            if (_javaAPISet == null) {", "-              DrJava.getConfig().setSetting(OptionConstants.DIALOG_COMPLETE_JAVAAPI, Boolean.FALSE);", "-              _completeJavaAPICheckbox.setSelected(false);", "-              _completeJavaAPICheckbox.setEnabled(false);", "-              Set<ClassNameAndPackageEntry> n = new HashSet<ClassNameAndPackageEntry>();", "-              for(ClassNameAndPackageEntry entry: s) {", "-                if (!(entry instanceof JavaAPIListEntry)) { n.add(entry); }", "-              }", "-              _completeWordDialog.setItems(true,n);", "-            }", "-            else {", "-              for(JavaAPIListEntry entry: _javaAPISet) { s.remove(entry); }", "-              _completeWordDialog.setItems(true,s);", "-            }", "-          }", "-          _completeWordDialog.setMask(curMask);", "-          _completeWordDialog.resetFocus();", "-        }", "-      });", "-      PlatformFactory.ONLY.setMnemonic(_completeJavaAPICheckbox,'j');", "-      PredictiveInputFrame.InfoSupplier<ClassNameAndPackageEntry> info = ", "-        new PredictiveInputFrame.InfoSupplier<ClassNameAndPackageEntry>() {", "-        public String value(ClassNameAndPackageEntry entry) {", "-          // show full class name as information", "-          StringBuilder sb = new StringBuilder();", "-          sb.append(entry.getFullPackage());", "-          sb.append(entry.getClassName());", "-          return sb.toString();", "-        }", "-      };", "-      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> okAction =", "-        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public String getName() { return \"OK\"; }", "-        public KeyStroke getKeyStroke() { return KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0); }", "-        public String getToolTipText() { return \"Complete the identifier\"; }", "-        public Object value(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-          if (p.getItem() != null) {", "-            OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();", "-            try {", "-              int loc = getCurrentDefPane().getCaretPosition();", "-              String s = odd.getText(0, loc);", "-              ", "-              // check that we're at the end of a word", "-              if ((loc<s.length()) && (!Character.isWhitespace(s.charAt(loc))) &&", "-                  (\"()[]{}<>.,:;/*+-!~&|%\".indexOf(s.charAt(loc)) == -1)) return null;", "-              ", "-              // find start", "-              int start = loc;", "-              while(start > 0) {", "-                if (!Character.isJavaIdentifierPart(s.charAt(start-1))) { break; }", "-                --start;", "-              }", "-              while((start <  s.length()) && (!Character.isJavaIdentifierStart(s.charAt(start))) && (start < loc)) {", "-                ++start;", "-              }", "-              ", "-              if (!s.substring(start, loc).equals(p.getItem().toString())) {", "-                odd.remove(start, loc-start);", "-                odd.insertString(start, p.getItem().getClassName(), null);", "-              }", "-            }", "-            catch(BadLocationException ble) { /* ignore, just don't auto-complete */ }", "-          }", "-          hourglassOff();", "-          return null;", "-        }", "-      };", "-      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> fullAction =", "-        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public String getName() { return \"Fully Qualified\"; }", "-        public KeyStroke getKeyStroke() {", "-          return KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, OptionConstants.MASK);", "-        }", "-        public String getToolTipText() { return \"Complete the word using the fully-qualified class name\"; }", "-        public Object value(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-          if (p.getItem() != null) {", "-            OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();", "-            try {", "-              int loc = getCurrentDefPane().getCaretPosition();", "-              String s = odd.getText(0, loc);", "-              ", "-              // check that we're at the end of a word", "-              if ((loc<s.length()) && (!Character.isWhitespace(s.charAt(loc))) &&", "-                  (\"()[]{}<>.,:;/*+-!~&|%\".indexOf(s.charAt(loc)) == -1)) return null;", "-              ", "-              // find start", "-              int start = loc;", "-              while(start > 0) {", "-                if (! Character.isJavaIdentifierPart(s.charAt(start-1))) { break; }", "-                --start;", "-              }", "-              while((start<s.length()) && (! Character.isJavaIdentifierStart(s.charAt(start))) && (start < loc)) {", "-                ++start;", "-              }", "-              ", "-              if (!s.substring(start, loc).equals(p.getItem().toString())) {", "-                odd.remove(start, loc-start);", "-                StringBuilder sb = new StringBuilder();", "-                sb.append(p.getItem().getFullPackage());", "-                sb.append(p.getItem().getClassName());", "-                odd.insertString(start, sb.toString(), null);", "-              }", "-            }", "-            catch(BadLocationException ble) { /* ignore, just don't auto-complete */ }", "-          }", "-          hourglassOff();", "-          return null;", "-        }", "-      };", "-      PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry> cancelAction = ", "-        new PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>() {", "-        public String getName() { return \"Cancel\"; }", "-        public KeyStroke getKeyStroke() { return KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0); }", "-        public String getToolTipText() { return null; }", "-        public Object value(PredictiveInputFrame<ClassNameAndPackageEntry> p) {", "-          hourglassOff();", "-          return null;", "-        }", "-      };", "-      // Note: PredictiveInputModel.* is statically imported", "-      java.util.ArrayList<MatchingStrategy<ClassNameAndPackageEntry>> strategies =", "-        new java.util.ArrayList<MatchingStrategy<ClassNameAndPackageEntry>>();", "-      strategies.add(new FragmentStrategy<ClassNameAndPackageEntry>());", "-      strategies.add(new PrefixStrategy<ClassNameAndPackageEntry>());", "-      strategies.add(new RegExStrategy<ClassNameAndPackageEntry>());", "-      List<PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>> actions", "-        = new ArrayList<PredictiveInputFrame.CloseAction<ClassNameAndPackageEntry>>();", "-      actions.add(okAction);", "-      actions.add(fullAction);", "-      actions.add(cancelAction);", "-      GoToFileListEntry entry = new GoToFileListEntry(new DummyOpenDefDoc() {", "-        public String getPackageNameFromDocument() { return \"\"; }", "-      }, \"dummyComplete\");", "-      _completeWordDialog = ", "-        new PredictiveInputFrame<ClassNameAndPackageEntry>(MainFrame.this,", "-                                                           \"Auto-Complete Word\",", "-                                                           true, // force", "-                                                           true, // ignore case", "-                                                           info,", "-                                                           strategies,", "-                                                           actions, 2, // cancel is action 23", "-                                                           entry) {", "-        public void setOwnerEnabled(boolean b) {", "-          if (b) { hourglassOff(); } else { hourglassOn(); }", "-        }", "-        protected JComponent[] makeOptions() {", "-          return new JComponent[] { _completeJavaAPICheckbox };", "-        }", "-      }; ", "-      // putting one dummy entry in the list; it will be changed later anyway", "-      ", "-      if (DrJava.getConfig().getSetting(DIALOG_COMPLETE_WORD_STORE_POSITION).booleanValue()) {", "-        _completeWordDialog.setFrameState(DrJava.getConfig().getSetting(DIALOG_COMPLETE_WORD_STATE));", "-      }      ", "-    }", "-  }", "+    if (_completeWordDialog==null) {", "+      _completeWordDialog = new AutoCompletePopup(this);", "+    hourglassOn();", "+    final OpenDefinitionsDocument odd = getCurrentDefPane().getOpenDefDocument();", "+    final int loc = getCurrentDefPane().getCaretPosition();", "+      final String initial = odd.getText(0, loc);", "+      _completeWordDialog.show(this,", "+                               \"Complete Word\",", "+                               initial,", "+                               loc,", "+                               edu.rice.cs.plt.iter.IterUtil.make(\"OK\", \"Fully Qualified\"),", "+                               edu.rice.cs.plt.iter.IterUtil.", "+                                 make(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0),", "+                                      KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, OptionConstants.MASK)),", "+                               0, // simple class name action if just one match", "+                               new Runnable() {", "+        public void run() {", "+          // canceled", "+          hourglassOff();", "+          MainFrame.this.toFront();", "+      },", "+                               edu.rice.cs.plt.iter.IterUtil.", "+                                 make(new Runnable4<String,String,Integer,Integer>() {", "+                                 public void run(String className,", "+                                                 String fullName,", "+                                                 Integer from,", "+                                                 Integer to) {", "+                                   // accepted", "+                                   try {", "+                                     odd.remove(from, to-from);", "+                                     odd.insertString(from, className, null);", "+                                   }", "+                                   catch(BadLocationException ble) { /* just don't complete */ }", "+                                   ", "+                                   hourglassOff();", "+                                   MainFrame.this.toFront();", "+                                 }", "+                               }, new Runnable4<String,String,Integer,Integer>() {", "+                                 public void run(String className,", "+                                                 String fullName,", "+                                                 Integer from,", "+                                                 Integer to) {", "+                                   // accepted", "+                                   try {", "+                                     odd.remove(from, to-from);", "+                                     odd.insertString(from, fullName, null);", "+                                   }", "+                                   catch(BadLocationException ble) { /* just don't complete */ }", "+                                   ", "+                                   hourglassOff();", "+                                   MainFrame.this.toFront();", "+                                 }", "+                               }));", "+    catch(BadLocationException ble) { /* just don't complete */ }", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49bdfbb5a57216e646d76729f37dfb1f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "dff1e78708d1fc8c89ac7283a8a2c5db6fd8ed74", "commitAfterChange": "545baa1c63b7ee7d993e35e240105f7970f7c2d1", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "   private void _setUpKeyBindingMaps()", "signatureAfterChange": "   private void _setUpKeyBindingMaps()", "diff": ["-      _keyBindingManager.putActionToNameMap(_newAction, ", "-                                            \"New File\");", "-      _keyBindingManager.putActionToNameMap(_openAction, ", "-                                            \"Open File\");", "-      _keyBindingManager.putActionToNameMap(_saveAction, ", "-                                            \"Save File\");", "-      _keyBindingManager.putActionToNameMap(_saveAsAction, ", "-                                            \"Save File As\");", "-      _keyBindingManager.putActionToNameMap(_closeAction, ", "-                                            \"Close File\");", "-      _keyBindingManager.putActionToNameMap(_printPreviewAction, ", "-                                            \"Print Preview\");", "-      _keyBindingManager.putActionToNameMap(_printAction, ", "-                                            \"Print\");", "-      _keyBindingManager.putActionToNameMap(_quitAction, ", "-                                            \"Quit\");", "-      _keyBindingManager.putActionToNameMap(_undoAction, ", "-                                            \"Undo\");", "-      _keyBindingManager.putActionToNameMap(_redoAction, ", "-                                            \"Redo\");", "-      _keyBindingManager.putActionToNameMap(_cutAction, ", "-                                            \"Cut\");", "-      _keyBindingManager.putActionToNameMap(_copyAction, ", "-                                            \"Copy\");", "-      _keyBindingManager.putActionToNameMap(_pasteAction, ", "-                                            \"Paste\");", "-      _keyBindingManager.putActionToNameMap(_selectAllAction, ", "-                                            \"Select All\");", "-      _keyBindingManager.putActionToNameMap(_findReplaceAction, ", "-                                            \"Find Replace\");", "-      _keyBindingManager.putActionToNameMap(_gotoLineAction, ", "-                                            \"Goto Line\");", "-      _keyBindingManager.putActionToNameMap(_switchToPrevAction, ", "-                                            \"Previous Document\");", "-      _keyBindingManager.putActionToNameMap(_switchToNextAction, ", "-                                            \"Next Document\");", "-      _keyBindingManager.putActionToNameMap(_compileAction, ", "-                                            \"Compile\");", "-      _keyBindingManager.putActionToNameMap(_abortInteractionAction, ", "-                                            \"Abort Interaction\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.backwardAction), ", "-                                            \"Backward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBackwardAction), ", "-                                            \"Selection Backward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginAction), ", "-                                            \"Begin Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginAction), ", "-                                            \"Selection Begin Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginLineAction), ", "-                                            \"Begin Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginLineAction), ", "-                                            \"Selection Begin Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.beginParagraphAction), ", "-                                            \"Begin Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionBeginParagraphAction), ", "-                                            \"Selection Begin Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.previousWordAction), ", "-                                            \"Previous Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionPreviousWordAction), ", "-                                            \"Selection Previous Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.downAction), ", "-                                            \"Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionDownAction), ", "-                                            \"Selection Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endAction), ", "-                                            \"End Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndAction), ", "-                                            \"Selection End Document\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endLineAction), ", "-                                            \"End Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndLineAction), ", "-                                            \"Selection End Line\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.endParagraphAction), ", "-                                            \"End Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionEndParagraphAction), ", "-                                            \"Selection End Paragraph\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.nextWordAction), ", "-                                            \"Next Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionNextWordAction), ", "-                                            \"Selection Next Word\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.forwardAction), ", "-                                            \"Forward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionForwardAction), ", "-                                            \"Selection Forward\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.pageDownAction), ", "-                                            \"Page Down\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.pageUpAction), ", "-                                            \"Page Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.upAction), ", "-                                            \"Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.selectionUpAction), ", "-                                            \"Selection Up\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.deletePrevCharAction), ", "-                                            \"Delete Previous Character\");", "-      _keyBindingManager.putActionToNameMap(_actionMap.get(DefaultEditorKit.deleteNextCharAction), ", "-                                            \"Delete Next Character\");", "-      _keyBindingManager.putActionToNameMap(_cutLineAction, ", "-                                            \"Cut Line\");", "-      ", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_NEW_FILE), _newAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_OPEN_FILE), _openAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SAVE_FILE), _saveAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SAVE_FILE_AS), _saveAsAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CLOSE_FILE), _closeAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PRINT_PREVIEW), _printPreviewAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PRINT), _printAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_QUIT), _quitAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_UNDO), _undoAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_REDO), _redoAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CUT), _cutAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_COPY), _copyAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PASTE), _pasteAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_SELECT_ALL), _selectAllAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_FIND_REPLACE), _findReplaceAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_GOTO_LINE), _gotoLineAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PREVIOUS_DOCUMENT), ", "-                 _switchToPrevAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_NEXT_DOCUMENT), ", "-                 _switchToNextAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_COMPILE), _compileAction);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_ABORT_INTERACTION), ", "-                 _abortInteractionAction);      ", "-      ", "-      _keyBindingManager.addShiftAction(KEY_BACKWARD, ", "-                                        DefaultEditorKit.backwardAction, ", "-                                        DefaultEditorKit.selectionBackwardAction);", "+      _keyBindingManager.put(KEY_BACKWARD, _actionMap.get(DefaultEditorKit.backwardAction),null, \"Backward\");", "+      _keyBindingManager.addShiftAction(KEY_BACKWARD,", "+                                        DefaultEditorKit.selectionBackwardAction);", "+      ", "+      _keyBindingManager.put(KEY_BEGIN_DOCUMENT, _actionMap.get(DefaultEditorKit.beginAction), null, \"Begin Document\");", "-                                        DefaultEditorKit.beginAction, ", "+      _keyBindingManager.put(KEY_BEGIN_LINE, _actionMap.get(DefaultEditorKit.beginLineAction), null, \"Begin Line\");", "-                                        DefaultEditorKit.beginLineAction, ", "-          ", "+      ", "+      _keyBindingManager.put(KEY_BEGIN_PARAGRAPH, ", "+                             _actionMap.get(DefaultEditorKit.beginParagraphAction), null, \"Begin Paragraph\");", "-                                        DefaultEditorKit.beginParagraphAction, ", "+      _keyBindingManager.put(KEY_PREVIOUS_WORD, ", "+                             _actionMap.get(DefaultEditorKit.previousWordAction), null, \"Previous Word\");", "-                                        DefaultEditorKit.previousWordAction, ", "-       ", "+      ", "+      ", "+      _keyBindingManager.put(KEY_DOWN, ", "+                             _actionMap.get(DefaultEditorKit.downAction), null, \"Down\");", "-                                        DefaultEditorKit.downAction, ", "+      _keyBindingManager.put(KEY_END_DOCUMENT, ", "+                             _actionMap.get(DefaultEditorKit.endAction), null, \"End Document\");", "-                                        DefaultEditorKit.endAction, ", "-       ", "+      ", "+      _keyBindingManager.put(KEY_END_LINE, ", "+                             _actionMap.get(DefaultEditorKit.endLineAction), null, \"End Line\");", "-                                        DefaultEditorKit.endLineAction, ", "+      _keyBindingManager.put(KEY_END_PARAGRAPH, ", "+                             _actionMap.get(DefaultEditorKit.endParagraphAction), null, \"End Paragraph\");", "-                                        DefaultEditorKit.endParagraphAction, ", "-       ", "+      ", "+      _keyBindingManager.put(KEY_NEXT_WORD, ", "+                             _actionMap.get(DefaultEditorKit.nextWordAction), null, \"Next Word\");", "-                                        DefaultEditorKit.nextWordAction, ", "-      _keyBindingManager.addShiftAction(KEY_FORWARD, ", "-                                        DefaultEditorKit.forwardAction, ", "+      _keyBindingManager.put(KEY_FORWARD, ", "+                             _actionMap.get(DefaultEditorKit.forwardAction), null, \"Forward\");", "+      _keyBindingManager.addShiftAction(KEY_FORWARD,", "+      _keyBindingManager.put(KEY_UP, ", "+                             _actionMap.get(DefaultEditorKit.upAction), null, \"Up\");", "-                                        DefaultEditorKit.upAction, ", "-                                        DefaultEditorKit.selectionUpAction);     ", "+                                        DefaultEditorKit.selectionUpAction); ", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PAGE_DOWN), ", "-                                   _actionMap.get(DefaultEditorKit.pageDownAction));", "-      _keyBindingManager.addListener(KEY_PAGE_DOWN, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_PAGE_UP), ", "-                                   _actionMap.get(DefaultEditorKit.pageUpAction));", "-      _keyBindingManager.addListener(KEY_PAGE_UP, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_CUT_LINE), ", "-                                   _cutLineAction);", "-      _keyBindingManager.addListener(KEY_CUT_LINE, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_DELETE_PREVIOUS), ", "-                                   _actionMap.get(DefaultEditorKit.deletePrevCharAction));", "-      _keyBindingManager.addListener(KEY_DELETE_PREVIOUS, null);", "-      _keyBindingManager.mapInsert(DrJava.CONFIG.getSetting(KEY_DELETE_NEXT), ", "-                                   _actionMap.get(DefaultEditorKit.deleteNextCharAction));", "-      _keyBindingManager.addListener(KEY_DELETE_NEXT, null);", "-      _keyBindingManager.mapInsert(KeyStroke.getKeyStroke(KeyEvent.VK_F3,0),", "-                                   new AbstractAction(\"FindReplace\") {", "+      _keyBindingManager.put(KEY_PAGE_DOWN, ", "+                             _actionMap.get(DefaultEditorKit.pageDownAction), null, \"Page Down\");", "+      _keyBindingManager.put(KEY_PAGE_UP, ", "+                             _actionMap.get(DefaultEditorKit.pageUpAction), null, \"Page Up\");", "+      _keyBindingManager.put(KEY_CUT_LINE, ", "+                             _cutLineAction, null, \"Cut Line\");", "+      _keyBindingManager.put(KEY_DELETE_PREVIOUS, ", "+                             _actionMap.get(DefaultEditorKit.deletePrevCharAction), null, \"Delete Previous\");", "+      _keyBindingManager.put(KEY_DELETE_NEXT, ", "+                             _actionMap.get(DefaultEditorKit.deleteNextCharAction), null, \"Delete Next\");", "+      _keyBindingManager.put(KEY_FIND_NEXT,", "+                             new AbstractAction(\"FindNext\") {", "-      });", "-                                  ", "+      }, null, \"Find Next\");", "+      "]}], "num": 19377}