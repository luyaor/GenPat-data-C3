{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a56efcce4d68797917661fa0882dd11f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bb3b5d707d65ee61cdc13d06aa66619", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "   public static MethodData repeatedSignature(LinkedList<MethodData> listOfMethods, MethodData method, boolean fromClassFile)", "signatureAfterChange": "   public static MethodData repeatedSignature(LinkedList<MethodData> listOfMethods, MethodData method, boolean fromClassFile)", "diff": ["-      if (currMd.getName().equals(method.getName()) && (!fromClassFile || currMd.getReturnType() == method.getReturnType())) {", "+      if (currMd.getName().equals(method.getName()) && ", "+          (! fromClassFile || currMd.getReturnType() == method.getReturnType())) {", "-          if (match) {", "-            return currMd;", "-          }", "+          if (match) return currMd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cbad1da4210103f198ee9b224fcf44e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String qualifiedTypeName, Data enclosing)", "signatureAfterChange": "   protected SymbolData defineInnerSymbolData(TypeDefBase typeDefBase, String qualifiedTypeName, Data enclosing)", "diff": ["-    else {throw new RuntimeException(\"Internal Program Error: typeDefBase was not a ClassDef or InterfaceDef.\" + ", "-                                     \"  Please report this bug.\");}", "+    else throw new RuntimeException(\"Internal Program Error: typeDefBase was not a ClassDef or InterfaceDef.\" + ", "+                                     \"  Please report this bug.\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa54ff1b83a9e7405a672cef1bc27733", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/SymbolData.java", "commitBeforeChange": "dd97c2983de18f5d46f596ce3c536a3b581f0ec4", "commitAfterChange": "e5b59097570657040bcd74f7a31c6db7f03359ce", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "   public boolean hasMethod(String name)", "signatureAfterChange": "   public boolean hasMethod(String name)", "diff": ["-   */", "+    */", "-      if (currMd.getName().equals(name)) {", "-        return true;", "-      }", "+      if (currMd.getName().equals(name)) return true;"]}], "num": 10168}