{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1deff155ab0abe54c1d5516d7f6643c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b86b8d2439a6c3e0c086314b2f6910", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "1555d1cb14e076ea1030f08b3fde8f9710fe3a1d", "commitAfterChange": "c0d7f23f7940c03c6774a2c608b9ab495655e5b1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-        // location is set asynchronously when caret is moved so the following adjustment is necessary", "-        if (newLoc < 0) newLoc = 0;", "-        else if (newLoc > getLength()) newLoc = getLength();", "+//        // location is set asynchronously when caret is moved so the following adjustment is necessary", "+//        // should no longer be true", "+//        if (newLoc < 0) {", "+//          assert false; // should never get here", "+//          dist -= newLoc; // increase dist by error in newLoc", "+//          newLoc = 0;", "+//        }", "+//        else {", "+//          int len = getLength();", "+//          if (newLoc > len) {", "+//            assert false; // should never get here", "+//            dist -= (newLoc - len); // decrease dist by error in newLoc", "+//            newLoc = len;", "+//          }", "+//        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0dce04992e8ec3bec9acfe319784988", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "1824c23d7190107a20690dc4a2840a5d74f14a93", "commitAfterChange": "3b64166f1d62b17dc65eb373f58379c1d93452e7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void move(int dist)", "signatureAfterChange": "   public void move(int dist)", "diff": ["-    try {", "-      synchronized(_reduced) {", "-        int newLoc = _currentLocation + dist;", "-//        // location is set asynchronously when caret is moved so the following adjustment is necessary", "-//        // should no longer be true", "-//        if (newLoc < 0) {", "-//          assert false; // should never get here", "-//          dist -= newLoc; // increase dist by error in newLoc", "-//          newLoc = 0;", "-//        }", "-//        else {", "-//          int len = getLength();", "-//          if (newLoc > len) {", "-//            assert false; // should never get here", "-//            dist -= (newLoc - len); // decrease dist by error in newLoc", "-//            newLoc = len;", "-//          }", "-//        }", "-        _currentLocation = newLoc;", "+    try { ", "+      synchronized(_reduced) { ", "-      }", "+        _currentLocation= _currentLocation + dist;", "+      } ", "-    finally { releaseReadLock(); }   ", "+    finally { releaseReadLock(); } "]}], "num": 20554}