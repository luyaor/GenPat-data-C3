{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f74b2d76e5fe6f4f0e2f0c8b6fc3c201", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e24b98822dc605032a455315ed1b924", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "      private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont,                                   int start, int current)", "signatureAfterChange": "       private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont,                                    int start, int current)", "diff": ["-  ", "-  private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont,", "-                                  int start, int current) ", "-  {", "-    int findOffset = frm.findNext(cont);", "-    assertEquals(\"findNext return value\", -1, findOffset);", "-    _assertOffsets(frm, start, current);", "-  }                                  ", "+  ", "+  private void _testFindNextFails(FindReplaceMachine frm, ContinueCommand cont, ", "+                                  int start, int current)  ", "+  { ", "+    int findOffset = frm.findNext().getFoundOffset(); ", "+    assertEquals(\"findNext return value\", -1, findOffset); ", "+    _assertOffsets(frm, start, current); ", "+  }                                   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ebbf0a894cf5947a369fd74ef990f7", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/swing/FindReplaceMachineTest.java", "commitBeforeChange": "328f627f0b6ac099c1b27f12b1572d901deb00c4", "commitAfterChange": "8907059ef43f15e7b338686159e3333fd997b238", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": "      private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont,                              int start, int found)", "signatureAfterChange": "    private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont,                               int start, int found)", "diff": ["-  ", "-  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont,", "-                             int start, int found) {", "-    int findOffset = frm.findNext(cont);", "-    assertEquals(\"findNext return value\", found, findOffset);", "-    _assertOffsets(frm, start, found);", "-    assertTrue(\"on find text\", frm.isOnMatch());    ", "-  }", "+  private void _testFindNextSucceeds(FindReplaceMachine frm, ContinueCommand cont, ", "+                             int start, int found) { ", "+    int findOffset = frm.findNext().getFoundOffset(); ", "+    assertEquals(\"findNext return value\", found, findOffset); ", "+    _assertOffsets(frm, start, found); ", "+    assertTrue(\"on find text\", frm.isOnMatch());     ", "+  } "]}], "num": 15767}