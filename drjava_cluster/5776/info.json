{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e39c1712eb6f8200a7bc2f9e7e8ae81", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165a80f75aba1d1e0774d627787c9b64", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/tree/EnumDeclaration.java", "commitBeforeChange": "33efe2539ca216fb14c21fb7ac7310d7b150d7ef", "commitAfterChange": "88de5f3657d6901624a99592baa687fe5666eed7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "signatureAfterChange": "    static List<Node> AddValues(String enumTypeName, List<Node> body, List<EnumConstant> consts)", "diff": ["-    List<IdentifierToken> iIds = new LinkedList<IdentifierToken>();", "-    iIds.add(new Identifier(\"i\"));", "-    QualifiedName iId = new QualifiedName(iIds);", "+    AmbiguousName iId = new AmbiguousName(\"i\");", "-    List<IdentifierToken> sIds = new LinkedList<IdentifierToken>();", "-    sIds.add(new Identifier(\"s\"));", "-    QualifiedName sId = new QualifiedName(sIds);", "-    args.add(new QualifiedName(sIds));", "+    AmbiguousName sId = new AmbiguousName(\"s\");", "+    args.add(new AmbiguousName(\"s\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b4e37f7d0cb916366957573d379d42f", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/Configuration.java", "commitBeforeChange": "22f4e4d3d8066ee931c35c7ee670d4fd2e8cfd6c", "commitAfterChange": "17f7883ffae3637cf9ec6b5aa5b32f12aa6f1a56", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          private Configuration()", "signatureAfterChange": "          private Configuration()", "diff": ["-\tOptionMapLoader loader = OptionMapLoader.DEFAULT;", "-\ttry {", "-\t    if (PROPERTIES_FILE.exists()) {", "-\t\tInputStream fis = new FileInputStream(PROPERTIES_FILE);", "-\t\tloader = new OptionMapLoader(fis);", "-\t    } else { // be nice and create a config file.", "-\t\tnew FileOutputStream(PROPERTIES_FILE).close();", "-\t    }", "+        try {", "+            PROPERTIES_FILE.createNewFile(); // be nice and ensure a config file", "-\tOptionMap map = new DefaultOptionMap();", "-\tloader.loadInto(map);", "-\t_config = new edu.rice.cs.drjava.config.Configuration(map);", "+        _config = new FileConfiguration(PROPERTIES_FILE);", "+        try {", "+            _config.loadConfiguration();", "+        } catch(IOException e) {", "+        }"]}], "num": 5776}