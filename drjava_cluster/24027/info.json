{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a093dcc918dc471fc1b4df2ea365e750", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dee24667822d77afa5b29884532947b", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "1e619a02befaa7a99dc31172b2a007a2446ed2bd", "commitAfterChange": "591f8aac4f79eab75475a3d9dd862c3b019f02a1", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 267, "signatureBeforeChange": "    public MainFrame()", "signatureAfterChange": "    public MainFrame()", "diff": ["+    _tabbedPanesFrame = new TabbedPanesFrame(MainFrame.this,_tabbedPane,_mainSplit);", "+    _tabbedPanesFrame.addWindowListener(new WindowAdapter() {", "+      public void windowClosing(WindowEvent we) {", "+        _detachTabbedPanesMenuItem.setSelected(false);", "+        DrJava.getConfig().setSetting(DETACH_TABBEDPANES, false);", "+      }", "+    });", "+    ", "+    initTabbedPanesFrame();", "+    ", "+    SwingUtilities.invokeLater(new Runnable() {", "+      public void run() {", "+        _tabbedPanesFrame.setDisplayInFrame(DrJava.getConfig().getSetting(DETACH_TABBEDPANES));", "+      }", "+    });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c50e2f745db97e34aa38dbc8fcc2be7e", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/config/ColorOptionComponent.java", "commitBeforeChange": "7b8e61b54c444deec40202441181317a86727c3a", "commitAfterChange": "1763dbe8cbfddb4c5dc11b4a5b86d887d31274b9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "   public ColorOptionComponent(ColorOption opt, String text, Frame parent,                               boolean isBackgroundColor)", "signatureAfterChange": "   public ColorOptionComponent(ColorOption opt, String text, Frame parent,                               boolean isBackgroundColor)", "diff": ["-      _colorField.setForeground(Color.black);", "+//      _colorField.setForeground(Color.black);", "+      _colorField.setForeground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_NORMAL_COLOR));", "+      DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_NORMAL_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _colorField.setForeground(oe.value);", "+        }", "+      });", "-      _colorField.setBackground(Color.white);", "-      // Would be nice to use background color here (need a listener in configframe?)", "-      //_colorField.setBackground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_BACKGROUND_COLOR)););", "-    }", "+//      _colorField.setBackground(Color.white);", "+      _colorField.setBackground(DrJava.getConfig().getSetting(OptionConstants.DEFINITIONS_BACKGROUND_COLOR));", "+       DrJava.getConfig().addOptionListener(OptionConstants.DEFINITIONS_BACKGROUND_COLOR,", "+                                           new OptionListener<Color>() {", "+        public void optionChanged(OptionEvent<Color> oe) {", "+          _colorField.setBackground(oe.value);", "+        }", "+      });", "+   }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b32617539ba6f4e11b87508c0283d3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "109d27eebe32f865b38e6cbe4e346f0366c7d8cb", "commitAfterChange": "efab87f410ff2f72133e7732ff124fc4ee2d5ab5", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "   public MainFrame()", "signatureAfterChange": "   public MainFrame()", "diff": ["-            JOptionPane.showMessageDialog(MainFrame.this,", "+            JOptionPane.showMessageDialog(_configFrame,", "-            JOptionPane.showMessageDialog(MainFrame.this,", "+            JOptionPane.showMessageDialog(_configFrame,", "+          }", "+        }", "+      }", "+    });", "+    DrJava.getConfig().addOptionListener(OptionConstants.LOOK_AND_FEEL, new OptionListener<String>() {", "+      public void optionChanged(OptionEvent<String> oe) {", "+        /*", "+        try {", "+          UIManager.setLookAndFeel(oe.value);", "+          SwingUtilities.updateComponentTreeUI(MainFrame.this);", "+          if (_configFrame != null) {", "+            SwingUtilities.updateComponentTreeUI(_configFrame);", "+          }", "+          if (_javadocFrame != null) {", "+            SwingUtilities.updateComponentTreeUI(_javadocFrame);", "+          }", "+          if (_helpFrame != null) {", "+            SwingUtilities.updateComponentTreeUI(_helpFrame);", "+          }", "+          if (_aboutDialog != null) {", "+            SwingUtilities.updateComponentTreeUI(_aboutDialog);", "+          }", "+        }", "+        catch (Exception ex) {", "+          _showError(ex, \"Could Not Set Look and Feel\",", "+                     \"An error occurred while trying to set the look and feel.\");", "+        }*/", "+        String title = \"Apply Look and Feel\";", "+        String msg = \"Look and feel changes will take effect when you restart DrJava.\";", "+        if (DrJava.getConfig().getSetting(OptionConstants.WARN_CHANGE_LAF).booleanValue()) {", "+          ConfirmCheckBoxDialog dialog =", "+            new ConfirmCheckBoxDialog(_configFrame, title, msg,", "+                                      \"Do not show this message again\",", "+                                      JOptionPane.INFORMATION_MESSAGE,", "+                                      JOptionPane.DEFAULT_OPTION);", "+          if (dialog.show() == JOptionPane.OK_OPTION && dialog.getCheckBoxValue()) {", "+            DrJava.getConfig().setSetting(OptionConstants.WARN_CHANGE_LAF, Boolean.FALSE);"]}], "num": 24027}