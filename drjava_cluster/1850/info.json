{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "51cad9a43b3e613b21f27c4484833747", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d3966f42d9c55a6df757a18c25201b5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "7d708b4318d2a7ffa9f01174e54dfcf52e139a3d", "commitAfterChange": "31c24a84c42340de320b817c6a38b98e08dac42c", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "signatureAfterChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "diff": ["-      private boolean isBooleanReference(Type t) { return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS); }", "+      private boolean isBooleanReference(Type t) {", "+        return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS) && !isSubtype(t, NULL);", "+      }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da337e369fedb1a4cb8d4446f7b4f2a3", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/edu/rice/cs/dynamicjava/symbol/StandardTypeSystem.java", "commitBeforeChange": "dac1911c42074b029b90bbb69267d350628d7300", "commitAfterChange": "6ac6b30c03b8f321199592a97e544cb4056701f0", "methodNumberBeforeChange": 190, "methodNumberAfterChange": 189, "signatureBeforeChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "signatureAfterChange": "   public Pair<Expression, Expression> mergeConditional(final Expression e1, final Expression e2)      throws UnsupportedConversionException", "diff": ["-        return _supportBoxing &&", "+        return !_opt.prohibitBoxing() &&", "-      private boolean isBooleanReference(Type t) { return _supportBoxing && isSubtype(t, BOOLEAN_CLASS); }", "+      private boolean isBooleanReference(Type t) { return !_opt.prohibitBoxing() && isSubtype(t, BOOLEAN_CLASS); }"]}], "num": 1850}