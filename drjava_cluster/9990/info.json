{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a6b5fcec7cb4f4fef29b3b628d994f8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc1e8418faed06067ae62521647c757", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/junit/DefaultJUnitModel.java", "commitBeforeChange": "0e0a6cd0b304183c5602e4fe1c0f1a766f131ce0", "commitAfterChange": "0106f3ce6870b8b4440fc75222d89130d761ff4e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 25, "signatureBeforeChange": "   public void junitClasses(List<String> qualifiedClassnames, List<File> files)", "signatureAfterChange": " public void run()", "diff": ["-    */", "-  public void junitClasses(List<String> qualifiedClassnames, List<File> files) {", "-    Utilities.showDebug(\"junitClasses(\" + qualifiedClassnames + \", \" + files);", "-    synchronized(_compilerModel.getCompilerLock()) {", "-      ", "-      // Check _testInProgress ", "-      if (_testInProgress) return;", "-      ", "-      List<String> testClasses;", "-      try { testClasses = _jvm.findTestClasses(qualifiedClassnames, files); }", "-      catch(IOException e) { throw new UnexpectedException(e); }", "-      ", "-//      System.err.println(\"Found test classes: \" + testClasses);", "-      ", "-      if (testClasses.isEmpty()) {", "-        nonTestCase(true);", "-        return;", "-      }", "-      _notifier.junitClassesStarted();", "-      _testInProgress = true;", "-      try { _jvm.runTestSuite(); } ", "-      catch(Exception e) {", "-//        System.err.println(\"Threw exception \" + e);", "-        _notifier.junitEnded();", "-        _testInProgress = false;", "-        throw new UnexpectedException(e); ", "-      }", "-    }", "-  }", "+        // notify listeners that JUnit testing has finally started!", "+        Utilities.invokeLater(new Runnable() { public void run() { _notifier.junitStarted(); } });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d967243c38d3321d648d48379eedf895", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractGlobalModel.java", "commitBeforeChange": "ea54d5918e0742266441f70659af74f35bca898d", "commitAfterChange": "e6ef9e23d624990cf9fd00ec857466a046415b6a", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 70, "signatureBeforeChange": "          private void cleanHelper(File f)", "signatureAfterChange": "       public String getDiscriptionMessage()", "diff": ["-    private void cleanHelper(File f) {", "-      if (f.isDirectory()) {", "-        ", "-        File fs[] = f.listFiles(new FilenameFilter() {", "-          public boolean accept(File parent, String name) {", "-            return new File(parent, name).isDirectory() || name.endsWith(\".class\");", "-          }", "-        });", "-        ", "-        if (fs!=null) { // listFiles may return null if there's an IO error", "-          for (File kid: fs) { cleanHelper(kid); }", "-        fs = f.listFiles(); // listFiles may return null if there's an IO error", "-        if ((fs!=null) && (fs.length == 0))  f.delete();", "-        ", "-      } else if (f.getName().endsWith(\".class\")) f.delete();", "-    }", "+      }", "+      public String getDiscriptionMessage() {", "+        return \"Deleting files...\";", "+      }"]}], "num": 9990}