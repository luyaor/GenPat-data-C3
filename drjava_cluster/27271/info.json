{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7aae907e1312b9ac22a057e3b3f96748", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a134f7618ed1fd4b99d60af9330df74", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelComment.java", "commitBeforeChange": "771a0aee635c62bc6d0a2000fe605dc1113ef2b9", "commitAfterChange": "d1e56ac5c281c4b03c498f59138895f0f26350fa", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   public void delete(int count)", "signatureAfterChange": "   public void delete(int count)", "diff": ["-    if (count == 0) {", "-      return;", "-    }", "+    if (count == 0) return;", "+    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45e100384c5907fdf89bbeeded756e58", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 465, "signatureBeforeChange": "\r \r   public void forNullLiteral(NullLiteral that)", "signatureAfterChange": "    public void forNullLiteral(NullLiteral that)", "diff": ["-\r", "-  public void forNullLiteral(NullLiteral that) {\r", "-    forNullLiteralDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    forNullLiteralOnly(that);\r", "-  }\r", "+", "+  public void forNullLiteral(NullLiteral that) {", "+    forNullLiteralDoFirst(that);", "+    if (prune(that)) return;", "+    forNullLiteralOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61dcbb979e27f8d6279fd1cb31766e35", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ui/MainFrame.java", "commitBeforeChange": "8cb3141a044af3c7f18d018980f5a22b0b342ea8", "commitAfterChange": "3c8d894853a99e6e32b5d7c276413441b9c000ec", "methodNumberBeforeChange": 859, "methodNumberAfterChange": 859, "signatureBeforeChange": "   public void removeModalWindowAdapter(Window w)", "signatureAfterChange": "   public void removeModalWindowAdapter(Window w)", "diff": ["-    if (! _modalWindowAdapters.containsKey(w)) { // the specified window does not have a modal windowadapter", "-      return;", "-    }", "+    if (! _modalWindowAdapters.containsKey(w)) return; // the specified window does not have a modal windowadapter", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68951da06d93079f17be26ad7332cbc6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 446, "signatureBeforeChange": "\r \r   public void forNoOpExpression(NoOpExpression that)", "signatureAfterChange": "    public void forNoOpExpression(NoOpExpression that)", "diff": ["-\r", "-  public void forNoOpExpression(NoOpExpression that) {\r", "-    forNoOpExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getLeft().visit(this);\r", "-    that.getRight().visit(this);\r", "-    forNoOpExpressionOnly(that);\r", "-  }\r", "+", "+  public void forNoOpExpression(NoOpExpression that) {", "+    forNoOpExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getLeft().visit(this);", "+    that.getRight().visit(this);", "+    forNoOpExpressionOnly(that);", "+  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0e5715d09ff2689ca99cb77d21002e0", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/JExpressionIFPrunableDepthFirstVisitor_void.java", "commitBeforeChange": "e30b4e4c8e80ae8b71c5491615e19a1fcef8844f", "commitAfterChange": "b0ebef930df36d2e563113951e5589e519a9b2a8", "methodNumberBeforeChange": 447, "methodNumberAfterChange": 447, "signatureBeforeChange": "\r \r   public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that)", "signatureAfterChange": "    public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that)", "diff": ["-\r", "-  public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that) {\r", "-    forPositivePrefixIncrementExpressionDoFirst(that);\r", "-    if (prune(that)) { return; }\r", "-    that.getValue().visit(this);\r", "-    forPositivePrefixIncrementExpressionOnly(that);\r", "-  }\r", "+", "+  public void forPositivePrefixIncrementExpression(PositivePrefixIncrementExpression that) {", "+    forPositivePrefixIncrementExpressionDoFirst(that);", "+    if (prune(that)) return;", "+    that.getValue().visit(this);", "+    forPositivePrefixIncrementExpressionOnly(that);", "+  }"]}], "num": 27271}