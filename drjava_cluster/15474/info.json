{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ddfc0cfac5b0fcb1ceff52f95e0cea3e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0424a27bf0f54789e4b054cd452ab8a6", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/IntermediateVisitor.java", "commitBeforeChange": "fda8ed09ab1fd83aa0718b8a14f03f9745835af9", "commitAfterChange": "f82cbb172a00c2d57ed2feb202b1bece43cc7ef2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "          public void testForModifiersAndVisibilityDoFirst()", "signatureAfterChange": "          public void testForModifiersAndVisibilityDoFirst()", "diff": ["-      ModifiersAndVisibility mavs = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for private modifier:\", \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(0).getFirst());", "+      assertEquals(\"The error message should be correct for private modifier:\", ", "+                   \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(0).getFirst());", "-      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs2 = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for 1 bad, 1 good modifier:\", \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(1).getFirst());", "+      assertEquals(\"The error message should be correct for 1 bad, 1 good modifier:\", ", "+                   \"The keyword \\\"final\\\" cannot be used at the Intermediate level\", errors.get(1).getFirst());", "-      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, ", "+      ModifiersAndVisibility mavs3 = new ModifiersAndVisibility(SourceInfo.NO_INFO, ", "-      assertEquals(\"The error message should be correct for 2 bad modifiers:\", \"The keywords \\\"final\\\" \\\"native\\\" cannot be used at the Intermediate level\", errors.get(2).getFirst());", "+      assertEquals(\"The error message should be correct for 2 bad modifiers:\",", "+                   \"The keywords \\\"final\\\" \\\"native\\\" cannot be used at the Intermediate level\", ", "+                   errors.get(2).getFirst());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0dc2dd0647697569c51ffca8cd9d487", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "javalanglevels/src/edu/rice/cs/javalanglevels/LanguageLevelVisitor.java", "commitBeforeChange": "4ebe3c86a9c7402a414ee21bfa81b87bb3fb5032", "commitAfterChange": "a80c90b8428392cd32bdf80517cd25701896680b", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "          public void test_forModifiersAndVisibility()", "signatureAfterChange": "          public void test_forModifiersAndVisibility()", "diff": ["-      ModifiersAndVisibility testMav = new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\", \"private\"});", "+      ModifiersAndVisibility testMav = ", "+        new ModifiersAndVisibility(JExprParser.NO_SOURCE_INFO, new String[] {\"public\", \"private\"});", "-      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers. Can't use private and public together.\", errors.get(0).getFirst());", "+      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers.\" + ", "+                   \" Can't use private and public together.\", errors.get(0).getFirst());", "-      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers. Can't use final and abstract together.\", errors.get(1).getFirst());", "+      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers.\" + ", "+                   \" Can't use final and abstract together.\", errors.get(1).getFirst());", "-      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers. Can't use final and abstract together.\", errors.get(2).getFirst());", "+      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers.\" + ", "+                   \" Can't use final and abstract together.\", errors.get(2).getFirst());", "-      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers. Can't use final and volatile together.\", errors.get(3).getFirst());", "+      assertEquals(\"The error message should be correct.\", \"Illegal combination of modifiers.\" + ", "+                   \" Can't use final and volatile together.\", errors.get(3).getFirst());"]}], "num": 15474}