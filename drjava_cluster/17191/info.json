{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e98dcf876730cfd36ad9a3605da68b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c30789e4d4c2277f14585522e8b4469", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "69fadaac6ec47b6f4924c16b2574b0f6d835a7b3", "commitAfterChange": "bd397d7031a3a6391c14c55c6410a49e1be43ebd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIR pfir)", "diff": ["-    if (name.compareToIgnoreCase(\"proj-root\") == 0) {", "+    else if (name.compareToIgnoreCase(\"proj-root\") == 0) {", "+    else if (name.compareToIgnoreCase(\"breakpoints\") == 0) {", "+       List<DebugBreakpointData> bpList = exp.getRest().accept(breakpointListVisitor);", "+       pfir.setBreakpoints(bpList);", "+    }", "+    else if (name.compareToIgnoreCase(\"watches\") == 0) {", "+      List<DebugWatchData> sList = exp.getRest().accept(WatchListVisitor.ONLY);", "+      pfir.setWatches(sList);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b9132bb8661925035c025befa4f1c43", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/project/ProjectFileParser.java", "commitBeforeChange": "6f37af6087e88b55d504fabdb6eee22be7ba1948", "commitAfterChange": "7fcdc5820c7f1c50a17a282e38bc904783e87e7f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "signatureAfterChange": "   private void evaluateExpression(SEList e, ProjectFileIRImpl pfir, FileListVisitor flv)", "diff": ["+    else if (name.compareToIgnoreCase(\"create-jar-file\") == 0) {", "+      List<DocFile> fList = exp.getRest().accept(flv);", "+      if (fList.size() > 1) {", "+        throw new PrivateProjectException(\"Cannot have more than one \\\"create jar\\\" file\");", "+      }", "+      else if (fList.size() == 0) {", "+        pfir.setCreateJarFile(null);", "+      }", "+      else {", "+        pfir.setCreateJarFile(fList.get(0));", "+      }", "+    }", "+    else if (name.compareToIgnoreCase(\"create-jar-flags\") == 0) {", "+      Integer i = exp.getRest().accept(NumberVisitor.ONLY);", "+      pfir.setCreateJarFlags(i);", "+    }"]}], "num": 17191}