{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8462e739f4f8a125345485bcbc30261", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1099287281e197490a6bfccdc80f99fb", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "e3e15711ffe62e7b19032f1eefe26e2aca48b4e2", "commitAfterChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "   protected static Method selectTheMostSpecificBoxingMethod(List<Method> list)", "signatureAfterChange": "   protected static Method selectTheMostSpecificBoxingMethod(List<Method> list)", "diff": ["-      throw new AmbiguousMethodException(\"Both methods match: \" + best + \", and \" + ambiguous);", "+      throw new AmbiguousMethodException(best, ambiguous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "660b7e9e9375c89b12d120a1f214b51c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "dynamicjava/src/koala/dynamicjava/util/ReflectionUtilities.java", "commitBeforeChange": "e3e15711ffe62e7b19032f1eefe26e2aca48b4e2", "commitAfterChange": "816e415ebd3619964409d5b7c5a5d20fa993a7b5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public static Method lookupMethod(Class<?> cl, String name, Class<?>[] ac)     throws NoSuchMethodException", "signatureAfterChange": "   public static Method lookupMethod(Class<?> cl, String name, Class<?>[] ac)     throws NoSuchMethodException", "diff": ["-    else if (compatible.size() > 1) {", "-      // It is ambiguous if more than one variable-argument ", "-      // method matches the given parameter type list.", "-      throw new AmbiguousMethodException(\"both methods match: \" + ", "-                                         compatible.get(0) + \", and \" +", "-                                         compatible.get(1));", "+    else if (compatible.size() == 1) {", "+      return compatible.get(0); ", "-      return compatible.get(0);", "+      // It is ambiguous if more than one variable-argument ", "+      // method matches the given parameter type list.", "+      throw new AmbiguousMethodException(compatible.get(0), compatible.get(1));"]}], "num": 7118}