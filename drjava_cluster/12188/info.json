{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1094c10ed1695ca17fffb8b9f4becb72", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c62df5e2c22c78dddc62cfbb924a39f5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void testQuotesSimple()", "signatureAfterChange": "  \tpublic void testQuotesSimple()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1._cursor.prevItem().getType());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8216389ce0d56a018007d406a5250c5", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/definitions/reducedmodel/ReducedModelTest.java", "commitBeforeChange": "b400b9a6647834c824c840f4cbeb6ad51c113120", "commitAfterChange": "fe0e37592e5cd7b76c2dc7349707c8f34b36b273", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic void testQuotesSimple()", "signatureAfterChange": "  \tpublic void testQuotesSimple()", "diff": ["-\t\t\tmodel1._cursor.prev();", "-\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1._cursor.current().getType());", "-\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1._cursor.prevItem().getType());", "+\t\t\tmodel1.getCursor().prev();", "+\t\t\tassertEquals(\"#0.0\", \"\\\"\", model1.getCursor().current().getType());", "+\t\t\tassertEquals(\"#0.1\", \"\\\"\", model1.getCursor().prevItem().getType());", "-\t\t\t\t\t\t\t\t\t model1._cursor.current().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().current().getState());", "-\t\t\t\t\t\t\t\t\t model1._cursor.prevItem().getState());", "+\t\t\t\t\t\t\t\t\t model1.getCursor().prevItem().getState());"]}], "num": 12188}