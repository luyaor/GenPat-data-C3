{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e5b90d95a735de7884fcdbac57f09a3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "949d8508f01433b3581911fe88b622dc", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/util/jar/ManifestWriter.java", "commitBeforeChange": "e75c44dca53d5633e70ed3badd03d3667a23d4c8", "commitAfterChange": "c11896795d0041b0e5728ede27aa1fce3454d97c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   protected InputStream getInputStream()", "signatureAfterChange": "   protected InputStream getInputStream()", "diff": ["-    sbuf.append(\": 1.0\"+System.getProperty(\"line.separator\"));", "+    sbuf.append(\": 1.0\" + StringOps.EOL);", "-      sbuf.append(System.getProperty(\"line.separator\"));", "+      sbuf.append(StringOps.EOL);", "-      sbuf.append(System.getProperty(\"line.separator\"));", "+      sbuf.append(StringOps.EOL);", "-    try {", "-      return new ByteArrayInputStream(sbuf.toString().getBytes(\"UTF-8\"));", "-    }", "-    catch (UnsupportedEncodingException e) {", "-      throw new UnexpectedException(e);", "-    }", "+    try { return new ByteArrayInputStream(sbuf.toString().getBytes(\"UTF-8\")); }", "+    catch (UnsupportedEncodingException e) { throw new UnexpectedException(e); }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cbd26b32ded8bcecb60f2f456d591c", "repository": "http://git.code.sf.net/p/drjava/git_repo", "fileName": "drjava/src/edu/rice/cs/drjava/model/AbstractDJDocument.java", "commitBeforeChange": "ba2b5ff7a570417e9dd4c8e447dbbd043b8c1381", "commitAfterChange": "098be4c27233835145531c86355bc697a3b62bfd", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 60, "signatureBeforeChange": "   public int findCharOnLine(final int pos, final char findChar)", "signatureAfterChange": "   public int findCharOnLine(final int pos, final char findChar)", "diff": ["+    ", "+    assert isReadLocked();", "+    ", "-    acquireReadLock();", "+//    acquireReadLock();", "-        int lineStart = getLineStartPos(pos);", "-        int lineEnd = getLineEndPos(pos);", "+        int lineStart = _getLineStartPos(pos);", "+        int lineEnd = _getLineEndPos(pos);", "-          if (_reduced.getStateAtCurrent().equals(FREE)) break; // found matching char", "+          if (_reduced._getStateAtCurrent().equals(FREE)) break; // found matching char", "-    catch (Throwable t) { throw new UnexpectedException(t); }", "-    finally { releaseReadLock(); }", "+    catch (BadLocationException e) { throw new UnexpectedException(e); }", "+//    finally { releaseReadLock(); }"]}], "num": 1897}